admin#appserver-add-module-location#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $module-locations as element(gr:module-location)*#element(configuration)
admin#appserver-add-namespace#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $namespaces as element(gr:namespace)*#element(configuration)
admin#appserver-add-request-blackout#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $request-blackouts as element(gr:request-blackout)*#element(configuration)
admin#appserver-add-schema#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $schemas as element(gr:schema)*#element(configuration)
admin#appserver-add-using-namespace#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $namespaces as element(gr:using-namespace)*#element(configuration)
admin#appserver-copy#5#$config as element(configuration), $appserver-id as xs:unsignedLong, $target-group-id as xs:unsignedLong?, $appserver-name as xs:string, $port as xs:unsignedLong#element(configuration)
admin#appserver-delete#2#$config as element(configuration), $appserver-ids as xs:unsignedLong*#element(configuration)
admin#appserver-delete-module-location#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $module-locations as element(gr:module-location)*#element(configuration)
admin#appserver-delete-namespace#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $namespaces as element(gr:namespace)*#element(configuration)
admin#appserver-delete-request-blackout#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $blackouts as element(gr:request-blackout)*#element(configuration)
admin#appserver-delete-schema#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $schemas as element(gr:schema)*#element(configuration)
admin#appserver-delete-using-namespace#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $namespaces as element(gr:using-namespace)*#element(configuration)
admin#appserver-exists#3#$config as element(configuration), $group-ids as xs:unsignedLong*, $appserver-name as xs:string#xs:boolean
admin#appserver-get-address#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-authentication#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-backlog#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-collation#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-compute-content-length#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-concurrent-request-limit#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-connection-timeout#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-coordinate-system#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-database#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-debug-allow#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-default-error-format#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-default-inference-size#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-default-query-time-limit#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-default-time-limit#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-default-user#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-default-xquery-version#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-display-last-login#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-distribute-timestamps#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-enabled#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-error-handler#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-external-security#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string*
admin#appserver-get-file-log-level#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-group-id#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-host-ids#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong*
admin#appserver-get-id#3#$config as element(configuration), $group-ids as xs:unsignedLong*, $appserver-name as xs:string#xs:unsignedLong*
admin#appserver-get-internal-security#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-keep-alive-timeout#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-last-login#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-log-errors#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-max-inference-size#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-max-query-time-limit#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-max-time-limit#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-module-locations#2#$config as element(configuration), $appserver-id as xs:unsignedLong#element(gr:module-location)*
admin#appserver-get-modules-database#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-multi-version-concurrency-control#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-name#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-namespaces#2#$config as element(configuration), $appserver-id as xs:unsignedLong#element(gr:namespace)*
admin#appserver-get-opsdirector-applog-level#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-byte-order-mark#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-cdata-section-localname#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-cdata-section-namespace-uri#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-doctype-public#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-doctype-system#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-encoding#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-escape-uri-attributes#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-include-content-type#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-include-default-attributes#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-indent#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-indent-tabs#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-indent-untyped#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-media-type#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-method#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-normalization-form#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-omit-xml-declaration#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-sgml-character-entities#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-standalone#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-undeclare-prefixes#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-output-version#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-port#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-pre-commit-trigger-depth#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-pre-commit-trigger-limit#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-privilege#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-profile-allow#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-request-blackouts#2#$config as element(configuration), $appserver-id as xs:unsignedLong#element(gr:request-blackout)*
admin#appserver-get-request-timeout#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-rewrite-resolves-globally#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-root#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-schemas#2#$config as element(configuration), $appserver-id as xs:unsignedLong#element(gr:schema)*
admin#appserver-get-session-timeout#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-ssl-allow-sslv3#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-ssl-allow-tls#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-ssl-certificate-template#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong
admin#appserver-get-ssl-ciphers#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-ssl-client-certificate-authorities#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedLong*
admin#appserver-get-ssl-client-issuer-authority-verification#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-ssl-disabled-protocols#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string*
admin#appserver-get-ssl-hostname#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string?
admin#appserver-get-ssl-require-client-certificate#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:boolean
admin#appserver-get-static-expires#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-threads#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:unsignedInt
admin#appserver-get-type#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-url-rewriter#2#$config as element(configuration), $appserver-id as xs:unsignedLong#xs:string
admin#appserver-get-using-namespaces#2#$config as element(configuration), $appserver-id as xs:unsignedLong#element(gr:using-namespace)*
admin#appserver-one-time-request-blackout#5#$users as xs:unsignedLong*, $roles as xs:unsignedLong*, $start as xs:dateTime, $end as xs:dateTime?, $duration as xs:duration?#element(gr:request-blackout)
admin#appserver-recurring-request-blackout#6#$users as xs:unsignedLong*, $roles as xs:unsignedLong*, $days as xs:string*, $start-time as xs:time?, $end-time as xs:time?, $duration as xs:duration?#element(gr:request-blackout)
admin#appserver-set-address#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-authentication#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-backlog#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-collation#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-compute-content-length#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-concurrent-request-limit#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-connection-timeout#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-coordinate-system#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-database#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#appserver-set-debug-allow#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-default-error-format#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-default-inference-size#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-default-query-time-limit#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-default-time-limit#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-default-user#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#appserver-set-default-xquery-version#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-display-last-login#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-distribute-timestamps#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-enabled#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-error-handler#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-external-security#5#$config as element(configuration), $appserver-id as xs:unsignedLong, $external-security-names as xs:string*, $internal-security as xs:boolean, $authentication as xs:string#element(configuration)
admin#appserver-set-file-log-level#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-internal-security#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-keep-alive-timeout#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-last-login#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedLong?#element(configuration)
admin#appserver-set-log-errors#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-max-inference-size#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-max-query-time-limit#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-max-time-limit#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-modules-database#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as item()#element(configuration)
admin#appserver-set-multi-version-concurrency-control#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-name#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-opsdirector-applog-level#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-byte-order-mark#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-cdata-section-localname#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-cdata-section-namespace-uri#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-doctype-public#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-doctype-system#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-encoding#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-escape-uri-attributes#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-include-content-type#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-include-default-attributes#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-indent#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-indent-tabs#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#item()*
admin#appserver-set-output-indent-untyped#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-media-type#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-method#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-normalization-form#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-omit-xml-declaration#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-sgml-character-entities#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-standalone#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-undeclare-prefixes#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-output-version#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-port#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-pre-commit-trigger-depth#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-pre-commit-trigger-limit#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-privilege#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#appserver-set-profile-allow#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-request-timeout#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-rewrite-resolves-globally#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-root#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-session-timeout#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-ssl-allow-sslv3#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-ssl-allow-tls#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-ssl-certificate-template#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#appserver-set-ssl-ciphers#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-ssl-client-certificate-authorities#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedLong*#element(configuration)
admin#appserver-set-ssl-client-issuer-authority-verification#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-ssl-disabled-protocols#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string*#element(configuration)
admin#appserver-set-ssl-hostname#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#appserver-set-ssl-require-client-certificate#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#appserver-set-static-expires#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-threads#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#appserver-set-url-rewriter#3#$config as element(configuration), $appserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#bucket-assignment-policy#0##element(db:assignment-policy)
admin#can-commit-upgrade#0##xs:boolean
admin#check-range-policy-config#2#$database as node(), $assignments as node()*#empty-sequence()
admin#cluster-get-config-encryption#1#$config as element(configuration)#xs:string
admin#cluster-get-config-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-data-encryption#1#$config as element(configuration)#xs:string
admin#cluster-get-data-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-effective-version#1#$config as element(configuration)#xs:unsignedLong
admin#cluster-get-external-config-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-external-data-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-external-logs-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-foreign-cluster-id#2#$config as element(configuration), $name as xs:string#xs:unsignedLong
admin#cluster-get-foreign-cluster-ids#1#$config as element(configuration)#xs:unsignedLong*
admin#cluster-get-foreign-master-database#3#$config as element(configuration), $foreign-cluster-id as xs:unsignedLong, $database-ids as xs:unsignedLong*#element(db:foreign-master)*
admin#cluster-get-foreign-replica-databases#3#$config as element(configuration), $foreign-cluster-id as xs:unsignedLong, $database-ids as xs:unsignedLong*#element(db:foreign-replicas)*
admin#cluster-get-id#1#$config as element(configuration)#xs:unsignedLong
admin#cluster-get-internal-config-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-internal-data-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-internal-logs-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-keystore-backup-option#1#$config as element(configuration)#xs:string
admin#cluster-get-keystore-host-name#1#$config as element(configuration)#xs:string
admin#cluster-get-keystore-host-names#1#$config as element(configuration)#xs:string*
admin#cluster-get-keystore-kmip-CA-path#1#$config as element(configuration)#xs:string
admin#cluster-get-keystore-kmip-certificate-path#2#$config as element(configuration), $value as xs:string#xs:string
admin#cluster-get-keystore-kmip-key-path#1#$config as element(configuration)#xs:string
admin#cluster-get-keystore-kms-type#1#$config as element(configuration)#xs:string
admin#cluster-get-keystore-port#1#$config as element(configuration)#xs:unsignedLong
admin#cluster-get-keystore-ports#1#$config as element(configuration)#xs:unsignedLong
admin#cluster-get-keystore-wallet-location#1#$config as element(configuration)#xs:string
admin#cluster-get-language-baseline#1#$config as element(configuration)#xs:string
admin#cluster-get-logs-encryption#1#$config as element(configuration)#xs:string
admin#cluster-get-logs-encryption-key-id#1#$config as element(configuration)#xs:string
admin#cluster-get-name#1#$config as element(configuration)#xs:string
admin#cluster-get-opsdirector-config#1#$config as element(configuration)#xs:string
admin#cluster-get-opsdirector-log-level#1#$config as element(configuration)#xs:string
admin#cluster-get-opsdirector-metering#1#$config as element(configuration)#xs:string
admin#cluster-get-opsdirector-session-endpoint#1#$config as element(configuration)#xs:string
admin#cluster-get-ssl-fips-enabled#1#$config as element(configuration)#xs:boolean
admin#cluster-get-xdqp-bootstrap-hosts#1#$config as element(configuration)#xs:unsignedLong*
admin#cluster-get-xdqp-ssl-certificate#1#$config as element(configuration)#xs:string
admin#cluster-get-xdqp-ssl-private-key#1#$config as element(configuration)#xs:string
admin#cluster-rotate-config-encryption-key-id#1#$config as element(configuration)#element(configuration)
admin#cluster-rotate-data-encryption-key-id#1#$config as element(configuration)#element(configuration)
admin#cluster-rotate-logs-encryption-key-id#1#$config as element(configuration)#element(configuration)
admin#cluster-set-config-encryption#2#$config as element(configuration), $config-encryption as xs:string#element(configuration)
admin#cluster-set-config-encryption-key-id#2#$config as element(configuration), $config-encryption-key-id as xs:string#element(configuration)
admin#cluster-set-data-encryption#2#$config as element(configuration), $data-encryption as xs:string#element(configuration)
admin#cluster-set-data-encryption-key-id#2#$config as element(configuration), $data-encryption-key-id as xs:string#element(configuration)
admin#cluster-set-external-config-encryption-key-id#2#$config as element(configuration), $external-config-encryption-key-id as xs:string#element(configuration)
admin#cluster-set-external-data-encryption-key-id#2#$config as element(configuration), $external-data-encryption-key-id as xs:string#element(configuration)
admin#cluster-set-external-logs-encryption-key-id#2#$config as element(configuration), $external-logs-encryption-key-id as xs:string#element(configuration)
admin#cluster-set-keystore-backup-option#2#$config as element(configuration), $backup-option as xs:NMTOKEN#element(configuration)
admin#cluster-set-keystore-host-name#2#$config as element(configuration), $host-name as xs:string#element(configuration)
admin#cluster-set-keystore-host-names#2#$config as element(configuration), $host-names as xs:string*#element(configuration)
admin#cluster-set-keystore-kmip-CA-path#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-keystore-kmip-certificate-path#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-keystore-kmip-key-path#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-keystore-kms-type#2#$config as element(configuration), $kms-type as xs:string#element(configuration)
admin#cluster-set-keystore-logs-encryption-passphrase#2#$config as element(configuration), $passphrase as xs:string#element(configuration)
admin#cluster-set-keystore-passphrase#3#$config as element(configuration), $current-passphrase as xs:string, $new-passphrase as xs:string#element(configuration)
admin#cluster-set-keystore-port#2#$config as element(configuration), $port as xs:unsignedLong#element(configuration)
admin#cluster-set-keystore-ports#2#$config as element(configuration), $ports as xs:unsignedInt*#element(configuration)
admin#cluster-set-keystore-wallet-location#2#$config as element(configuration), $dir-name as xs:string#element(configuration)
admin#cluster-set-language-baseline#2#$config as element(configuration), $baseline as xs:string#element(configuration)
admin#cluster-set-logs-encryption#2#$config as element(configuration), $logs-encryption as xs:string#element(configuration)
admin#cluster-set-logs-encryption-key-id#2#$logs as element(configuration), $logs-encryption-key-id as xs:string#element(configuration)
admin#cluster-set-name#2#$config as element(configuration), $name as xs:string#element(configuration)
admin#cluster-set-opsdirector-config#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-opsdirector-log-level#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-opsdirector-metering#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-opsdirector-session-endpoint#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-ssl-fips-enabled#2#$config as element(configuration), $flag as xs:boolean#element(configuration)
admin#cluster-set-xdqp-bootstrap-hosts#2#$config as element(configuration), $host-ids as xs:unsignedLong*#element(configuration)
admin#cluster-set-xdqp-ssl-certificate#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#cluster-set-xdqp-ssl-private-key#2#$config as element(configuration), $value as xs:string#element(configuration)
admin#database-add-backup#3#$config as element(configuration), $database-id as xs:unsignedLong, $backups as element(db:database-backup)*#element(configuration)
admin#database-add-default-ruleset#3#$config as element(configuration), $database-id as xs:unsignedLong, $rulesets as element(db:default-ruleset)*#element(configuration)
admin#database-add-element-attribute-word-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $element-attribute-word-lexicons as element(db:element-attribute-word-lexicon)*#element(configuration)
admin#database-add-element-word-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $element-word-lexicons as element(db:element-word-lexicon)*#element(configuration)
admin#database-add-element-word-query-through#3#$config as element(configuration), $database-id as xs:unsignedLong, $element-word-query-throughs as element(db:element-word-query-through)*#element(configuration)
admin#database-add-field#3#$config as element(configuration), $database-id as xs:unsignedLong, $fields as element(db:field)*#element(configuration)
admin#database-add-field-excluded-element#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $excluded-elements as element(db:excluded-element)*#element(configuration)
admin#database-add-field-included-element#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $included-elements as element(db:included-element)*#element(configuration)
admin#database-add-field-paths#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $field-paths as element(db:field-path)*#element(configuration)
admin#database-add-field-tokenizer-override#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $tokenizer-overrides as element(db:tokenizer-override)*#element(configuration)
admin#database-add-field-word-lexicon#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $word-lexicons as element(db:word-lexicon)*#element(configuration)
admin#database-add-foreign-database#4#$config as element(configuration), $database-id as xs:unsignedLong, $foreign-cluster-id as xs:unsignedLong, $foreign-database-id as xs:unsignedLong#element(configuration)
admin#database-add-foreign-replicas#3#$config as element(configuration), $database-id as xs:unsignedLong, $replicas as element(db:foreign-replica)*#element(configuration)
admin#database-add-fragment-parent#3#$config as element(configuration), $database-id as xs:unsignedLong, $fragment-parents as element(db:fragment-parent)*#element(configuration)
admin#database-add-fragment-root#3#$config as element(configuration), $database-id as xs:unsignedLong, $fragment-roots as element(db:fragment-root)*#element(configuration)
admin#database-add-geospatial-element-attribute-pair-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-attribute-pair-indexes as element(db:geospatial-element-attribute-pair-index)*#element(configuration)
admin#database-add-geospatial-element-child-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-child-indexes as element(db:geospatial-element-child-index)*#element(configuration)
admin#database-add-geospatial-element-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-indexes as element(db:geospatial-element-index)*#element(configuration)
admin#database-add-geospatial-element-pair-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-pair-indexes as element(db:geospatial-element-pair-index)*#element(configuration)
admin#database-add-geospatial-path-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-path-indexes as element(db:geospatial-path-index)*#element(configuration)
admin#database-add-geospatial-region-path-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-region-path-indexes as element(db:geospatial-region-path-index)*#element(configuration)
admin#database-add-merge-blackout#3#$config as element(configuration), $database-id as xs:unsignedLong, $merge-blackouts as element(db:merge-blackout)*#element(configuration)
admin#database-add-path-namespace#3#$config as element(configuration), $database-id as xs:unsignedLong, $path-namespaces as element(db:path-namespace)*#element(configuration)
admin#database-add-phrase-around#3#$config as element(configuration), $database-id as xs:unsignedLong, $phrase-arounds as element(db:phrase-around)*#element(configuration)
admin#database-add-phrase-through#3#$config as element(configuration), $database-id as xs:unsignedLong, $phrase-throughs as element(db:phrase-through)*#element(configuration)
admin#database-add-range-element-attribute-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $attribute-indexes as element(db:range-element-attribute-index)*#element(configuration)
admin#database-add-range-element-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $range-indexes as element(db:range-element-index)*#element(configuration)
admin#database-add-range-field-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $range-indexes as element(db:range-field-index)*#element(configuration)
admin#database-add-range-path-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $range-indexes as element(db:range-path-index)*#element(configuration)
admin#database-add-word-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $word-lexicons as element(db:word-lexicon)*#element(configuration)
admin#database-add-word-query-excluded-element#3#$config as element(configuration), $database-id as xs:unsignedLong, $excluded-elements as element(db:excluded-element)*#element(configuration)
admin#database-add-word-query-included-element#3#$config as element(configuration), $database-id as xs:unsignedLong, $included-elements as element(db:included-element)*#element(configuration)
admin#database-attach-forest#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#element(configuration)
admin#database-attach-sub-database#4#$config as element(configuration), $database-id as xs:unsignedLong, $subdatabase-id as xs:unsignedLong, [$foreign-cluster-id as xs:unsignedLong]#element(configuration)
admin#database-backup-get-enabled#3#$config as element(configuration), $database-id as xs:unsignedLong, $backup-id as xs:unsignedLong#xs:boolean
admin#database-backup-set-enabled#4#$config as element(configuration), $database-id as xs:unsignedLong, $backup-id as xs:unsignedLong, $enabled as xs:boolean#element(configuration)
admin#database-copy#3#$config as element(configuration), $database-id as xs:unsignedLong, $database-name as xs:string#element(configuration)
admin#database-create#4#$config as element(configuration), $database-name as xs:string, $security-db as xs:unsignedLong, $schema-db as xs:unsignedLong?#element(configuration)
admin#database-daily-backup#11#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $start-time as xs:time, $max-backups as xs:unsignedLong, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-daily-incremental-backup#12#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $start-time as xs:time, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$incremental-dir as xs:string?], [$purge-journal-archive as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-delete#2#$config as element(configuration), $database-ids as xs:unsignedLong*#element(configuration)
admin#database-delete-all-range-field-indexes#3#$config as element(configuration), $database-id as xs:unsignedLong, $fieldnames as xs:string*#element(configuration)
admin#database-delete-backup#3#$config as element(configuration), $database-id as xs:unsignedLong, $backups as element(db:database-backup)*#element(configuration)
admin#database-delete-backup-by-id#3#$config as element(configuration), $database-id as xs:unsignedLong, $backup-id as xs:unsignedLong*#element(configuration)
admin#database-delete-default-ruleset#3#$config as element(configuration), $database-id as xs:unsignedLong, $rulesets as element(db:default-ruleset)*#element(configuration)
admin#database-delete-element-attribute-word-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $lexicons as element(db:element-attribute-word-lexicon)*#element(configuration)
admin#database-delete-element-word-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $element-word-lexicons as element(db:element-word-lexicon)*#element(configuration)
admin#database-delete-element-word-query-through#3#$config as element(configuration), $database-id as xs:unsignedLong, $throughs as element(db:element-word-query-through)*#element(configuration)
admin#database-delete-field#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-names as xs:string*#element(configuration)
admin#database-delete-field-excluded-element#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $excluded-elements as element(db:excluded-element)*#element(configuration)
admin#database-delete-field-included-element#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $included-elements as element(db:included-element)*#element(configuration)
admin#database-delete-field-paths#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $field-paths as element(db:field-path)*#element(configuration)
admin#database-delete-field-tokenizer-override#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $tokenizer-overrides as element(db:tokenizer-override)*#element(configuration)
admin#database-delete-field-word-lexicon#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $word-lexicons as element(db:word-lexicon)*#element(configuration)
admin#database-delete-foreign-master#2#$config as element(configuration), $database-id as xs:unsignedLong#element(configuration)
admin#database-delete-foreign-replicas#3#$config as element(configuration), $database-id as xs:unsignedLong, $foreign-replicas as element(db:foreign-replica)*#element(configuration)
admin#database-delete-fragment-parent#3#$config as element(configuration), $database-id as xs:unsignedLong, $fragment-parents as element(db:fragment-parent)*#element(configuration)
admin#database-delete-fragment-root#3#$config as element(configuration), $database-id as xs:unsignedLong, $fragment-roots as element(db:fragment-root)*#element(configuration)
admin#database-delete-geospatial-element-attribute-pair-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $indexes as element(db:geospatial-element-attribute-pair-index)*#element(configuration)
admin#database-delete-geospatial-element-child-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-child-indexes as element(db:geospatial-element-child-index)*#element(configuration)
admin#database-delete-geospatial-element-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-indexes as element(db:geospatial-element-index)*#element(configuration)
admin#database-delete-geospatial-element-pair-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-element-pair-indexes as element(db:geospatial-element-pair-index)*#element(configuration)
admin#database-delete-geospatial-path-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-path-indexes as element(db:geospatial-path-index)*#element(configuration)
admin#database-delete-geospatial-region-path-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $geospatial-region-path-indexes as element(db:geospatial-region-path-index)*#element(configuration)
admin#database-delete-merge-blackout#3#$config as element(configuration), $database-id as xs:unsignedLong, $blackouts as element(db:merge-blackout)*#element(configuration)
admin#database-delete-path-namespace#3#$config as element(configuration), $database-id as xs:unsignedLong, $path-namespaces as element(db:path-namespace)*#element(configuration)
admin#database-delete-phrase-around#3#$config as element(configuration), $database-id as xs:unsignedLong, $phrase-arounds as element(db:phrase-around)*#element(configuration)
admin#database-delete-phrase-through#3#$config as element(configuration), $database-id as xs:unsignedLong, $phrase-throughs as element(db:phrase-through)*#element(configuration)
admin#database-delete-range-element-attribute-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $attribute-indexes as element(db:range-element-attribute-index)*#element(configuration)
admin#database-delete-range-element-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $range-indexes as element(db:range-element-index)*#element(configuration)
admin#database-delete-range-field-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $range-indexes as element(db:range-field-index)*#element(configuration)
admin#database-delete-range-path-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $range-indexes as element(db:range-path-index)*#element(configuration)
admin#database-delete-word-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $word-lexicons as element(db:word-lexicon)*#element(configuration)
admin#database-delete-word-query-excluded-element#3#$config as element(configuration), $database-id as xs:unsignedLong, $excluded-elements as element(db:excluded-element)*#element(configuration)
admin#database-delete-word-query-included-element#3#$config as element(configuration), $database-id as xs:unsignedLong, $included-elements as element(db:included-element)*#element(configuration)
admin#database-detach-forest#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#element(configuration)
admin#database-detach-sub-database#4#$config as element(configuration), $database-id as xs:unsignedLong, $subdatabase-id as xs:unsignedLong, [$foreign-cluster-id as xs:unsignedLong]#element(configuration)
admin#database-element-attribute-reference#6#$scalar-type as xs:string, $parent-namespace as xs:string?, $parent-localname as xs:string, $namespace as xs:string?, $localname as xs:string, $collation as xs:string?#element(db:element-attribute-reference)
admin#database-element-attribute-word-lexicon#5#$parent-namespace as xs:string?, $parent-localname as xs:string, $namespace as xs:string?, $localname as xs:string, $collation as xs:string#element(db:element-attribute-word-lexicon)
admin#database-element-reference#4#$scalar-type as xs:string, $namespace as xs:string?, $localname as xs:string, $collation as xs:string?#element(db:element-reference)
admin#database-element-word-lexicon#3#$namespace as xs:string?, $localname as xs:string, $collation as xs:string#element(db:element-word-lexicon)
admin#database-element-word-query-through#2#$namespace as xs:string?, $localname as xs:string#element(db:element-word-query-through)
admin#database-employ-forest#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#element(configuration)
admin#database-excluded-element#5#$namespace as xs:string?, $localname as xs:string, [$attribute-namespace as xs:string?], [$attribute-localname as xs:string], [$attribute-value as xs:string]#element(db:excluded-element)
admin#database-exists#2#$config as element(configuration), $database-name as xs:string#xs:boolean
admin#database-field#2#$field-name as xs:string, $include-root as xs:boolean#element(db:field)
admin#database-field-path#2#$field-path as xs:string, $weight as xs:double#element(db:field-path)
admin#database-field-reference#3#$scalar-type as xs:string, $fieldname as xs:string, $collation as xs:string?#element(db:field-reference)
admin#database-foreign-master#3#$foreign-cluster-id as xs:unsignedLong, $foreign-database-id as xs:unsignedLong, $connect-forests-by-name as xs:boolean#element(db:foreign-master)
admin#database-foreign-master-get-cluster-id#1#$foreign-master as element(db:foreign-master)#xs:unsignedLong
admin#database-foreign-master-get-connect-forests-by-name#1#$foreign-master as element(db:foreign-master)#xs:boolean
admin#database-foreign-master-get-database-id#1#$foreign-master as element(db:foreign-master)#xs:unsignedLong
admin#database-foreign-replica#6#$foreign-cluster-id as xs:unsignedLong, $foreign-database-id as xs:unsignedLong, $connect-forests-by-name as xs:boolean, $lag-limit as xs:unsignedInt, [$replication-enabled as xs:boolean], [$queue-size as xs:unsignedInt]#element(db:foreign-replica)
admin#database-foreign-replica-get-cluster-id#1#$foreign-replica as element(db:foreign-replica)#xs:unsignedLong
admin#database-foreign-replica-get-connect-forests-by-name#1#$foreign-replica as element(db:foreign-replica)#xs:boolean
admin#database-foreign-replica-get-database-id#1#$foreign-replica as element(db:foreign-replica)#xs:unsignedLong
admin#database-foreign-replica-get-lag-limit#1#$foreign-replica as element(db:foreign-replica)#xs:unsignedInt
admin#database-foreign-replica-get-queue-size#1#$foreign-replica as element(db:foreign-replica)#xs:unsignedLong
admin#database-foreign-replica-get-replication-enabled#1#$foreign-replica as element(db:foreign-replica)#xs:boolean
admin#database-foreign-replica-set-lag-limit#2#$foreign-replica as element(db:foreign-replica), $lag-limit as xs:unsignedInt#element(db:foreign-replica)
admin#database-foreign-replica-set-queue-size#2#$foreign-replica as element(db:foreign-replica), $value as xs:unsignedInt#element(db:foreign-replica)
admin#database-foreign-replica-set-replication-enabled#2#$foreign-replica as element(db:foreign-replica), $enabled as xs:boolean#element(db:foreign-replica)
admin#database-fragment-parent#2#$namespace as xs:string?, $localname as xs:string#element(db:fragment-parent)
admin#database-fragment-root#2#$namespace as xs:string?, $localname as xs:string#element(db:fragment-root)
admin#database-geospatial-element-attribute-pair-index#9#$parent-namespace as xs:string?, $parent-localname as xs:string, $latitude-namespace as xs:string?, $latitude-localname as xs:string, $longitude-namespace as xs:string?, $longitude-localname as xs:string, $coordinate-system as xs:string, $range-value-positions as xs:boolean, [$invalid-values as xs:string]#element(db:geospatial-element-attribute-pair-index)
admin#database-geospatial-element-child-index#8#$parent-namespace as xs:string?, $parent-localname as xs:string, $namespace as xs:string?, $localname as xs:string, $coordinate-system as xs:string, $range-value-positions as xs:boolean, [$point-format as xs:string], [$invalid-values as xs:string]#element(db:geospatial-element-child-index)
admin#database-geospatial-element-index#6#$namespace as xs:string?, $localname as xs:string, $coordinate-system as xs:string, $range-value-positions as xs:boolean, [$point-format as xs:string], [$invalid-values as xs:string]#element(db:geospatial-element-index)
admin#database-geospatial-element-pair-index#9#$parent-namespace as xs:string?, $parent-localname as xs:string, $latitude-namespace as xs:string?, $latitude-localname as xs:string, $longitude-namespace as xs:string?, $longitude-localname as xs:string, $coordinate-system as xs:string, $range-value-positions as xs:boolean, [$invalid-values as xs:string]#element(db:geospatial-element-pair-index)
admin#database-geospatial-path-index#5#$pathexpr as xs:string, $coordinate-system as xs:string, $range-value-positions as xs:boolean, $point-format as xs:string, $invalid-values as xs:string#element(db:geospatial-path-index)
admin#database-geospatial-region-path-index#5#$pathexpr as xs:string, $coordinate-system as xs:string, $geohash-precision as xs:integer, $invalid-values as xs:string, [$units as xs:string?]#element(db:geospatial-region-path-index)
admin#database-get-assignment-policy#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:assignment-policy)
admin#database-get-attached-forests#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedLong*
admin#database-get-attribute-value-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-backups#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:database-backup)*
admin#database-get-collection-lexicon#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-config-for-foreign-master-on-foreign-cluster#2#$config as element(configuration), $foreign-cluster-id as xs:unsignedLong#element(db:database)*
admin#database-get-config-for-foreign-replicas-on-foreign-cluster#2#$config as element(configuration), $foreign-cluster-id as xs:unsignedLong#element(db:database)*
admin#database-get-data-encryption#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-default-rulesets#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:default-ruleset)*
admin#database-get-directory-creation#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-element-attribute-word-lexicons#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:element-attribute-word-lexicon)*
admin#database-get-element-value-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-element-word-lexicons#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:element-word-lexicon)*
admin#database-get-element-word-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-element-word-query-throughs#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:element-word-query-through)*
admin#database-get-enabled#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-encryption-key-id#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-expunge-locks#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-fast-case-sensitive-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-diacritic-sensitive-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-element-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-element-phrase-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-element-trailing-wildcard-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-element-word-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-phrase-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-fast-reverse-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-field#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#element(db:field)
admin#database-get-field-excluded-elements#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#element(db:excluded-element)*
admin#database-get-field-fast-case-sensitive-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-fast-diacritic-sensitive-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-fast-phrase-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-include-document-root#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean
admin#database-get-field-included-elements#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#element(db:included-element)*
admin#database-get-field-one-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-paths#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#element(db:field-path)*
admin#database-get-field-stemmed-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:string?
admin#database-get-field-three-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-three-character-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-tokenizer-overrides#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#element(db:tokenizer-override)*
admin#database-get-field-trailing-wildcard-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-trailing-wildcard-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-two-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-value-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-value-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-field-word-lexicons#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#element(db:word-lexicon)*
admin#database-get-field-word-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string#xs:boolean?
admin#database-get-fields#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:field)*
admin#database-get-foreign-master#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:foreign-master)?
admin#database-get-foreign-replicas#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:foreign-replica)*
admin#database-get-format-compatibility#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-fragment-parents#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:fragment-parent)*
admin#database-get-fragment-roots#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:fragment-root)*
admin#database-get-geospatial-element-attribute-pair-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:geospatial-element-attribute-pair-index)*
admin#database-get-geospatial-element-child-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:geospatial-element-child-index)*
admin#database-get-geospatial-element-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:geospatial-element-index)*
admin#database-get-geospatial-element-pair-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:geospatial-element-pair-index)*
admin#database-get-geospatial-path-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:geospatial-path-index)*
admin#database-get-geospatial-region-path-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:geospatial-region-path-index)*
admin#database-get-id#2#$config as element(configuration), $database-name as xs:string#xs:unsignedLong
admin#database-get-in-memory-geospatial-region-index-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-in-memory-limit#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-in-memory-list-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-in-memory-range-index-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-in-memory-reverse-index-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-in-memory-tree-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-in-memory-triple-index-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-index-detection#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-inherit-collections#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-inherit-permissions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-inherit-quality#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-journal-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-journaling#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-language#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-large-size-threshold#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-locking#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-maintain-directory-last-modified#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-maintain-last-modified#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-merge-blackouts#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:merge-blackout)*
admin#database-get-merge-max-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-merge-min-ratio#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-merge-min-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-merge-priority#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-merge-timestamp#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:long
admin#database-get-name#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-one-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-path-namespaces#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:path-namespace)*
admin#database-get-phrase-arounds#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:phrase-around)*
admin#database-get-phrase-throughs#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:phrase-through)*
admin#database-get-positions-list-max-size#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-preallocate-journals#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-preload-mapped-data#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-preload-replica-mapped-data#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-range-element-attribute-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:range-element-attribute-index)*
admin#database-get-range-element-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:range-element-index)*
admin#database-get-range-field-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:range-field-index)*
admin#database-get-range-index-optimize#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-range-path-indexes#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:range-path-index)*
admin#database-get-range-policy-partition-key#1#$range-policy as element(db:assignment-policy)#cts:reference
admin#database-get-rebalancer-enable#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-rebalancer-throttle#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-reindexer-enable#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-reindexer-throttle#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedInt
admin#database-get-reindexer-timestamp#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedLong
admin#database-get-retain-until-backup#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-retired-forests#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedLong*
admin#database-get-schema-database#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedLong
admin#database-get-security-database#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedLong
admin#database-get-stemmed-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-tf-normalization#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string
admin#database-get-three-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-three-character-word-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-trailing-wildcard-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-trailing-wildcard-word-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-triggers-database#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:unsignedLong
admin#database-get-triple-index#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-triple-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-two-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-uri-lexicon#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-word-lexicons#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:word-lexicon)*
admin#database-get-word-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-word-query-excluded-elements#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:excluded-element)*
admin#database-get-word-query-fast-case-sensitive-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-fast-diacritic-sensitive-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-fast-phrase-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-include-document-root#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-get-word-query-included-elements#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:included-element)*
admin#database-get-word-query-one-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-stemmed-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string?
admin#database-get-word-query-three-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-three-character-word-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-trailing-wildcard-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-trailing-wildcard-word-positions#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-two-character-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-query-word-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean?
admin#database-get-word-searches#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:boolean
admin#database-hourly-backup#11#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $start-minute as xs:nonNegativeInteger, $max-backups as xs:unsignedLong, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-hourly-incremental-backup#12#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $start-minute as xs:nonNegativeInteger, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$incremental-dir as xs:string?], [$purge-journal-archive as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-in-use-path-namespace-prefixes#2#$config as element(configuration), $database-id as xs:unsignedLong#xs:string*
admin#database-included-element#6#$namespace as xs:string?, $localname as xs:string, $weight as xs:double, $attribute-namespace as xs:string?, $attribute-localname as xs:string, $attribute-value as xs:string#element(db:included-element)
admin#database-is-forest-employed#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#xs:boolean
admin#database-is-forest-retired#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#xs:boolean
admin#database-metadata-field#1#$name as xs:string#element(configuration)
admin#database-minutely-backup#10#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $max-backups as xs:unsignedLong, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-minutely-incremental-backup#11#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$incremental-dir as xs:string?], [$purge-journal-archive as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-monthly-backup#12#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $backup-month-day as xs:unsignedLong, $start-time as xs:time, $max-backups as xs:unsignedLong, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-monthly-incremental-backup#13#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $backup-month-day as xs:unsignedLong, $start-time as xs:time, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$incremental-dir as xs:string?], [$purge-journal-archive as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-one-time-backup#10#$backup-dir as xs:string, $start as xs:dateTime, $max-backups as xs:unsignedLong, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-one-time-incremental-backup#11#$backup-dir as xs:string, $start as xs:dateTime, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$incremental-dir as xs:string?], [$purge-journal-archive as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element(db:database-backup)
admin#database-one-time-merge-blackout#5#$limit as xs:unsignedInt, $merge-priority as xs:string, $start as xs:dateTime, $end as xs:dateTime?, $duration as xs:duration?#element(db:merge-blackout)
admin#database-path-field#2#$field-name as xs:string, $field-paths as element(db:field-path)+#element(db:field)
admin#database-path-namespace#2#$prefix as xs:string, $namespace-uri as xs:string#element(db:path-namespace)
admin#database-path-reference#3#$scalar-type as xs:string, $pathexpr as xs:string, $collation as xs:string?#element(db:path-reference)
admin#database-phrase-around#2#$namespace as xs:string?, $localname as xs:string#element(db:phrase-around)
admin#database-phrase-through#2#$namespace as xs:string?, $localname as xs:string#element(db:phrase-through)
admin#database-range-element-attribute-index#8#$scalar-type as xs:string, $parent-namespace as xs:string?, $parent-localname as xs:string, $namespace as xs:string?, $localname as xs:string, $collation as xs:string?, $range-value-positions as xs:boolean, [$invalid-values as xs:string]#element(db:range-element-attribute-index)
admin#database-range-element-index#6#$scalar-type as xs:string, $namespace as xs:string?, $localname as xs:string, $collation as xs:string?, $range-value-positions as xs:boolean, [$invalid-values as xs:string]#element(db:range-element-index)
admin#database-range-field-index#5#$scalar-type as xs:string, $fieldname as xs:string, $collation as xs:string?, $range-value-positions as xs:boolean, [$invalid-values as xs:string]#element(db:range-field-index)
admin#database-range-path-index#6#$database-id as xs:unsignedLong, $scalar-type as xs:string, $pathexpr as xs:string, $collation as xs:string?, $range-value-positions as xs:boolean, $invalid-values as xs:string#element(db:range-path-index)
admin#database-recurring-merge-blackout#6#$limit as xs:unsignedInt, $merge-priority as xs:string, $days as xs:string+, $start-time as xs:time?, $end-time as xs:time?, $duration as xs:duration?#element(db:merge-blackout)
admin#database-remove-foreign-database#4#$config as element(configuration), $database-id as xs:unsignedLong, $foreign-cluster-id as xs:unsignedLong, $foreign-database-id as xs:unsignedLong#element(configuration)
admin#database-reorder-forests#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-ids as xs:unsignedLong*#element(configuration)
admin#database-retire-forest#3#$config as element(configuration), $database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#element(configuration)
admin#database-ruleset#1#$location as xs:string#element(db:default-ruleset)
admin#database-set-assignment-policy#3#$config as element(configuration), $database-id as xs:unsignedLong, $policy as element(db:assignment-policy)#element(configuration)
admin#database-set-attribute-value-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-collection-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-data-encryption#3#$config as element(configuration), $database-id as xs:unsignedLong, $data-encryption as xs:string#element(configuration)
admin#database-set-directory-creation#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-element-value-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-element-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-enabled#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-encryption-key-id#3#$config as element(configuration), $database-id as xs:unsignedLong, $encryption-key-id as xs:string#element(configuration)
admin#database-set-expunge-locks#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-fast-case-sensitive-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-diacritic-sensitive-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-element-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-element-phrase-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-element-trailing-wildcard-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-element-word-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-phrase-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-fast-reverse-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-field-fast-case-sensitive-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-fast-diacritic-sensitive-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-fast-phrase-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-include-document-root#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean#element(configuration)
admin#database-set-field-name#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:string#element(configuration)
admin#database-set-field-one-character-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-stemmed-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:string?#element(configuration)
admin#database-set-field-three-character-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-three-character-word-positions#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-trailing-wildcard-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-trailing-wildcard-word-positions#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-two-character-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-value-positions#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-value-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-field-word-searches#4#$config as element(configuration), $database-id as xs:unsignedLong, $field-name as xs:string, $value as xs:boolean?#element(configuration)
admin#database-set-foreign-master#3#$config as element(configuration), $database-id as xs:unsignedLong, $foreign-master as element(db:foreign-master)#element(configuration)
admin#database-set-foreign-replicas#3#$config as element(configuration), $database-id as xs:unsignedLong, $replicas as element(db:foreign-replica)*#element(configuration)
admin#database-set-format-compatibility#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-in-memory-geospatial-region-index-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-in-memory-limit#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-in-memory-list-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-in-memory-range-index-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-in-memory-reverse-index-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-in-memory-tree-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-in-memory-triple-index-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-index-detection#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-inherit-collections#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-inherit-permissions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-inherit-quality#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-journal-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-journaling#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-language#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-large-size-threshold#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-locking#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-maintain-directory-last-modified#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-maintain-last-modified#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-merge-max-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-merge-min-ratio#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-merge-min-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-merge-priority#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-merge-timestamp#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:long#element(configuration)
admin#database-set-name#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-one-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-positions-list-max-size#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-preallocate-journals#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-preload-mapped-data#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-preload-replica-mapped-data#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-range-index-optimize#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-rebalancer-enable#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-rebalancer-throttle#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-reindexer-enable#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-reindexer-throttle#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#database-set-reindexer-timestamp#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#database-set-retain-until-backup#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-schema-database#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#database-set-security-database#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#database-set-stemmed-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-tf-normalization#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#database-set-three-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-three-character-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-trailing-wildcard-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-trailing-wildcard-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-triggers-database#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#database-set-triple-index#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-triple-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-two-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-uri-lexicon#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-word-query-fast-case-sensitive-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-fast-diacritic-sensitive-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-fast-phrase-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-include-document-root#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-set-word-query-one-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-stemmed-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:string?#element(configuration)
admin#database-set-word-query-three-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-three-character-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-trailing-wildcard-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-trailing-wildcard-word-positions#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-two-character-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-query-word-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean?#element(configuration)
admin#database-set-word-searches#3#$config as element(configuration), $database-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#database-sub-databases#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:database-reference)*
admin#database-super-databases#2#$config as element(configuration), $database-id as xs:unsignedLong#element(db:database-reference)*
admin#database-tokenizer-override#2#$character as xs:string, $class as xs:string#element(db:tokenizer-override)
admin#database-validate-field-path#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-path as element(db:field-path)#empty-sequence()
admin#database-validate-field-paths#3#$config as element(configuration), $database-id as xs:unsignedLong, $field-paths as element(db:field-path)*#empty-sequence()
admin#database-validate-path-expression#4#$config as element(configuration), $database-id as xs:unsignedLong, $pathexpr as xs:string, $ignore-ns as xs:boolean#xs:boolean
admin#database-validate-path-fields#3#$config as element(configuration), $database-id as xs:unsignedLong, $fields as element(db:field)*#empty-sequence()
admin#database-validate-path-namespaces#3#$config as element(configuration), $database-id as xs:unsignedLong, $pathexpr as xs:string#xs:string*
admin#database-weekly-backup#12#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $days as xs:string+, $start-time as xs:time, $max-backups as xs:unsignedLong, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$journal-archiving as xs:boolean], [$journal-archive-path as xs:string], [$lag-limit as xs:unsignedLong]#element(db:database-backup)
admin#database-weekly-incremental-backup#13#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $days as xs:string+, $start-time as xs:time, $backup-security-db as xs:boolean, $backup-schemas-db as xs:boolean, $backup-triggers-db as xs:boolean, [$include-replicas as xs:boolean], [$incremental-dir as xs:string?], [$purge-journal-archive as xs:boolean?], [$journal-archiving as xs:boolean], [$journal-archive-path as xs:string], [$lag-limit as xs:unsignedLong]#element(db:database-backup)
admin#database-word-lexicon#1#$collation as xs:string#element(db:word-lexicon)
admin#foreign-cluster-create#11#$config as element(configuration), $cluster-id as xs:unsignedLong, $cluster-name as xs:string, $xdqp-timeout as xs:unsignedInt?, $host-timeout as xs:unsignedInt?, $ssl-certificate as xs:string?, $xdqp-ssl-enabled as xs:boolean?, $xdqp-ssl-allow-sslv3 as xs:boolean?, $xdqp-ssl-allow-tls as xs:boolean?, $xdqp-ssl-ciphers as xs:string?, $foreign-bootstrap-hosts as element(cl:foreign-host)*#element(configuration)
admin#foreign-cluster-delete#2#$config as element(configuration), $cluster-id as xs:unsignedLong#element(configuration)
admin#foreign-cluster-get-bootstrap-hosts#2#$config as element(configuration), $cluster-id as xs:unsignedLong#element(cl:foreign-host)*
admin#foreign-cluster-get-host-timeout#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:unsignedInt
admin#foreign-cluster-get-name#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:string
admin#foreign-cluster-get-ssl-certificate#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:string
admin#foreign-cluster-get-xdqp-ssl-allow-sslv3#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:boolean
admin#foreign-cluster-get-xdqp-ssl-allow-tls#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:boolean
admin#foreign-cluster-get-xdqp-ssl-ciphers#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:string
admin#foreign-cluster-get-xdqp-ssl-enabled#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:boolean
admin#foreign-cluster-get-xdqp-timeout#2#$config as element(configuration), $cluster-id as xs:unsignedLong#xs:unsignedInt
admin#foreign-cluster-replace#11#$config as element(configuration), $cluster-id as xs:unsignedLong, $cluster-name as xs:string, $xdqp-timeout as xs:unsignedInt?, $host-timeout as xs:unsignedInt?, $ssl-certificate as xs:string?, $xdqp-ssl-enabled as xs:boolean?, $xdqp-ssl-allow-sslv3 as xs:boolean?, $xdqp-ssl-allow-tls as xs:boolean?, $xdqp-ssl-ciphers as xs:string?, $foreign-bootstrap-hosts as element(cl:foreign-host)*#element(configuration)
admin#foreign-cluster-set-bootstrap-hosts#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $bootstrap-hosts as element(cl:foreign-host)*#element(configuration)
admin#foreign-cluster-set-host-timeout#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $host-timeout as xs:unsignedInt#element(configuration)
admin#foreign-cluster-set-name#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $cluster-name as xs:string#element(configuration)
admin#foreign-cluster-set-ssl-certificate#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $ssl-certificate as xs:string?#element(configuration)
admin#foreign-cluster-set-xdqp-ssl-allow-sslv3#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#foreign-cluster-set-xdqp-ssl-allow-tls#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#foreign-cluster-set-xdqp-ssl-ciphers#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#foreign-cluster-set-xdqp-ssl-enabled#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#foreign-cluster-set-xdqp-timeout#3#$config as element(configuration), $cluster-id as xs:unsignedLong, $xdqp-timeout as xs:unsignedInt#element(configuration)
admin#foreign-host#3#$host-id as xs:unsignedLong, $host-name as xs:string, $connect-port as xs:unsignedInt#element(cl:foreign-host)
admin#foreign-host-get-connect-port#1#$fh as element(cl:foreign-host)#xs:unsignedInt
admin#foreign-host-get-id#1#$fh as element(cl:foreign-host)#xs:unsignedLong
admin#foreign-host-get-name#1#$fh as element(cl:foreign-host)#xs:string
admin#forest-add-backup#3#$config as element(configuration), $forest-id as xs:unsignedLong, $backups as element(as:forest-backup)*#element(configuration)
admin#forest-add-failover-host#3#$config as element(configuration), $forest-id as xs:unsignedLong, $hosts as xs:unsignedLong*#element(configuration)
admin#forest-add-foreign-replicas#3#$config as element(configuration), $forest-id as xs:unsignedLong, $foreign-replicas as element(as:foreign-replica)*#element(configuration)
admin#forest-add-replica#3#$config as element(configuration), $master-id as xs:unsignedLong, $replica-id as xs:unsignedLong#element(configuration)
admin#forest-backup-get-enabled#3#$config as element(configuration), $forest-id as xs:unsignedLong, $backup-id as xs:unsignedLong#xs:boolean
admin#forest-backup-set-enabled#4#$config as element(configuration), $forest-id as xs:unsignedLong, $backup-id as xs:unsignedLong, $enabled as xs:boolean#element(configuration)
admin#forest-copy#6#$config as element(configuration), $forest-id as xs:unsignedLong, $forest-name as xs:string, $data-directory as xs:string?, [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?]#element(configuration)
admin#forest-create#6#$config as element(configuration), $forest-name as xs:string, $host-id as xs:unsignedLong, $data-directory as xs:string?, [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?]#element(configuration)
admin#forest-daily-backup#3#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $start-time as xs:time#element(as:forest-backup)
admin#forest-delete#3#$config as element(configuration), $forest-ids as xs:unsignedLong*, $delete-data as xs:boolean#element(configuration)
admin#forest-delete-backup#3#$config as element(configuration), $forest-id as xs:unsignedLong, $backups as element(as:forest-backup)*#element(configuration)
admin#forest-delete-backup-by-id#3#$config as element(configuration), $forest-id as xs:unsignedLong, $backup-id as xs:unsignedLong*#element(configuration)
admin#forest-delete-failover-host#3#$config as element(configuration), $forest-id as xs:unsignedLong, $hosts as xs:unsignedLong*#element(configuration)
admin#forest-delete-foreign-master#2#$config as element(configuration), $forest-id as xs:unsignedLong#element(configuration)
admin#forest-delete-foreign-replicas#3#$config as element(configuration), $forest-id as xs:unsignedLong, $foreign-replicas as element(as:foreign-replica)*#element(configuration)
admin#forest-exists#2#$config as element(configuration), $forest-name as xs:string#xs:boolean
admin#forest-foreign-master#3#$foreign-cluster-id as xs:unsignedLong, $foreign-database-id as xs:unsignedLong, $foreign-forest-id as xs:unsignedLong#element(as:foreign-master)
admin#forest-foreign-master-get-cluster-id#1#$foreign-master as element(as:foreign-master)#xs:unsignedLong
admin#forest-foreign-master-get-database-id#1#$foreign-master as element(as:foreign-master)#xs:unsignedLong
admin#forest-foreign-master-get-forest-id#1#$foreign-master as element(as:foreign-master)#xs:unsignedLong
admin#forest-foreign-replica#3#$foreign-cluster-id as xs:unsignedLong, $foreign-database-id as xs:unsignedLong, $foreign-forest-id as xs:unsignedLong#element(as:foreign-replica)
admin#forest-foreign-replica-get-cluster-id#1#$foreign-replica as element(as:foreign-replica)#xs:unsignedLong
admin#forest-foreign-replica-get-database-id#1#$foreign-replica as element(as:foreign-replica)#xs:unsignedLong
admin#forest-foreign-replica-get-forest-id#1#$foreign-replica as element(as:foreign-replica)#xs:unsignedLong
admin#forest-get-availability#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:string
admin#forest-get-backups#2#$config as element(configuration), $forest-id as xs:unsignedLong#element(as:forest-backup)*
admin#forest-get-data-directory#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:string
admin#forest-get-database#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:unsignedLong?
admin#forest-get-enabled#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:boolean
admin#forest-get-failover-enable#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:boolean
admin#forest-get-failover-hosts#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:unsignedLong*
admin#forest-get-fast-data-directory#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:string
admin#forest-get-fast-data-max-size#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:unsignedInt
admin#forest-get-foreign-master#2#$config as element(configuration), $forest-id as xs:unsignedLong#element(as:foreign-master)?
admin#forest-get-foreign-replicas#2#$config as element(configuration), $forest-id as xs:unsignedLong#element(as:foreign-replica)*
admin#forest-get-host#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:unsignedLong
admin#forest-get-id#2#$config as element(configuration), $forest-name as xs:string#xs:unsignedLong
admin#forest-get-large-data-directory#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:string
admin#forest-get-name#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:string
admin#forest-get-partition-number#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:unsignedInt?
admin#forest-get-range-policy-lower-bound#2#$config as element(configuration), $forest-id as xs:unsignedLong#item()?
admin#forest-get-range-policy-upper-bound#2#$config as element(configuration), $forest-id as xs:unsignedLong#item()?
admin#forest-get-rebalancer-enable#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:boolean
admin#forest-get-replicas#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:unsignedLong*
admin#forest-get-updates-allowed#2#$config as element(configuration), $forest-id as xs:unsignedLong#xs:string
admin#forest-hourly-backup#3#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $start-minute as xs:nonNegativeInteger#element(as:forest-backup)
admin#forest-is-range-policy-range-set#2#$config as element(configuration), $forest-id as xs:unsignedLong#item()?
admin#forest-minutely-backup#2#$backup-dir as xs:string, $backup-period as xs:positiveInteger#element(as:forest-backup)
admin#forest-monthly-backup#4#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $backup-month-day as xs:unsignedInt, $start-time as xs:time#element(as:forest-backup)
admin#forest-one-time-backup#2#$backup-dir as xs:string, $start as xs:dateTime#element(as:forest-backup)
admin#forest-remove-replica#3#$config as element(configuration), $master-id as xs:unsignedLong, $replica-id as xs:unsignedLong#element(configuration)
admin#forest-rename#3#$config as element(configuration), $forest-id as xs:unsignedLong, $new-name as xs:string#element(configuration)
admin#forest-set-availability#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#forest-set-enabled#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#forest-set-failover-enable#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#forest-set-fast-data-max-size#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:unsginedInt#element(configuration)
admin#forest-set-foreign-master#3#$config as element(configuration), $forest-id as xs:unsignedLong, $foreign-master as element(as:foreign-master)#element(configuration)
admin#forest-set-foreign-replicas#3#$config as element(configuration), $forest-id as xs:unsignedLong, $foreign-replicas as element(as:foreign-replica)*#element(configuration)
admin#forest-set-host#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#forest-set-partition-number#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:unsignedInt?#element(configuration)
admin#forest-set-range-policy-range#4#$config as element(configuration), $forest-id as xs:unsignedLong, $lower-bound as item()?, $upper-bound as item()?#element(configuration)
admin#forest-set-rebalancer-enable#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#forest-set-updates-allowed#3#$config as element(configuration), $forest-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#forest-weekly-backup#4#$backup-dir as xs:string, $backup-period as xs:positiveInteger, $days as xs:string+, $start-time as xs:time#element(as:forest-backup)
admin#get-appserver-ids#1#$config as element(configuration)#xs:unsignedLong*
admin#get-configuration#0##element(configuration)
admin#get-database-ids#1#$config as element(configuration)#xs:unsignedLong*
admin#get-forest-ids#1#$config as element(configuration)#xs:unsignedLong*
admin#get-group-ids#1#$config as element(configuration)#xs:unsignedLong*
admin#get-host-ids#1#$config as element(configuration)#xs:unsignedLong*
admin#group-add-module-location#3#$config as element(configuration), $group-id as xs:unsignedLong, $module-locations as element(gr:module-location)*#element(configuration)
admin#group-add-namespace#3#$config as element(configuration), $group-id as xs:unsignedLong, $namespaces as element(gr:namespace)*#element(configuration)
admin#group-add-scheduled-task#3#$config as element(configuration), $group-id as xs:unsignedLong, $scheduled-tasks as element(gr:scheduled-task)*#element(configuration)
admin#group-add-schema#3#$config as element(configuration), $group-id as xs:unsignedLong, $schemas as element(gr:schema)*#element(configuration)
admin#group-add-trace-event#3#$config as element(configuration), $group-id as xs:unsignedLong, $events as element(gr:event)*#element(configuration)
admin#group-add-using-namespace#3#$config as element(configuration), $group-id as xs:unsignedLong, $namespaces as element(gr:using-namespace)*#element(configuration)
admin#group-copy#3#$config as element(configuration), $group-id as xs:unsignedLong, $group-name as xs:string#element(configuration)
admin#group-create#2#$config as element(configuration), $group-name as xs:string#element(configuration)
admin#group-daily-scheduled-task#9#$task-path as xs:string, $task-root as xs:string, $task-period as xs:positiveInteger, $task-start-time as xs:time, $task-database as xs:unsignedLong, $task-modules as xs:unsignedLong, $task-user as xs:unsignedLong, $task-host as xs:unsignedLong?, [$task-priority as xs:string?]#element(gr:scheduled-task)
admin#group-delete#2#$config as element(configuration), $group-ids as xs:unsignedLong*#element(configuration)
admin#group-delete-module-location#3#$config as element(configuration), $group-id as xs:unsignedLong, $module-locations as element(gr:module-location)*#element(configuration)
admin#group-delete-namespace#3#$config as element(configuration), $group-id as xs:unsignedLong, $namespaces as element(gr:namespace)*#element(configuration)
admin#group-delete-scheduled-task#3#$config as element(configuration), $group-id as xs:unsignedLong, $scheduled-tasks as element(gr:scheduled-task)*#element(configuration)
admin#group-delete-scheduled-task-by-id#3#$config as element(configuration), $group-id as xs:unsignedLong, $delete-ids as xs:unsignedLong*#element(configuration)
admin#group-delete-schema#3#$config as element(configuration), $group-id as xs:unsignedLong, $schemas as element(gr:schema)*#element(configuration)
admin#group-delete-trace-event#3#$config as element(configuration), $group-id as xs:unsignedLong, $events as element(gr:event)*#element(configuration)
admin#group-delete-using-namespace#3#$config as element(configuration), $group-id as xs:unsignedLong, $namespaces as element(gr:using-namespace)*#element(configuration)
admin#group-disable-audit-event-type#3#$config as element(configuration), $group-id as xs:unsignedLong, $event-type as xs:string*#element(configuration)
admin#group-enable-audit-event-type#3#$config as element(configuration), $group-id as xs:unsignedLong, $event-type as xs:string*#element(configuration)
admin#group-exists#2#$config as element(configuration), $group-name as xs:string#xs:boolean
admin#group-get-appserver-ids#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-audit-enabled#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-audit-event-type-enabled#3#$config as element(configuration), $group-id as xs:unsignedLong, $event-type as xs:string#xs:boolean
admin#group-get-audit-excluded-roles#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-audit-excluded-uris#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string*
admin#group-get-audit-excluded-users#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-audit-included-roles#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-audit-included-uris#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string*
admin#group-get-audit-included-users#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-audit-outcome-restriction#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-azure-storage-proxy#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-background-io-limit#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-cache-sizing#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-cntk-default-device#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-cntk-gpu-id#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-compressed-tree-cache-partitions#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-compressed-tree-cache-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-compressed-tree-read-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-expanded-tree-cache-partitions#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-expanded-tree-cache-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-failover-enable#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-file-log-level#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-host-ids#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-host-initial-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-host-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-http-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-http-user-agent#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-httpserver-ids#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-id#2#$config as element(configuration), $group-name as xs:string#xs:unsignedLong
admin#group-get-keep-audit-files#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-keep-log-files#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-list-cache-partitions#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-list-cache-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-metering-enabled#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-meters-database#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong
admin#group-get-module-cache-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-module-locations#2#$config as element(configuration), $group-id as xs:unsignedLong#element(gr:module-location)*
admin#group-get-name#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-namespaces#2#$config as element(configuration), $group-id as xs:unsignedLong#element(gr:namespace)*
admin#group-get-odbcserver-ids#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-performance-metering-enabled#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-performance-metering-period#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-performance-metering-retain-daily#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-performance-metering-retain-hourly#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-performance-metering-retain-raw#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-retry-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-rotate-audit-files#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-rotate-log-files#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-s3-domain#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-s3-protocol#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-s3-proxy#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-s3-server-side-encryption#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-s3-server-side-encryption-kms-key#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-scheduled-task#3#$config as element(configuration), $group-id as xs:unsignedLong, $task-id as xs:unsignedLong#element(gr:scheduled-task)?
admin#group-get-scheduled-tasks#2#$config as element(configuration), $group-id as xs:unsignedLong#element(gr:scheduled-task)*
admin#group-get-schemas#2#$config as element(configuration), $group-id as xs:unsignedLong#element(gr:schema)*
admin#group-get-security-database#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong
admin#group-get-smtp-relay#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-smtp-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-system-log-level#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-taskserver-id#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-telemetry-config#2#$config as element(configuration), $group-id as xs:unsigned-long#xs:string
admin#group-get-telemetry-log-level#2#$config as element(configuration), $group-id as xs:unsigned-long#xs:string
admin#group-get-telemetry-metering#2#$config as element(configuration), $group-id as xs:unsigned-long#xs:string
admin#group-get-telemetry-proxy#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-telemetry-session-endpoint#2#$config as element(configuration), $group-id as xs:unsigned-long#xs:string
admin#group-get-trace-events#2#$config as element(configuration), $group-id as xs:unsignedLong#element(gr:event)*
admin#group-get-trace-events-activated#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-triple-cache-partitions#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-triple-cache-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-triple-cache-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-triple-value-cache-partitions#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-triple-value-cache-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-triple-value-cache-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-get-using-namespaces#2#$config as element(configuration), $group-id as xs:unsignedLong#element(gr:using-namespace)*
admin#group-get-webdavserver-ids#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-xdbcserver-ids#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedLong*
admin#group-get-xdqp-ssl-allow-sslv3#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-xdqp-ssl-allow-tls#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-xdqp-ssl-ciphers#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#group-get-xdqp-ssl-disabled-protocols#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string*
admin#group-get-xdqp-ssl-enabled#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#group-get-xdqp-timeout#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#group-hourly-scheduled-task#9#$task-path as xs:string, $task-root as xs:string, $task-period as xs:positiveInteger, $task-minute as xs:nonNegativeInteger, $task-database as xs:unsignedLong, $task-modules as xs:unsignedLong, $task-user as xs:unsignedLong, $task-host as xs:unsignedLong?, [$task-priority as xs:string?]#element(gr:scheduled-task)
admin#group-minutely-scheduled-task#8#$task-path as xs:string, $task-root as xs:string, $task-period as xs:positiveInteger, $task-database as xs:unsignedLong, $task-modules as xs:unsignedLong, $task-user as xs:unsignedLong, $task-host as xs:unsignedLong?, [$task-priority as xs:string?]#element(gr:scheduled-task)
admin#group-module-location#2#$namespace-uri as xs:string, $location as xs:string#element(gr:module-location)
admin#group-monthly-scheduled-task#10#$task-path as xs:string, $task-root as xs:string, $task-period as xs:positiveInteger, $task-month-day as xs:unsignedLong, $task-start-time as xs:time, $task-database as xs:unsignedLong, $task-modules as xs:unsignedLong, $task-user as xs:unsignedLong, $task-host as xs:unsignedLong?, [$task-priority as xs:string?]#element(gr:scheduled-task)
admin#group-namespace#2#$prefix as xs:string, $namespace-uri as xs:string#element(gr:namespace)
admin#group-one-time-scheduled-task#8#$task-path as xs:string, $task-root as xs:string, $task-start as xs:dateTime, $task-database as xs:unsignedLong, $task-modules as xs:unsignedLong, $task-user as xs:unsignedLong, $task-host as xs:unsignedLong?, [$task-priority as xs:string?]#element(gr:scheduled-task)
admin#group-scheduled-task-get-enabled#3#$config as element(configuration), $group-id as xs:unsignedLong, $task-id as xs:unsignedLong#xs:boolean
admin#group-scheduled-task-set-enabled#4#$config as element(configuration), $group-id as xs:unsignedLong, $task-id as xs:unsignedLong, $enabled as xs:boolean#element(configuration)
admin#group-schema#2#$namespace-uri as xs:string, $schema-location as xs:string#element(gr:schema)
admin#group-set-audit-enabled#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-audit-outcome-restriction#3#$config as element(configuration), $group-id as xs:unsignedLong, $outcome as xs:string*#element(configuration)
admin#group-set-audit-role-restriction#4#$config as element(configuration), $group-id as xs:unsignedLong, $restriction-type as xs:string, $roles as xs:string*#element(configuration)
admin#group-set-audit-uri-restriction#4#$config as element(configuration), $group-id as xs:unsignedLong, $restriction-type as xs:string, $uris as xs:string*#element(configuration)
admin#group-set-audit-user-restriction#4#$config as element(configuration), $group-id as xs:unsignedLong, $restriction-type as xs:string, $users as xs:string*#element(configuration)
admin#group-set-azure-storage-proxy#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-background-io-limit#3#$config as element(configuration), $group-id as xs:unsignedLong, $max-megabytes-per-second as xs:unsignedInt#element(configuration)
admin#group-set-cache-sizing#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-cntk-default-device#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-cntk-gpu-id#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-compressed-tree-cache-partitions#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-compressed-tree-cache-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-compressed-tree-read-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-expanded-tree-cache-partitions#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-expanded-tree-cache-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-failover-enable#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-file-log-level#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-host-initial-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-host-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-http-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-http-user-agent#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-keep-audit-files#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-keep-log-files#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-list-cache-partitions#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-list-cache-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-metering-enabled#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-meters-database#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#group-set-module-cache-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-name#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-performance-metering-enabled#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-performance-metering-period#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-performance-metering-retain-daily#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-performance-metering-retain-hourly#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-performance-metering-retain-raw#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-retry-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-rotate-audit-files#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-rotate-log-files#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-s3-domain#3#$config as element(configuration), $group-id as xs:unsignedLong, $domain as xs:string#element(configuration)
admin#group-set-s3-protocol#3#$config as element(configuration), $group-id as xs:unsignedLong, $protocol as xs:string#element(configuration)
admin#group-set-s3-proxy#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-s3-server-side-encryption#3#$config as element(configuration), $group-id as xs:unsignedLong, $protocol as xs:string#element(configuration)
admin#group-set-s3-server-side-encryption-kms-key#3#$config as element(configuration), $group-id as xs:unsignedLong, $key as xs:string#element(configuration)
admin#group-set-security-database#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#group-set-smtp-relay#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-smtp-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-system-log-level#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-telemetry-config#3#$config as element(configuration), $group-id as xs:unsigned-long, $value as xs:string#element(configuration)
admin#group-set-telemetry-log-level#3#$config as element(configuration), $group-id as xs:unsigned-long, $value as xs:string#element(configuration)
admin#group-set-telemetry-metering#3#$config as element(configuration), $group-id as xs:unsigned-long, $value as xs:string#element(configuration)
admin#group-set-telemetry-proxy#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-telemetry-session-endpoint#3#$config as element(configuration), $group-id as xs:unsigned-long, $value as xs:string#element(configuration)
admin#group-set-trace-events-activated#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-triple-cache-partitions#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-triple-cache-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-triple-cache-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-triple-value-cache-partitions#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-triple-value-cache-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-triple-value-cache-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-set-xdqp-ssl-allow-sslv3#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-xdqp-ssl-allow-tls#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-xdqp-ssl-ciphers#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#group-set-xdqp-ssl-disabled-protocols#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:string*#element(configuration)
admin#group-set-xdqp-ssl-enabled#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#group-set-xdqp-timeout#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#group-trace-event#1#$event-id as xs:string#element(gr:event)
admin#group-using-namespace#1#$namespace-uri as xs:string#element(gr:using-namespace)
admin#group-weekly-scheduled-task#10#$task-path as xs:string, $task-root as xs:string, $task-period as xs:positiveInteger, $task-days as xs:string+, $task-start-time as xs:time, $task-database as xs:unsignedLong, $task-modules as xs:unsignedLong, $task-user as xs:unsignedLong, $task-host as xs:unsignedLong?, [$task-priority as xs:string?]#element(gr:scheduled-task)
admin#host-exists#2#$config as element(configuration), $host-name as xs:string#xs:boolean
admin#host-get-foreign-port#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:unsignedInt
admin#host-get-group#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:unsignedLong
admin#host-get-id#2#$config as element(configuration), $host-name as xs:string#xs:unsignedLong
admin#host-get-mode#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:string
admin#host-get-mode-description#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:string
admin#host-get-name#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:string
admin#host-get-port#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:unsignedInt
admin#host-get-zone#2#$config as element(configuration), $host-id as xs:unsignedLong#xs:string
admin#host-set-foreign-port#3#$config as element(configuration), $host-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#host-set-group#3#$config as element(configuration), $host-id as xs:unsignedLong, $value as xs:unsignedLong#element(configuration)
admin#host-set-mode#4#$config as element(configuration), $host-id as xs:unsignedLong, $mode as xs:string, $description as xs:string?#element(configuration)
admin#host-set-name#3#$config as element(configuration), $host-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#host-set-port#3#$config as element(configuration), $host-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#host-set-zone#3#$config as element(configuration), $host-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#http-server-create#7#$config as element(configuration), $group-id as xs:unsignedLong, $appserver-name as xs:string, $root as xs:string, $port as xs:unsignedLong, $modules-id as item(), $database-id as xs:unsignedLong#element(configuration)
admin#legacy-assignment-policy#0##element(db:assignment-policy)
admin#mimetype#3#$name as xs:string, $extensions as xs:string, $format as xs:string#element(mt:mimetype)
admin#mimetypes-add#2#$config as element(configuration), $mimetypes as element(mt:mimetype)*#element(configuration)
admin#mimetypes-delete#2#$config as element(configuration), $mimetypes as element(mt:mimetype)*#element(configuration)
admin#mimetypes-get#1#$config as element(configuration)#element(mt:mimetype)*
admin#odbc-server-create#7#$config as element(configuration), $group-id as xs:unsignedLong, $appserver-name as xs:string, $root as xs:string, $port as xs:unsignedLong, $modules-id as item(), $database-id as xs:unsignedLong#element(configuration)
admin#query-assignment-policy#1#[$default-partition as xs:unsignedInt]#element(db:assignment-policy)
admin#range-assignment-policy#2#$partition-key as cts:reference, $lower-bound-included as xs:boolean#element(db:assignment-policy)
admin#restart-hosts#1#$hosts as xs:unsignedLong*#empty-sequence()
admin#save-configuration#1#$config as element(configuration)#empty-sequence()
admin#save-configuration-without-restart#1#$config as element(configuration)#xs:unsignedLong*
admin#segment-assignment-policy#0##element(db:assignment-policy)
admin#statistical-assignment-policy#0##element(db:assignment-policy)
admin#taskserver-get-debug-allow#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#taskserver-get-debug-threads#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-default-inference-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-default-time-limit#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-file-log-level#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#taskserver-get-log-errors#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#taskserver-get-max-inference-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-max-time-limit#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-name#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#taskserver-get-opsdirector-applog-level#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:string
admin#taskserver-get-post-commit-trigger-depth#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-pre-commit-trigger-depth#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-pre-commit-trigger-limit#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-profile-allow#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:boolean
admin#taskserver-get-queue-size#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-get-threads#2#$config as element(configuration), $group-id as xs:unsignedLong#xs:unsignedInt
admin#taskserver-set-debug-allow#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#taskserver-set-debug-threads#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-default-inference-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-default-time-limit#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-file-log-level#3#$config as element(configuration), $taskserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#taskserver-set-log-errors#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#taskserver-set-max-inference-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-max-time-limit#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-opsdirector-applog-level#3#$config as element(configuration), $taskserver-id as xs:unsignedLong, $value as xs:string#element(configuration)
admin#taskserver-set-post-commit-trigger-depth#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-pre-commit-trigger-depth#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-pre-commit-trigger-limit#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-profile-allow#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:boolean#element(configuration)
admin#taskserver-set-queue-size#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#taskserver-set-threads#3#$config as element(configuration), $group-id as xs:unsignedLong, $value as xs:unsignedInt#element(configuration)
admin#webdav-server-create#6#$config as element(configuration), $group-id as xs:unsignedLong, $appserver-name as xs:string, $root as xs:string, $port as xs:unsignedLong, $database-id as xs:unsignedLong#element(configuration)
admin#xdbc-server-create#7#$config as element(configuration), $group-id as xs:unsignedLong, $appserver-name as xs:string, $root as xs:string, $port as xs:unsignedLong, $modules-id as item(), $database-id as xs:unsignedLong#element(configuration)
alert#action-get-description#1#$action as element(alert:action)#xs:string
alert#action-get-module#1#$action as element(alert:action)#xs:string
alert#action-get-module-db#1#$action as element(alert:action)#xs:unsignedLong
alert#action-get-module-root#1#$action as element(alert:action)#xs:string
alert#action-get-name#1#$action as element(alert:action)#xs:string
alert#action-get-options#1#$action as element(alert:action)#element(alert:options)
alert#action-insert#2#$config-uri as xs:string, $action as element(alert:action)#empty-sequence()
alert#action-remove#2#$config-uri as xs:string, $name as xs:string#empty-sequence()
alert#action-set-description#2#$action as element(alert:action), $description as xs:string#element(alert:action)
alert#action-set-module#2#$action as element(alert:action), $module as xs:string#element(alert:action)
alert#action-set-module-db#2#$action as element(alert:action), $module-db as xs:unsignedLong#element(alert:action)
alert#action-set-module-root#2#$action as element(alert:action), $module-root as xs:string#element(alert:action)
alert#action-set-name#2#$action as element(alert:action), $name as xs:string#element(alert:action)
alert#action-set-options#2#$action as element(alert:action), $options as element(alert:options)#element(alert:action)
alert#config-delete#1#$uri as xs:string#empty-sequence()
alert#config-get#1#$uri as xs:string#element(alert:config)?
alert#config-get-cpf-domain-ids#1#$config as element(alert:config)#xs:unsignedLong*
alert#config-get-cpf-domain-names#1#$config as element(alert:config)#xs:string*
alert#config-get-description#1#$config as element(alert:config)#xs:string
alert#config-get-id#1#$config as element(alert:config)#xs:unsignedLong
alert#config-get-name#1#$config as element(alert:config)#xs:string
alert#config-get-options#1#$config as element(alert:config)#element(alert:options)
alert#config-get-trigger-ids#1#$config as element(alert:config)#xs:unsignedLong*
alert#config-get-uri#1#$config as element(alert:config)#xs:string
alert#config-insert#1#$config as element(alert:config)#empty-sequence()
alert#config-set-cpf-domain-ids#2#$config as element(alert:config), $ids as xs:unsignedLong*#element(alert:config)
alert#config-set-cpf-domain-names#2#$config as element(alert:config), $names as xs:string*#element(alert:config)
alert#config-set-description#2#$config as element(alert:config), $description as xs:string#element(alert:config)
alert#config-set-name#2#$config as element(alert:config), $name as xs:string#element(alert:config)
alert#config-set-options#2#$config as element(alert:config), $options as element(alert:options)#element(alert:config)
alert#config-set-trigger-ids#2#$config as element(alert:config), $ids as xs:unsignedLong*#element(alert:config)
alert#config-set-uri#2#$config as element(alert:config), $uri as xs:string#element(alert:config)
alert#create-triggers#2#$uri as xs:string, $events as element(trgr:data-event)*#xs:unsignedLong*
alert#find-matching-rules#2#$config-uri as xs:string, $doc as node()#element(alert:rule)*
alert#get-actions#2#$config-uri as xs:string, $names as xs:string*#element(alert:action)*
alert#get-all-rules#2#$config-uri as xs:string, $query as cts:query#element(alert:rule)*
alert#get-my-rules#2#$config-uri as xs:string, $query as cts:query#element(alert:rule)*
alert#invoke-matching-actions#3#$config-uri as xs:string, $doc as node(), $options as node()#empty-sequence()
alert#make-action#6#$name as xs:string, $description as xs:string, $module-db as xs:unsignedLong, $module-root as xs:string, $module as xs:string, $options as element(alert:options)#element(alert:action)
alert#make-config#4#$uri as xs:string, $name as xs:string, $description as xs:string, $options as element(alert:options)#element(alert:config)
alert#make-log-action#0##element(alert:action)
alert#make-rule#6#$name as xs:string, $description as xs:string, $user-id as xs:unsignedLong, $query as cts:query, $action as xs:string, $options as element(alert:options)#element(alert:rule)
alert#remove-triggers#1#$uri as xs:string#empty-sequence()
alert#rule-action-query#1#$actions as xs:string*#cts:query
alert#rule-get-action#1#$rule as element(alert:rule)#xs:string
alert#rule-get-description#1#$rule as element(alert:rule)#xs:string
alert#rule-get-id#1#$rule as element(alert:rule)#xs:unsignedLong
alert#rule-get-name#1#$rule as element(alert:rule)#xs:string
alert#rule-get-options#1#$rule as element(alert:rule)#element(alert:options)
alert#rule-get-query#1#$rule as element(alert:rule)#cts:query
alert#rule-get-user-id#1#$rule as element(alert:rule)#xs:unsignedLong
alert#rule-id-query#1#$ids as xs:unsignedLong*#cts:query
alert#rule-insert#2#$config-uri as xs:string, $rule as element(alert:rule)#empty-sequence()
alert#rule-name-query#1#$names as xs:string*#cts:query
alert#rule-remove#2#$config-uri as xs:string, $id as xs:unsignedLong#empty-sequence()
alert#rule-set-action#2#$rule as element(alert:rule), $action as xs:string#element(alert:rule)*
alert#rule-set-description#2#$rule as element(alert:rule), $description as xs:string#element(alert:rule)*
alert#rule-set-name#2#$rule as element(alert:rule), $name as xs:string#element(alert:rule)*
alert#rule-set-options#2#$rule as element(alert:rule), $options as element(alert:options)#element(alert:rule)
alert#rule-set-query#2#$rule as element(alert:rule), $query as cts:query#element(alert:rule)*
alert#rule-set-user-id#2#$rule as element(alert:rule), $user-id as xs:unsignedLong#element(alert:rule)*
alert#rule-user-id-query#1#$user-ids as xs:unsignedLong*#cts:query
alert#spawn-matching-actions#3#$config-uri as xs:string, $doc as node(), $options as node()#empty-sequence()
cdict#dictionary-delete#2#$lang as xs:string, [$tokenization as xs:boolean]#empty-sequence()
cdict#dictionary-read#2#$lang as xs:string, [$tokenization as xs:boolean]#element(cdict:dictionary)?
cdict#dictionary-write#3#$lang as xs:string, $dict as element(cdict:dictionary), [$tokenization as xs:boolean]#empty-sequence()
cdict#get-languages#0##xs:string*
clang#delete-user-language#2#$config as element(lang:user-languages), $lang as xs:string#element(lang:user-languages)
clang#language-config-delete#0##empty-sequence()
clang#language-config-read#0##element(lang:user-languages)
clang#language-config-write#1#$config as element(lang:user-languages)#empty-sequence()
clang#lexer#4#$variant as xs:string, [$normalization as xs:string?], [$args as item()*], [$library as xs:string]#element(lang:lexer)
clang#stemmer#4#$variant as xs:string, [$normalization as xs:string?], [$args as item()*], [$library as xs:string]#element(lang:stemmer)
clang#update-user-language#2#$config as element(lang:user-languages), $user-lang as element(lang:user-language)#element(lang:user-languages)
clang#user-language#3#$lang as xs:string, $plugin as element(lang:plugin), [$tokenType as xs:string]#element(lang:user-language)
clang#user-language-plugin#4#$library as xs:string?, $lexer as element(lang:lexer)?, $stemmer as element(lang:stemmer)?, [$delegate as xs:boolean?]#element(lang:plugin)
cma#apply-config#4#$config as (binary()|node())*, [$config-options as map:map?], [$params as map:map?], [$format as xs:string?]#(empty-seq|node())
cma#generate-config#5#[$config as (binary()|node())?], [$config-options as map:map?], [$default-params as map:map?], [$format as xs:string?], [$scenario as xs:string?]#(binary()|node())
cntk#ROI-pooling#6#$operand as cntk:variable, $rois as cntk:variable, $pooling-type as xs:string, $roi-output-shape as cntk:shape, $spatial-scale as xs:double, $name as xs:string#cntk:function
cntk#abs#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#acos#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#ada-delta-learner#5#$parameters as cntk:parameter*, $lr as cntk:schedule, [$rho as xs:double], [$epsilon as xs:double], [$alo as map:map]#cntk:schedule
cntk#ada-grad-learner#4#$parameters as cntk:parameter*, $lr as cntk:schedule, [$need-ave-multiplier as xs:boolean], [$alo as map:map]#cntk:schedule
cntk#adam-learner#8#$parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, [$unit-gain as xs:boolean], [$variance-momentum-schedule as cntk:schedule], [$epsilon as xs:double], [$adamax as xs:boolean], [$alo as map:map]#cntk:schedule
cntk#alias#2#$operands as cntk:variable, [$name as xs:string]#cntk:function
cntk#all-axes#0##cntk:axis
cntk#all-static-axes#0##cntk:axis
cntk#argmax#3#$operand as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#argmin#3#$operand as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#as-block#4#$composite as cntk:function, $arguments-map as json:array, $block-op-name as xs:string, [$block-name as xs:string]#cntk:function
cntk#as-composite#2#$root-function as cntk:function, [$name as xs:string]#cntk:function
cntk#asin#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#asinh#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#assign#3#$ref as cntk:variable, $input as cntk:variable, [$name as xs:string]#cntk:function
cntk#atan#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#atanh#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#average-pooling-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#axis#1#$axis-index as xs:integer#cntk:axis
cntk#axis-is-batch#1#$axis as cntk:axis#xs:boolean
cntk#axis-is-dynamic#1#$axis as cntk:axis#xs:boolean
cntk#axis-is-ordered#1#$axis as cntk:axis#xs:boolean
cntk#axis-is-sequence#1#$axis as cntk:axis#xs:boolean
cntk#axis-is-static#1#$axis as cntk:axis#xs:boolean
cntk#axis-name#1#$axis as cntk:axis#xs:string
cntk#axis-static-index#1#$axis as cntk:axis#cntk:axis
cntk#axis-static-index#1#$axis as cntk:axis#xs:integer
cntk#batch#5#$shape as cntk:shape, $data as json:array, [$device as cntk:device], [$data-type as xs:string], [$read-only as xs:boolean]#cntk:value
cntk#batch-normalization#8#$operand as cntk:variable, $scale as cntk:variable, $bias as cntk:variable, $running-mean as cntk:variable, $running-inv-std as cntk:variable, $running-count as cntk:variable, $spatial as xs:boolean, [$map as map:map]#cntk:function
cntk#batch-normalization-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#batch-of-sequences#6#$shape as cntk:shape, $data as json:array, $sequence-start-flags as xs:boolean*, [$device as cntk:device], [$data-type as xs:string], [$read-only as xs:boolean]#cntk:value
cntk#bernoulli-random#5#$shape as cntk:shape, $data-type as xs:string, [$mean as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#bernoulli-random-like#4#$x as cntk:variable, [$mean as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#bilinear-initializer#2#$kernel-width as xs:unsignedLong, $kernel-height as xs:unsignedLong#cntk:initializer
cntk#binary-cross-entropy#3#$prediction as cntk:variable, $targets as cntk:variable, [$name as xs:string]#cntk:function
cntk#broadcast-as#3#$operand as cntk:variable, $broadcast-as as cntk:variable, $name as xs:string#cntk:function
cntk#ceil#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#classification-error#5#$output_vector as cntk:variable, $target_vector as cntk:variable, $top-n as xs:unsignedLong, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#clip#4#$operand as cntk:variable, $min as cntk:variable, $max as cntk:variable, $name as xs:string#cntk:function
cntk#combine#2#$operands as cntk:variable*, [$name as xs:string]#cntk:function
cntk#concatenate-shape#2#$shape1 as cntk:shape, $shape2 as cntk:shape#cntk:shape
cntk#constant#5#$shape as cntk:shape, $data-type as xs:string, $init as xs:double, [$device as cntk:device], [$name as xs:string]#cntk:constant
cntk#constant-clone-as#2#$constant as cntk:constant, $data-type as cntk:data-type#cntk:constant
cntk#constant-from-value#2#$value as cntk:value, [$name as xs:string]#cntk:constant
cntk#constant-initializer#1#[$value as xs:double]#cntk:initializer
cntk#constant-record-value-update#0##empty sequence
cntk#constant-set-value#2#$constant as cntk:constant, $value as cntk:value#empty sequence
cntk#constant-value#1#$constant as cntk:constant#cntk:value
cntk#convolution#3#$convolution-map as cntk:variable, $operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-1d-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-2d-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-3d-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-transpose#3#$convolution-map as cntk:variable, $operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-transpose-1d-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-transpose-2d-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-transpose-3d-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-transpose-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#convolution-transpose-with-explicit-padding#10#$convolution-map as cntk:variable, $operand as cntk:variable, $strides as cntk:shape, $sharing as xs:boolean*, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*, $output-shape as cntk:shape, $dilation as cntk:shape, $max-temp-mem-size-in-samples as xs:unsignedLong, $name as xs:string#cntk:function
cntk#cos#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#cosh#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#cosine-distance#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#cosine-distance-with-negative-samples#5#$left-operand as cntk:variable, $right-operand as cntk:variable, $shift-window as xs:integer, $number-of-negative-samples as xs:integer, [$name as xs:string]#cntk:function
cntk#cpu#0##cntk:device
cntk#cross-entropy-with-softmax#4#$output_vector as cntk:variable, $target_vector as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#custom-proxy-op#4#$operands as cntk:variable*, $output-shape as cntk:shape, $output-type as cntk:type, $name as xs:string#cntk:function
cntk#default-batch-axis#0##cntk:axis
cntk#default-device#0##cntk:device
cntk#default-input-ariable-dynamic-axes#0##cntk:axis*
cntk#dense-layer#2#$operand as cntk:variable, $addition-parameters as map:map#cntk:function
cntk#depth-to-space#3#$operand as cntk:variable, $block-size as xs:unsignedLong, $name as xs:string#cntk:function
cntk#dropout#4#$x as cntk:variable, $droupout-rate as xs:double, [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#dropout-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#dynamic-axis#2#$name as xs:string, [$is-ordered-dynamic-axis as xs:boolean]#cntk:axis
cntk#edit-distance-error#8#$prediction as cntk:variable, $labels as cntk:variable, $substitution-penalty as xs:float, $deletion-penalty as xs:float, $insertion-penalty as xs:float, $squash-inputs as xs:boolean, $tokens-to-ignore as xs:integer*, [$name as xs:string]#cntk:function
cntk#element-and#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-divide#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-max#3#$left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string#cntk:function
cntk#element-min#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-not#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-or#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-select#4#$condition as cntk:variable, $then-operand as cntk:variable, $else-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-times#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#element-xor#3#$left-operand as cntk:variable, $right-operand as cntk:variable, $name as xs:string#cntk:function
cntk#elu#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#elu-with-alpha#3#$x as cntk:variable, $alpha as xs:double, [$name as xs:string]#cntk:function
cntk#embedding-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#end-static-axis#0##cntk:axis
cntk#equal#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#evaluate#4#$model as cntk:function, $input-variable-value-map as json:array, $output-variables as cntk:variable*, [$device as cntk:device]#cntk:value*
cntk#exp#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#expand-dims#3#$operand as cntk:variable, $axis as cntk:axis, $name as xs:string#cntk:function
cntk#eye-like#3#$x as cntk:variable, $is-output-sparse as xs:boolean, $name as xs:string#cntk:function
cntk#flatten#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#flatten-on-axis#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#floor#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#forward-backward#5#$graph as cntk:variable, $features as cntk:variable, $blank-to-token-id as xs:unsignedLong, $delay-constraint as cntk:integer, $name as xs:string#cntk:function
cntk#fs-ada-grad-learner#6#$parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, [$unit-gain as xs:boolean], [$variance-momentum-schedule as cntk:schedule], [$alo as map:map]#cntk:schedule
cntk#function#3#$node as binary, [$device as cntk:device], [$format as xs:string]#cntk:function
cntk#function-arguments#2#$model as cntk:function, [$rowMajor as xs:boolean]#cntk:variable*
cntk#function-constants#1#$model as cntk:function#cntk:constant*
cntk#function-from-variable#1#$variable as cntk:variable#cntk:variable
cntk#function-is-block#1#$model as cntk:function#xs:boolean
cntk#function-is-composite#1#$model as cntk:function#xs:boolean
cntk#function-is-primitive#1#$model as cntk:function#xs:boolean
cntk#function-name#1#$model as cntk:function#xs:string
cntk#function-op-name#1#$model as cntk:function#xs:string
cntk#function-output#1#$model as cntk:function#cntk:variable
cntk#function-outputs#1#$model as cntk:function#cntk:variable*
cntk#function-parameters#1#$model as cntk:function#cntk:parameter*
cntk#function-save#1#$function as cntk:function#document-node()
cntk#future-value#4#$x as cntk:variable, $initial-state as cntk:variable, $offset as xs:unsignedLong, $name as xs:string#cntk:function
cntk#gather-op#3#$indices as cntk:variable, $reference as cntk:variable, [$name as xs:string]#cntk:function
cntk#gather-op-on-axis#4#$indices as cntk:variable, $reference as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#global-average-pooling-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#global-max-pooling-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#glorot-normal-initializer#4#[$scale as xs:double], [$output-rank as xs:integer], [$filter-rank as xs:integer], [$seed as xs:unsinged-long]#cntk:initializer
cntk#glorot-uniform-initializer#4#[$scale as xs:double], [$output-rank as xs:integer], [$filter-rank as xs:integer], [$seed as xs:unsignedLong]#cntk:initializer
cntk#gpu#1#$device-id as xs:unsigned#cntk:device
cntk#greater#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#greater-equal#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#gru-block#3#$dh as cntk:variable, $x as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#gru-layer#6#$x as cntk:variable, $additional-parameters as map:map, [$go-backwards as xs:boolean], [$initial-states as cntk:constant], [$return-full-state as xs:boolean], [$name as xs:string]#cntk:function
cntk#gumbel-random#6#$shape as cntk:shape, $data-type as xs:string, [$loc as xs:double], [$scale as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#gumbel-random-like#5#$x as cntk:variable, [$loc as xs:double], [$scale as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#hard-sigmoid#4#$operand as cntk:variable, $alpha as xs:float, $beta as xs:float, [$name as xs:string]#cntk:function
cntk#hardmax#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#he-normal-initializer#4#[$scale as xs:double], [$output-rank as xs:integer], [$filter-rank as xs:integer], [$seed as xs:unsignedLong]#cntk:initializer
cntk#he-uniform-initializer#4#[$scale as xs:double], [$output-rank as xs:integer], [$filter-rank as xs:integer], [$seed as xs:unsignedLong]#cntk:initializer
cntk#image-scaler#4#$x as cntk:variable, $scaler as xs:float, $biases as xs:float*, $name as xs:string#cntk:function
cntk#input-variable#6#$shape as cntk:shape, $data-type as xs:string, [$is-sparse as xs:boolean], [$needs-gradient as xs:boolean], [$name as xs:string], [$dynamic-axes as cntk:axis*]#cntk:variable
cntk#label-layer#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#labels-to-graph#2#$labels as cntk:variable, $name as xs:string#cntk:function
cntk#lambda-rank#4#$output as cntk:variable, $gains as cntk:variable, $group-id as cntk:variable, [$name as xs:string]#cntk:function
cntk#lattice-sequence-with-softmax#5#$labels as cntk:variable, $prediction as cntk:variable, $scaled-log-likelihood as cntk:variable, $lattice as xs:variable, $map as map:map#cntk:function
cntk#layer-normalization-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#leaky-re-lu#3#$x as cntk:variable, $alpha as cntk:double, [$name as xs:string]#cntk:function
cntk#learning-rate-schedule-from-constant#2#$learning-rate as xs:double, [$minibatch-size as xs:unsignedLong]#cntk:schedule
cntk#learning-rate-schedule-from-pairs#3#$pairs as json:array, [$epoch-size as xs:unsignedLong], [$minibatch-size as xs:unsignedLong]#cntk:schedule
cntk#learning-rate-schedule-from-sequence#3#$learning-rates as xs:double*, [$epoch-size as xs:unsignedLong], [$minibatch-size as xs:unsignedLong]#cntk:schedule
cntk#less#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#less-equal#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#local-response-normalization#6#$operand as cntk:variable, $depth-radius as xs:unsignedLong, $bias as xs:double, $alpha as xs:double, $beta as xs:double, [$name as xs:string]#cntk:function
cntk#log#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#log-add-exp#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#log-softmax#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#log-softmax-on-axis#3#$operand as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#lstm-block#4#$dh as cntk:variable, $dc as cntk:variable, $x as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#lstm-layer#6#$x as cntk:variable, $additional-parameters as map:map, [$go-backwards as xs:boolean], [$initial-states as cntk:constant*], [$return-full-state as xs:boolean], [$name as xs:string]#cntk:function
cntk#max-pooling-layer#2#$operand as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#max-unpooling-layer#3#$operand1 as cntk:variable, $operand2 as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#mean#2#$operands as cntk:variable, [$name as xs:string]#cntk:function
cntk#mean-variance-normalization#5#$operand as cntk:variable, $epsilon as xs:double, [$use-stats-across-channels as xs:boolean], [$do-variance-scaling as xs:boolean], [$name as xs:string]#cntk:function
cntk#minibatch-size-schedule-from-constant#1#$minibatch-size as xs:unsignedLong#cntk:schedule
cntk#minibatch-size-schedule-from-pairs#2#$pairs as json:array, [$epoch-size as xs:unsignedLong]#cntk:schedule
cntk#minibatch-size-schedule-from-sequence#2#$minibatch-sizes as xs:unsignedLong*, [$epoch-size as xs:unsignedLong]#cntk:schedule
cntk#minus#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#momentum-schedule-from-constant#2#$momentum as xs:double, [$minibatch-size as xs:unsignedLong]#cntk:schedule
cntk#momentum-schedule-from-pairs#3#$pairs as json:array, [$epoch-size as xs:unsignedLong], [$minibatch-size as xs:unsignedLong]#cntk:schedule
cntk#momentum-schedule-from-sequence#3#$momentum as xs:double*, [$epoch-size as xs:unsignedLong], [$minibatch-size as xs:unsignedLong]#cntk:schedule
cntk#momentum-sgd-learner#5#$parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, [$unit-gain as xs:boolean], [$alo as map:map]#cntk:learner
cntk#ndcgat1#4#$prediction as cntk:variable, $gains as cntk:variable, $group-id as cntk:variable, [$name as xs:string]#cntk:function
cntk#negate#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#nesterov-learner#5#$parameters as cntk:parameter*, $lr as cntk:schedule, $momentum as cntk:schedule, [$unit-gain as xs:boolean], [$alo as map:map]#cntk:schedule
cntk#new-unique-dynamic-axis#2#$name as cntk:shape, [$is-ordered-dynamic-axis as cntk:shape]#cntk:axis
cntk#normal-initializer#4#$scale as xs:double, [$output-rank as xs:integer], [$filter-rank as xs:integer], [$seed as xs:unsignedLong]#cntk:initializer
cntk#normal-random#6#$shape as cntk:shape, $data-type as xs:string, [$mean as xs:double], [$scale as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#normal-random-like#5#$x as cntk:variable, [$mean as xs:double], [$scale as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#not-equal#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#one-hot-op#5#$x as cntk:variable, $num-class as xs:unsignedLong, $output-sparse as xs:boolean, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#ones-like#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#operand-sequence-axis#0##cntk:axis
cntk#optimized-rnnstack#7#$operand as cntk:variable, $weights as xs:double, $hidden-size as xs:unsignedLong, $num-layers as xs:unsignedLong, [$bidirectional as xs:boolean], [$recurrent-op as xs:string], [$name as xs:string]#cntk:function
cntk#output-variable#5#$shape as cntk:shape, $data-type as xs:string, $dynamic-axes as cntk:axis*, [$needs-gradient as xs:boolean], [$name as xs:string]#cntk:variable
cntk#pad#6#$x as cntk:variable, $mode as xs:string, $head as xs:unsignedLong*, $foot as xs:unsignedLong*, $constant-value as xs:double, $name as xs:string#cntk:function
cntk#parameter#5#$shape as cntk:shape, $data-type as xs:string, $init as cntk:initializer, [$device as cntk:device], [$name as xs:string]#cntk:parameter
cntk#parameter-from-scalar#5#$shape as cntk:shape, $data-type as xs:string, $init as xs:double, [$device as cntk:device], [$name as xs:string]#cntk:parameter
cntk#parameter-from-value#2#$value as cntk:value, [$name as xs:string]#cntk:parameter
cntk#parameter-record-value-update#0##empty sequence
cntk#parameter-set-value#2#$parameter as cntk:parameter, $value as cntk:value#empty sequence
cntk#parameter-value#1#$parameter as cntk:parameter#cntk:value
cntk#past-value#4#$x as cntk:variable, $initial-state as cntk:variable, $offset as xs:unsignedLong, $name as xs:string#cntk:function
cntk#per-dim-mean-variance-normalize#4#$operand as cntk:variable, $mean as cntk:variable, $inv-std-dev as cntk:variable, [$name as xs:string]#cntk:function
cntk#placeholder-variable#4#[$shape as cntk:shape], [$data-type as xs:string], [$name as xs:string], [$dynamic-axes as cntk:axis*]#cntk:variable
cntk#plus#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#pooling#8#$operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, [$strides as cntk:shape], [$auto-padding as xs:boolean*], [$ceil-out-dim as xs:boolean], [$include-pad as xs:boolean], [$name as xs:string]#cntk:function
cntk#pooling-with-explicit-padding#9#$operand as cntk:variable, $pooling-type as xs:string, $pooling-window-shape as cntk:shape, $strides as cntk:shape, $lower-pad as xs:unsignedLong*, $upper-pad as xs:unsignedLong*, [$ceil-out-dim as xs:boolean], [$include-pad as xs:boolean], [$name as xs:string]#cntk:function
cntk#pow#3#$left-operand as cntk:variable, $right-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#pre-lu#3#$alpha as cntk:variable, $operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#previous-minibatch-evaluation-average#1#$trainer as cntk:trainer#xs:double
cntk#previous-minibatch-loss-average#1#$trainer as cntk:trainer#xs:double
cntk#previous-minibatch-sample-count#1#$trainer as cntk:trainer#xs:unsignedLong
cntk#random-initializer-with-rank#3#$initializer as cntk:initializer, $output-rank as xs:integer, $filter-rank as xs:integer#cntk:initializer
cntk#random-sample#5#$weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean, [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#random-sample-inclusion-frequency#5#$weights as cntk:variable, $num-samples as xs:unsignedLong, $allow-duplicates as xs:boolean, [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#reciprocal#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#reconcile-dynamic-axes#3#$x as cntk:variable, $axes-as-operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#reduce-l1#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-l2#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-log-sum#3#$x as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#reduce-log-sum-on-axes#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-max#3#$x as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#reduce-max-on-axes#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-mean#3#$x as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#reduce-mean-on-axes#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-min#3#$x as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#reduce-min-on-axes#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-prod#3#$x as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#reduce-prod-on-axes#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-sum#3#$operand as cntk:variable, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#reduce-sum-on-axes#4#$operand as cntk:variable, $axis as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#reduce-sum-square#4#$x as cntk:variable, $axes as cntk:axis*, [$keep-dims as xs:boolean], [$name as xs:string]#cntk:function
cntk#relu#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#reshape#5#$x as cntk:variable, $replacement-shape as cntk:shape, $begin-axis as cntk:axis, $end-axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#rms-prop-learner#9#$parameters as cntk:parameter*, $lr as cntk:schedule, $gamma as xs:double, $inc as xs:double, $dec as xs:double, $max as xs:double, $min as xs:double, [$unit-gain as xs:boolean], [$alo as map:map]#cntk:schedule
cntk#rnn-step-block#3#$dh as cntk:variable, $x as cntk:variable, $additional-parameters as map:map#cntk:function
cntk#rnn-step-layer#6#$x as cntk:variable, $additional-parameters as map:map, [$go-backwards as xs:boolean], [$initial-states as cntk:constant*], [$return-full-state as xs:boolean], [$name as xs:string]#cntk:function
cntk#round#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#scalar#3#$data-type as xs:string, $value as xs:double, [$device as cntk:device]#cntk:constant
cntk#selu#4#$x as cntk:variable, [$scale as cntk:double], [$alpha as cntk:double], [$name as xs:string]#cntk:function
cntk#sequence#6#$shape as cntk:shape, $data as json:array, $sequence-start-flag as xs:boolean, [$device as cntk:device], [$data-type as xs:string], [$read-only as xs:boolean]#cntk:value
cntk#sequence-delay#4#$x as cntk:variable, $initial-state as cntk:variable, $time-step as xs:integer, $name as xs:string#cntk:function
cntk#sequence-first#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-gather#3#$operand as cntk:variable, $condition as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-gather-with-factor#4#$operand as cntk:variable, $condition as cntk:variable, $factor as json:array, $name as xs:string#cntk:function
cntk#sequence-is-first#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-is-last#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-last#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-reduce-max#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-reduce-sum#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-scatter#3#$seq as cntk:variable, $condition as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-scatter-with-factor#4#$operand as cntk:variable, $condition as cntk:variable, $factor as json:array, $name as xs:string#cntk:function
cntk#sequence-slice#4#$operand as cntk:variable, $begin-index as cntk:integer, $end-index as cntk:integer, $name as xs:string#cntk:function
cntk#sequence-softmax#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-unpack#4#$x as cntk:variable, $padding-value as cntk:variable, $supress-mask-output as cntk:variable, $name as xs:string#cntk:function
cntk#sequence-where#2#$condition as cntk:variable, $name as xs:string#cntk:function
cntk#sgd-learner#3#$parameters as cntk:parameter*, $lr as cntk:schedule, [$alo as map:map]#cntk:learner
cntk#shape#1#[$dimensions as xs:unsignedLong*]#cntk:shape
cntk#shape-dimensions#1#$shape as cntk:shape#xs:unsignedLong*
cntk#shape-free-dimension#0##xs:unsignedLong
cntk#shape-has-free-dimension#1#$shape as cntk:shape#xs:boolean
cntk#shape-has-inferred-dimension#1#$shape as cntk:shape#xs:boolean
cntk#shape-has-unbound-dimension#1#$shape as cntk:shape#xs:boolean
cntk#shape-inferred-dimension#0##xs:unsignedLong
cntk#shape-is-scalar#1#$shape as cntk:shape#xs:boolean
cntk#shape-is-unknown#1#$shape as cntk:shape#xs:boolean
cntk#shape-rank#1#$shape as cntk:shape#xs:unsignedLong
cntk#shape-total-size#1#$shape as cntk:shape#xs:unsignedLong
cntk#sigmoid#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#sin#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#sinh#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#slice#5#$operand as cntk:variable, $axis as xs:axis*, $begin-index as xs:integer*, $end-index as xs:integer*, $name as xs:string#cntk:function
cntk#slice-with-strides#6#$x as cntk:variable, $axis as xs:axis*, $begin-index as xs:integer*, $end-index as xs:integer*, $strides as xs:integer*, $name as xs:string#cntk:function
cntk#soft-plus#2#$x as cntk:variable, $name as xs:string#cntk:function
cntk#soft-sign#2#$x as cntk:variable, $name as xs:string#cntk:function
cntk#softmax#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#softmax-on-axis#3#$x as cntk:variable, $axis as cntk:axis, $name as xs:string#cntk:function
cntk#space-to-depth#3#$operand as cntk:variable, $block-size as xs:unsignedLong, $name as xs:string#cntk:function
cntk#splice#3#$inputs as cntk:variable*, $axis as cntk:axis, $name as xs:string#cntk:function
cntk#sqrt#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#square#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#squared-error#3#$output as cntk:variable, $targets as cntk:variable, [$name as xs:string]#cntk:function
cntk#squeeze#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#squeeze-axes#3#$operand as cntk:variable, $axes as cntk:axis*, $name as xs:string#cntk:function
cntk#stop-gradient#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#straight-through#2#$input as cntk:variable, [$name as xs:string]#cntk:function
cntk#subshape#3#$shape as cntk:shape, $begin-axis-id as xs:unsignedLong, $end-axis-id as xs:unsignedLong#cntk:shape
cntk#sum#2#$operands as cntk:variable, [$name as xs:string]#cntk:function
cntk#tan#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#tanh#2#$operand as cntk:variable, [$name as xs:string]#cntk:function
cntk#times#5#$left-operand as cntk:variable, $right-operand as cntk:variable, $output-rank as xs:integer, $infer-input-rank-to-map as xs:integer, $name as xs:string#cntk:function
cntk#to-batch#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#to-sequence#3#$x as cntk:variable, $sequence-axis-name-prefix as xs:string, $name as xs:string#cntk:function
cntk#to-sequence-like#3#$x as cntk:variable, $dynamic-axes-like as cntk:variable, $name as xs:string#cntk:function
cntk#to-sequence-with-lengths#4#$x as cntk:variable, $sequence-lengths as xs:variable, $sequence-axis-name-prefix as xs:string, $name as xs:string#cntk:function
cntk#top-k#3#$operand as cntk:variable, $k as xs:unsignedLong, [$name as xs:string]#cntk:function
cntk#top-k-on-axis#4#$operand as cntk:variable, $k as xs:unsignedLong, $axis as cntk:axis, [$name as xs:string]#cntk:function
cntk#total-number-of-sample-seen#1#$trainer as cntk:trainer#xs:unsignedLong
cntk#train-minibatch#4#$trainer as cntk:trainer, $variable-value-map as json:array, [$is-sweep-end as xs:boolean], [$device as cntk:device]#xs:boolean
cntk#trainer#4#$model as cntk:function, $learners as cntk:learner*, $loss-function as cntk:function, [$evaluate-function as cntk:function]#cntk:trainer
cntk#trainer-get-model#1#$trainer as cntk:trainer#cntk:function
cntk#transpose#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#transpose-axes#4#$operand as cntk:variable, $axis1 as cntk:axis, $axis2 as cntk:axis, $name as xs:string#cntk:function
cntk#transpose-on-axes#3#$x as cntk:variable*, $permutation as cntk:axis*, $name as xs:string#cntk:function
cntk#transpose-times#4#$left-operand as cntk:variable, $right-operand as cntk:variable, $output-rank as xs:integer, $name as xs:string#cntk:function
cntk#truncated-normal-initializer#2#[$scale as xs:double], [$seed as xs:unsignedLong]#cntk:initializer
cntk#uniform-initializer#2#$scale as xs:double, [$seed as xs:unsignedLong]#cntk:initializer
cntk#uniform-random#6#$shape as cntk:shape, $data-type as xs:string, [$low as xs:double], [$high as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#uniform-random-like#5#$x as cntk:variable, [$low as xs:double], [$high as xs:double], [$seed as xs:unsignedLong], [$name as xs:string]#cntk:function
cntk#unknown-dynamic-axes#0##cntk:axis*
cntk#unknown-shape#0##cntk:shape
cntk#unpack-batch#2#$operand as cntk:variable, $name as xs:string#cntk:function
cntk#unpooling#7#$operand as cntk:variable, $poolingInput as cntk:variable, $unpooling-type as xs:string, $unpooling-window-shape as cntk:shape, [$strides as cntk:shape], [$auto-padding as xs:boolean*], [$name as xs:string]#cntk:function
cntk#value#5#$shape as cntk:shape, $data as json:array, [$device as cntk:device], [$data-type as xs:string], [$read-only as xs:boolean]#cntk:value
cntk#value-alias#2#$value as cntk:value, $read-only as xs:boolean#cntk:value
cntk#value-copy-from#2#$value as cntk:value, $source-value as cntk:value#empty sequence
cntk#value-data-type#1#$value as cntk:value#xs:string
cntk#value-deep-clone#2#$value as cntk:value, $read-only as xs:boolean#cntk:value
cntk#value-device#1#$value as cntk:value#cntk:device
cntk#value-erase#1#$value as cntk:value#empty sequence
cntk#value-is-readonly#1#$value as cntk:value#xs:boolean*
cntk#value-is-valid#1#$value as cntk:value#xs:boolean*
cntk#value-shape#1#$value as cntk:value#cntk:shape
cntk#value-to-array#2#$variable as cntk:variable, $value as cntk:value#json:array
cntk#variable-as-string#1#$variable as cntk:variable#xs:string
cntk#variable-current-value-time-stamp#1#$variable as cntk:variable#xs:unsignedLong
cntk#variable-data-type#1#$variable as cntk:variable#xs:string
cntk#variable-dynamic-axes#1#$variable as cntk:variable#cntk:axis*
cntk#variable-from-function#1#$function as cntk:function#cntk:variable
cntk#variable-has-batch-axis#1#$variable as cntk:variable#xs:boolean
cntk#variable-has-sequence-axis#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-constant#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-initialized#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-input#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-output#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-parameter#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-placeholder#1#$variable as cntk:variable#xs:boolean
cntk#variable-is-sparse#1#$variable as cntk:variable#xs:boolean
cntk#variable-kind#1#$variable as cntk:variable#xs:string
cntk#variable-name#1#$variable as cntk:variable#xs:string
cntk#variable-needs-gradient#1#$variable as cntk:variable#xs:boolean
cntk#variable-owner#1#$variable as cntk:variable#cntk:function
cntk#variable-shape#1#$variable as cntk:variable#cntk:shape
cntk#variable-uid#1#$variable as cntk:variable#xs:string
cntk#variable-value#1#$variable as cntk:variable#cntk:value
cntk#weighted-binary-cross-entropy#4#$output as cntk:variable, $targets as cntk:variable, $weights as cntk:variable, $name as xs:string#cntk:function
cntk#xavier-initializer#4#[$scale as xs:double], [$output-rank as xs:integer], [$filter-rank as xs:integer], [$seed as xs:unsignedLong]#cntk:initializer
cntk#zeros-like#2#$operand as cntk:variable, $name as xs:string#cntk:function
cpf#check-transition#2#$docid as xs:string, $transition as element(*, p:transition)?#xs:boolean
cpf#document-get-error#1#$doc as xs:string#node()?
cpf#document-get-last-updated#1#$doc as xs:string#xs:dateTime?
cpf#document-get-processing-status#1#$doc as xs:string#xs:string?
cpf#document-get-state#1#$doc as xs:string#xs:anyURI?
cpf#document-set-error#2#$doc as xs:string, $error as node()?#empty-sequence()
cpf#document-set-last-updated#2#$doc as xs:string, $last-updated as xs:dateTime#empty-sequence()
cpf#document-set-processing-status#2#$doc as xs:string, $processing-status as xs:string#empty-sequence()
cpf#document-set-state#2#$doc as xs:string, $state as xs:anyURI#empty-sequence()
cpf#failure#4#$docid as xs:string, $transition as element(*, p:transition)?, $exception as node()?, $override-state as xs:anyURI?#empty-sequence()
cpf#success#3#$docid as xs:string, $transition as element(*, p:transition)?, $override-state as xs:anyURI?#empty-sequence()
css#convert#2#$css as xs:string, $options as element()?#element(css:styles)?
css#get#1#$doc as xs:string#xs:string
cts#after-query#1#$timestamp as xs:unsignedLong#cts:after-query
cts#after-query-timestamp#1#$query as cts:after-query#xs:unsignedLong
cts#aggregate#7#$native-plugin as xs:string, $aggregate-name as xs:string, $range-indexes as cts:reference*, [$argument as item()*], [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#item()*
cts#and-not-query#2#$positive-query as cts:query, $negative-query as cts:query#cts:and-not-query
cts#and-not-query-negative-query#1#$query as cts:and-not-query#cts:query
cts#and-not-query-positive-query#1#$query as cts:and-not-query#cts:query
cts#and-query#2#$queries as cts:query*, [$options as xs:string*]#cts:and-query
cts#and-query-options#1#$query as cts:and-query#xs:string*
cts#and-query-queries#1#$query as cts:and-query#cts:query*
cts#approx-center#0##item()*
cts#arc-intersection#0##item()*
cts#avg#1#$arg as xs:anyAtomicType*#xs:anyAtomicType?
cts#avg-aggregate#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType?
cts#bearing#0##item()*
cts#before-query#1#$timestamp as xs:unsignedLong#cts:before-query
cts#before-query-timestamp#1#$query as cts:before-query#xs:unsignedLong
cts#boost-query#2#$matching-query as cts:query, $boosting-query as cts:query#cts:boost-query
cts#boost-query-boosting-query#1#$query as cts:boost-query#cts:query
cts#boost-query-matching-query#1#$query as cts:boost-query#cts:query
cts#bounding-boxes#0##item()*
cts#box#4#$south as xs:float, $west as xs:float, $north as xs:float, $east as xs:float#cts:box
cts#box-east#1#$box as cts:box#xs:numeric
cts#box-intersects#0##item()*
cts#box-north#1#$box as cts:box#xs:numeric
cts#box-south#1#$box as cts:box#xs:numeric
cts#box-west#1#$box as cts:box#xs:numeric
cts#circle#2#$radius as xs:double, $center as cts:point#cts:circle
cts#circle-center#1#$circle as cts:circle#cts:point
cts#circle-intersects#0##item()*
cts#circle-radius#1#$circle as cts:circle#xs:numeric
cts#classify#4#$data-nodes as node()*, $classifier as element(cts:classifier), [$options as (element()|map:map)?], [$training-nodes as node()*]#element(cts:label)*
cts#cluster#2#$nodes as node()*, [$options as (element()|map:map)?]#element(cts:clustering)
cts#collection-match#5#$pattern as xs:string, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#collection-query#1#$uris as xs:string*#cts:collection-query
cts#collection-query-uris#1#$query as cts:collection-query#xs:string*
cts#collection-reference#1#[$options as xs:string*]#cts:reference
cts#collections#5#[$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#complex-polygon#2#$outer as cts:polygon, $inner as cts:polygon*#cts:complex-polygon
cts#complex-polygon-contains#0##item()*
cts#complex-polygon-inner#1#$complexPolygon as cts:complex-polygon#cts:polygon*
cts#complex-polygon-intersects#0##item()*
cts#complex-polygon-outer#1#$complexPolygon as cts:complex-polygon#cts:polygon?
cts#confidence#1#[$node as node()]#xs:float
cts#confidence-order#1#[$options as xs:string*]#cts:order
cts#contains#2#$nodes as item()*, $query as cts:query#xs:boolean?
cts#correlation#5#$value1 as cts:reference, $value2 as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#count#2#$arg as item()*, [$maximum as xs:double]#xs:integer
cts#count-aggregate#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:integer
cts#covariance#5#$value1 as cts:reference, $value2 as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#covariance-p#5#$value1 as cts:reference, $value2 as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#deregister#1#$id as xs:unsignedLong#empty-sequence()
cts#destination#0##item()*
cts#directory-query#2#$uris as xs:string*, [$depth as xs:string?]#cts:directory-query
cts#directory-query-depth#1#$query as cts:directory-query#xs:string
cts#directory-query-uris#1#$query as cts:directory-query#xs:string*
cts#distance#0##item()*
cts#distinctive-terms#2#$nodes as node()*, [$options as element()?]#element(cts:class)
cts#document-fragment-query#1#$query as cts:query#cts:document-fragment-query
cts#document-fragment-query-query#1#$query as cts:document-fragment-query#cts:query
cts#document-order#1#[$options as xs:string*]#cts:order
cts#document-query#1#$uris as xs:string*#cts:document-query
cts#document-query-uris#1#$query as cts:document-query#xs:string*
cts#element-attribute-pair-geospatial-boxes#9#$parent-element-names as xs:QName*, $latitude-names as xs:QName*, $longitude-names as xs:QName*, [$latitude-bounds as xs:double*], [$longitude-bounds as xs:double*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:box*
cts#element-attribute-pair-geospatial-query#6#$element-name as xs:QName*, $latitude-attribute-names as xs:QName*, $longitude-attribute-names as xs:QName*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:element-attribute-pair-geospatial-query
cts#element-attribute-pair-geospatial-query-element-name#1#$query as cts:element-attribute-pair-geospatial-query#xs:QName*
cts#element-attribute-pair-geospatial-query-latitude-name#1#$query as cts:element-attribute-pair-geospatial-query#xs:QName*
cts#element-attribute-pair-geospatial-query-longitude-name#1#$query as cts:element-attribute-pair-geospatial-query#xs:QName*
cts#element-attribute-pair-geospatial-query-options#1#$query as cts:element-attribute-pair-geospatial-query#xs:string*
cts#element-attribute-pair-geospatial-query-region#1#$query as cts:element-attribute-pair-geospatial-query#cts:region*
cts#element-attribute-pair-geospatial-query-weight#1#$query as cts:element-attribute-pair-geospatial-query#xs:double
cts#element-attribute-pair-geospatial-value-match#8#$element-names as xs:QName*, $latitude-names as xs:QName*, $longitude-names as xs:QName*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-attribute-pair-geospatial-values#8#$element-names as xs:QName*, $latitude-names as xs:QName*, $longitude-names as xs:QName*, [$start as cts:point?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-attribute-range-query#6#$element-name as xs:QName*, $attribute-name as xs:QName*, $operator as xs:string, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:element-attribute-range-query
cts#element-attribute-range-query-attribute-name#1#$query as cts:element-attribute-range-query#xs:QName*
cts#element-attribute-range-query-element-name#1#$query as cts:element-attribute-range-query#xs:QName*
cts#element-attribute-range-query-operator#1#$query as cts:element-attribute-range-query#xs:string
cts#element-attribute-range-query-options#1#$query as cts:element-attribute-range-query#xs:string*
cts#element-attribute-range-query-value#1#$query as cts:element-attribute-range-query#xs:anyAtomicType*
cts#element-attribute-range-query-weight#1#$query as cts:element-attribute-range-query#xs:double
cts#element-attribute-reference#3#$element as xs:QName, $attribute as xs:QName, [$options as xs:string*]#cts:reference
cts#element-attribute-value-co-occurrences#8#$element-name-1 as xs:QName, $attribute-name-1 as xs:QName?, $element-name-2 as xs:QName, $attribute-name-2 as xs:QName?, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#element-attribute-value-geospatial-co-occurrences#9#$element-name-1 as xs:QName, $attribute-name-1 as xs:QName?, $geo-element-name as xs:QName, [$coord-child-name-1 as xs:QName?], [$coord-child-name-2 as xs:QName?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#element-attribute-value-match#7#$element-names as xs:QName*, $attribute-names as xs:QName*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#element-attribute-value-query#5#$element-name as xs:QName*, $attribute-name as xs:QName*, $text as xs:string*, [$options as xs:string*], [$weight as xs:double?]#cts:element-attribute-value-query
cts#element-attribute-value-query-attribute-name#1#$query as cts:element-attribute-value-query#xs:QName*
cts#element-attribute-value-query-element-name#1#$query as cts:element-attribute-value-query#xs:QName*
cts#element-attribute-value-query-options#1#$query as cts:element-attribute-value-query#xs:string*
cts#element-attribute-value-query-text#1#$query as cts:element-attribute-value-query#xs:string*
cts#element-attribute-value-query-weight#1#$query as cts:element-attribute-value-query#xs:double
cts#element-attribute-value-ranges#7#$element-names as xs:QName*, $attribute-names as xs:QName*, [$bounds as xs:anyAtomicType*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:range)*
cts#element-attribute-values#7#$element-names as xs:QName*, $attribute-names as xs:QName*, [$start as xs:anyAtomicType?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#element-attribute-word-match#7#$element-names as xs:QName*, $attribute-names as xs:QName*, $pattern as xs:string, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#element-attribute-word-query#5#$element-name as xs:QName*, $attribute-name as xs:QName*, $text as xs:string*, [$options as xs:string*], [$weight as xs:double?]#cts:element-attribute-word-query
cts#element-attribute-word-query-attribute-name#1#$query as cts:element-attribute-word-query#xs:QName*
cts#element-attribute-word-query-element-name#1#$query as cts:element-attribute-word-query#xs:QName*
cts#element-attribute-word-query-options#1#$query as cts:element-attribute-word-query#xs:string*
cts#element-attribute-word-query-text#1#$query as cts:element-attribute-word-query#xs:string*
cts#element-attribute-word-query-weight#1#$query as cts:element-attribute-word-query#xs:double
cts#element-attribute-words#7#$element-names as xs:QName*, $attribute-names as xs:QName*, [$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#element-child-geospatial-boxes#8#$parent-element-names as xs:QName*, $child-element-names as xs:QName*, [$latitude-bounds as xs:double*], [$longitude-bounds as xs:double*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:box*
cts#element-child-geospatial-query#5#$parent-element-name as xs:QName*, $child-element-names as xs:QName*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:element-child-geospatial-query
cts#element-child-geospatial-query-child-name#1#$query as cts:element-child-geospatial-query#xs:QName*
cts#element-child-geospatial-query-element-name#1#$query as cts:element-child-geospatial-query#xs:QName*
cts#element-child-geospatial-query-options#1#$query as cts:element-child-geospatial-query#xs:string*
cts#element-child-geospatial-query-region#1#$query as cts:element-child-geospatial-query#cts:region*
cts#element-child-geospatial-query-weight#1#$query as cts:element-child-geospatial-query#xs:double
cts#element-child-geospatial-value-match#7#$element-names as xs:QName*, $child-names as xs:QName*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-child-geospatial-values#7#$element-names as xs:QName*, $child-names as xs:QName*, [$start as cts:point?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-geospatial-boxes#7#$element-names as xs:QName*, [$latitude-bounds as xs:double*], [$longitude-bounds as xs:double*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:box*
cts#element-geospatial-query#4#$element-name as xs:QName*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:element-geospatial-query
cts#element-geospatial-query-element-name#1#$query as cts:element-geospatial-query#xs:QName*
cts#element-geospatial-query-options#1#$query as cts:element-geospatial-query#xs:string*
cts#element-geospatial-query-region#1#$query as cts:element-geospatial-query#cts:region*
cts#element-geospatial-query-weight#1#$query as cts:element-geospatial-query#xs:double
cts#element-geospatial-value-match#6#$element-names as xs:QName*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-geospatial-values#6#$element-names as xs:QName*, [$start as cts:point?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-pair-geospatial-boxes#9#$parent-element-names as xs:QName*, $latitude-names as xs:QName*, $longitude-names as xs:QName*, [$latitude-bounds as xs:double*], [$longitude-bounds as xs:double*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:box*
cts#element-pair-geospatial-query#6#$element-name as xs:QName*, $latitude-element-names as xs:QName*, $longitude-element-names as xs:QName*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:element-pair-geospatial-query
cts#element-pair-geospatial-query-element-name#1#$query as cts:element-pair-geospatial-query#xs:QName*
cts#element-pair-geospatial-query-latitude-name#1#$query as cts:element-pair-geospatial-query#xs:QName*
cts#element-pair-geospatial-query-longitude-name#1#$query as cts:element-pair-geospatial-query#xs:QName*
cts#element-pair-geospatial-query-options#1#$query as cts:element-pair-geospatial-query#xs:string*
cts#element-pair-geospatial-query-region#1#$query as cts:element-pair-geospatial-query#cts:region*
cts#element-pair-geospatial-query-weight#1#$query as cts:element-pair-geospatial-query#xs:double
cts#element-pair-geospatial-value-match#8#$element-names as xs:QName*, $latitude-names as xs:QName*, $longitude-names as xs:QName*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-pair-geospatial-values#8#$element-names as xs:QName*, $latitude-names as xs:QName*, $longitude-names as xs:QName*, [$start as cts:point?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:point*
cts#element-query#2#$element-name as xs:QName*, $query as cts:query#cts:element-query
cts#element-query-element-name#1#$query as cts:element-query#xs:QName*
cts#element-query-query#1#$query as cts:element-query#cts:query
cts#element-range-query#5#$element-name as xs:QName*, $operator as xs:string, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:element-range-query
cts#element-range-query-element-name#1#$query as cts:element-range-query#xs:QName*
cts#element-range-query-operator#1#$query as cts:element-range-query#xs:string
cts#element-range-query-options#1#$query as cts:element-range-query#xs:string*
cts#element-range-query-value#1#$query as cts:element-range-query#xs:anyAtomicType*
cts#element-range-query-weight#1#$query as cts:element-range-query#xs:double
cts#element-reference#2#$element as xs:QName, [$options as xs:string*]#cts:reference
cts#element-value-co-occurrences#6#$element-name-1 as xs:QName, $element-name-2 as xs:QName, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#element-value-geospatial-co-occurrences#8#$element-name-1 as xs:QName, $geo-element-name as xs:QName, [$coord-child-name-1 as xs:QName?], [$coord-child-name-2 as xs:QName?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#element-value-match#6#$element-names as xs:QName*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#element-value-query#4#$element-name as xs:QName*, [$text as xs:string*], [$options as xs:string*], [$weight as xs:double?]#cts:element-value-query
cts#element-value-query-element-name#1#$query as cts:element-value-query#xs:QName*
cts#element-value-query-options#1#$query as cts:element-value-query#xs:string*
cts#element-value-query-text#1#$query as cts:element-value-query#xs:string*
cts#element-value-query-weight#1#$query as cts:element-value-query#xs:double
cts#element-value-ranges#6#$element-names as xs:QName*, [$bounds as xs:anyAtomicType*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:range)*
cts#element-values#6#$element-names as xs:QName*, [$start as xs:anyAtomicType?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#element-walk#3#$node as node(), $element as xs:QName*, $expr as item()*#node()
cts#element-word-match#6#$element-names as xs:QName*, $pattern as xs:string?, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#element-word-query#4#$element-name as xs:QName*, $text as xs:string*, [$options as xs:string*], [$weight as xs:double?]#cts:element-word-query
cts#element-word-query-element-name#1#$query as cts:element-word-query#xs:QName*
cts#element-word-query-options#1#$query as cts:element-word-query#xs:string*
cts#element-word-query-text#1#$query as cts:element-word-query#xs:string*
cts#element-word-query-weight#1#$query as cts:element-word-query#xs:double
cts#element-words#6#$element-names as xs:QName*, [$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#entity#4#$id as xs:string, $normalizedText as xs:string, $text as xs:string, $type as xs:string#cts:entity
cts#entity-dictionary#2#$entities as cts:entity*, [$options as xs:string*]#cts:entity-dictionary
cts#entity-dictionary-parse#1#$uri as xs:string#cts:entity-dictionary
cts#entity-dictionary-parse#2#$contents as xs:string*, [$options as xs:string*]#cts:entity-dictionary
cts#false-query#0##cts:or-query
cts#field-range-query#5#$field-name as xs:string*, $operator as xs:string, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:field-range-query
cts#field-range-query-field-name#1#$query as cts:field-range-query#xs:string*
cts#field-range-query-operator#1#$query as cts:field-range-query#xs:string
cts#field-range-query-options#1#$query as cts:field-range-query#xs:string*
cts#field-range-query-value#1#$query as cts:field-range-query#xs:anyAtomicType*
cts#field-range-query-weight#1#$query as cts:field-range-query#xs:double
cts#field-reference#2#$field as xs:string, [$options as xs:string*]#cts:reference
cts#field-value-co-occurrences#6#$field-name-1 as xs:string, $field-name-2 as xs:string, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#field-value-match#6#$field-names as xs:string*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#field-value-query#4#$field-name as xs:string*, $text as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:field-value-query
cts#field-value-query-field-name#1#$query as cts:field-value-query#xs:string*
cts#field-value-query-options#1#$query as cts:field-value-query#xs:string*
cts#field-value-query-text#1#$query as cts:field-value-query#xs:anyAtomicType*
cts#field-value-query-weight#1#$query as cts:field-value-query#xs:double
cts#field-value-ranges#6#$field-names as xs:string*, [$bounds as xs:anyAtomicType*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:range)*
cts#field-values#6#$field-names as xs:string*, [$start as xs:anyAtomicType?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#field-word-match#6#$field-names as xs:string*, $pattern as xs:string, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#field-word-query#4#$field-name as xs:string*, $text as xs:string*, [$options as xs:string*], [$weight as xs:double?]#cts:field-word-query
cts#field-word-query-field-name#1#$query as cts:field-word-query#xs:string*
cts#field-word-query-options#1#$query as cts:field-word-query#xs:string*
cts#field-word-query-text#1#$query as cts:field-word-query#xs:string*
cts#field-word-query-weight#1#$query as cts:field-word-query#xs:double
cts#field-words#6#$field-names as xs:string*, [$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#fitness#1#[$node as node()]#xs:float
cts#fitness-order#1#[$options as xs:string*]#cts:order
cts#frequency#1#$value as item()#xs:integer
cts#geospatial-attribute-pair-reference#4#$element as xs:QName, $lat as xs:QName, $long as xs:QName, [$options as xs:string*]#cts:reference
cts#geospatial-boxes#7#$geo-indexes as cts:reference*, [$latitude-bounds as xs:double*], [$longitude-bounds as xs:double*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#cts:box*
cts#geospatial-co-occurrences#10#$geo-element-name-1 as xs:QName, [$child-1-name-1 as xs:QName?], [$child-1-name-2 as xs:QName?], $geo-element-name-2 as xs:QName, [$child-2-name-1 as xs:QName?], [$child-2-name-2 as xs:QName?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#geospatial-element-child-reference#3#$element as xs:QName, $child as xs:QName, [$options as xs:string*]#cts:reference
cts#geospatial-element-pair-reference#4#$element as xs:QName, $lat as xs:QName, $long as xs:QName, [$options as xs:string*]#cts:reference
cts#geospatial-element-reference#2#$element as xs:QName, [$options as xs:string*]#cts:reference
cts#geospatial-json-property-child-reference#3#$property as xs:string, $child as xs:string, [$options as xs:string*]#cts:reference
cts#geospatial-json-property-pair-reference#4#$property as xs:string, $lat as xs:string, $long as xs:string, [$options as xs:string*]#cts:reference
cts#geospatial-json-property-reference#2#$property as xs:string, [$options as xs:string*]#cts:reference
cts#geospatial-path-reference#3#$path-expression as xs:string, [$options as xs:string*], [$map as map:map]#cts:reference
cts#geospatial-region-path-reference#3#$path-expression as xs:string, [$options as xs:string*], [$namespaces as map:map]#cts:reference
cts#geospatial-region-query#5#$geospatial-region-reference as cts:reference*, $operation as xs:string, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:geospatial-region-query
cts#geospatial-region-query-operation#1#$query as cts:geospatial-region-query#xs:string
cts#geospatial-region-query-options#1#$query as cts:geospatial-region-query#xs:string*
cts#geospatial-region-query-reference#1#$query as cts:geospatial-region-query#cts:reference*
cts#geospatial-region-query-region#1#$query as cts:geospatial-region-query#cts:region*
cts#geospatial-region-query-weight#1#$query as cts:geospatial-region-query#xs:double
cts#highlight#3#$node as node(), $query as cts:query, $expr as item()*#node()
cts#index-order#2#$index as cts:reference, [$options as xs:string*]#cts:order
cts#json-property-child-geospatial-query#5#$parent-property-name as xs:string*, $child-property-names as xs:string*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:json-property-child-geospatial-query
cts#json-property-child-geospatial-query-child-name#1#$query as cts:json-property-child-geospatial-query#xs:string*
cts#json-property-child-geospatial-query-options#1#$query as cts:json-property-child-geospatial-query#xs:string*
cts#json-property-child-geospatial-query-property-name#1#$query as cts:json-property-child-geospatial-query#xs:string*
cts#json-property-child-geospatial-query-region#1#$query as cts:json-property-child-geospatial-query#cts:region*
cts#json-property-child-geospatial-query-weight#1#$query as cts:json-property-child-geospatial-query#xs:double
cts#json-property-geospatial-query#4#$property-name as xs:string*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:json-property-geospatial-query
cts#json-property-geospatial-query-options#1#$query as cts:json-property-geospatial-query#xs:string*
cts#json-property-geospatial-query-property-name#1#$query as cts:json-property-geospatial-query#xs:string*
cts#json-property-geospatial-query-region#1#$query as cts:json-property-geospatial-query#cts:region*
cts#json-property-geospatial-query-weight#1#$query as cts:json-property-geospatial-query#xs:double
cts#json-property-pair-geospatial-query#6#$property-name as xs:string*, $latitude-property-names as xs:string*, $longitude-property-names as xs:string*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:json-property-pair-geospatial-query
cts#json-property-pair-geospatial-query-latitude-name#1#$query as cts:json-property-pair-geospatial-query#xs:string*
cts#json-property-pair-geospatial-query-longitude-name#1#$query as cts:json-property-pair-geospatial-query#xs:string*
cts#json-property-pair-geospatial-query-options#1#$query as cts:json-property-pair-geospatial-query#xs:string*
cts#json-property-pair-geospatial-query-property-name#1#$query as cts:json-property-pair-geospatial-query#xs:string*
cts#json-property-pair-geospatial-query-region#1#$query as cts:json-property-pair-geospatial-query#cts:region*
cts#json-property-pair-geospatial-query-weight#1#$query as cts:json-property-pair-geospatial-query#xs:double
cts#json-property-range-query#5#$property-name as xs:string*, $operator as xs:string, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:json-property-range-query
cts#json-property-range-query-operator#1#$query as cts:json-property-range-query#xs:string
cts#json-property-range-query-options#1#$query as cts:json-property-range-query#xs:string*
cts#json-property-range-query-property-name#1#$query as cts:json-property-range-query#xs:string*
cts#json-property-range-query-value#1#$query as cts:json-property-range-query#xs:anyAtomicType*
cts#json-property-range-query-weight#1#$query as cts:json-property-range-query#xs:double
cts#json-property-reference#2#$property as xs:string, [$options as xs:string*]#cts:reference
cts#json-property-scope-query#2#$property-name as xs:string*, $query as cts:query#cts:json-property-scope-query
cts#json-property-scope-query-property-name#1#$query as cts:json-property-scope-query#xs:string*
cts#json-property-scope-query-query#1#$query as cts:json-property-scope-query#cts:query
cts#json-property-value-query#4#$property-name as xs:string*, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:json-property-value-query
cts#json-property-value-query-options#1#$query as cts:json-property-value-query#xs:string*
cts#json-property-value-query-property-name#1#$query as cts:json-property-value-query#xs:string*
cts#json-property-value-query-text#1#$query as cts:json-property-value-query#xs:string*
cts#json-property-value-query-value#1#$query as cts:json-property-value-query#xs:anyAtomicType*
cts#json-property-value-query-weight#1#$query as cts:json-property-value-query#xs:double
cts#json-property-word-match#6#$property-names as xs:string*, $pattern as xs:string?, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#json-property-word-query#4#$property-name as xs:string*, $text as xs:string*, [$options as xs:string*], [$weight as xs:double?]#cts:json-property-word-query
cts#json-property-word-query-options#1#$query as cts:json-property-word-query#xs:string*
cts#json-property-word-query-property-name#1#$query as cts:json-property-word-query#xs:string*
cts#json-property-word-query-text#1#$query as cts:json-property-word-query#xs:string*
cts#json-property-word-query-weight#1#$query as cts:json-property-word-query#xs:double
cts#json-property-words#6#$property-names as xs:string*, [$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#linear-model#4#$values as cts:reference*, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#math:linear-model?
cts#linestring#1#$vertices as cts:point*#cts:linestring
cts#linestring-vertices#1#$linestring as cts:linestring#cts:point*
cts#locks-fragment-query#1#$query as cts:query#cts:locks-fragment-query
cts#locks-fragment-query-query#1#$query as cts:locks-fragment-query#cts:query
cts#lsqt-query#4#$temporal-collection as xs:string, [$timestamp as xs:dateTime?], [$options as xs:string*], [$weight as xs:double?]#cts:lsqt-query
cts#lsqt-query-options#1#$query as cts:lsqt-query#xs:string*
cts#lsqt-query-temporal-collection#1#$query as cts:lsqt-query#xs:string
cts#lsqt-query-timestamp#1#$query as cts:lsqt-query#xs:dateTime
cts#lsqt-query-weight#1#$query as cts:lsqt-query#xs:double
cts#match-regions#6#$range-indexes as cts:reference*, $operation as xs:string, $regions as cts:region*, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#item()*
cts#max#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType?
cts#median#1#$arg as xs:double*#xs:double?
cts#min#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType?
cts#near-query#4#$queries as cts:query*, [$distance as xs:double?], [$options as xs:string*], [$distance-weight as xs:double?]#cts:near-query
cts#near-query-distance#1#$query as cts:near-query#xs:integer
cts#near-query-options#1#$query as cts:near-query#xs:string*
cts#near-query-queries#1#$query as cts:near-query#cts:query*
cts#near-query-weight#1#$query as cts:near-query#xs:double
cts#not-in-query#2#$positive-query as cts:query, $negative-query as cts:query#cts:not-in-query
cts#not-in-query-negative-query#1#$query as cts:not-in-query#cts:query
cts#not-in-query-positive-query#1#$query as cts:not-in-query#cts:query
cts#not-query#1#$query as cts:query#cts:not-query
cts#not-query-query#1#$query as cts:not-query#cts:query
cts#not-query-weight#1#$query as cts:not-query#xs:double
cts#or-query#2#$queries as cts:query*, [$options as xs:string*]#cts:or-query
cts#or-query-options#1#$query as cts:or-query#xs:string*
cts#or-query-queries#1#$query as cts:or-query#cts:query*
cts#parse#2#$query as xs:string, [$bindings as map:map?]#cts:query
cts#parse-wkt#0##item()*
cts#part-of-speech#1#$token as cts:token#xs:string
cts#path-geospatial-query#4#$path-expression as xs:string*, $regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:path-geospatial-query
cts#path-geospatial-query-options#1#$query as cts:path-geospatial-query#xs:string*
cts#path-geospatial-query-path-expression#1#$query as cts:path-geospatial-query#xs:string*
cts#path-geospatial-query-region#1#$query as cts:path-geospatial-query#cts:region*
cts#path-geospatial-query-weight#1#$query as cts:path-geospatial-query#xs:double
cts#path-range-query#5#$path-expression as xs:string*, $operator as xs:string, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:path-range-query
cts#path-range-query-operator#1#$query as cts:path-range-query#xs:string
cts#path-range-query-options#1#$query as cts:path-range-query#xs:string*
cts#path-range-query-path-name#1#$query as cts:path-range-query#xs:string*
cts#path-range-query-value#1#$query as cts:path-range-query#xs:anyAtomicType*
cts#path-range-query-weight#1#$query as cts:path-range-query#xs:double
cts#path-reference#3#$path-expression as xs:string, [$options as xs:string*], [$map as map:map]#cts:reference
cts#percent-rank#3#$arg as xs:anyAtomicType*, $value as xs:anyAtomicType, [$options as xs:string*]#xs:double?
cts#percentile#2#$arg as xs:double*, $p as xs:double*#xs:double*
cts#period#2#$start as xs:dateTime, $end as xs:dateTime#cts:period
cts#period-compare#3#$period-1 as cts:period, $operator as xs:string, $period-2 as cts:period#xs:boolean
cts#period-compare-query#4#$axis-1 as xs:string, $operator as xs:string, $axis-2 as xs:string, [$options as xs:string*]#cts:period-compare-query
cts#period-compare-query-axis-1#1#$query as cts:period-compare-query#xs:string
cts#period-compare-query-axis-2#1#$query as cts:period-compare-query#xs:string
cts#period-compare-query-operator#1#$query as cts:period-compare-query#xs:string
cts#period-compare-query-options#1#$query as cts:period-compare-query#xs:string*
cts#period-range-query#4#$axis-name as xs:string*, $operator as xs:string, [$period as cts:period*], [$options as xs:string*]#cts:period-range-query
cts#period-range-query-axis#1#$query as cts:period-range-query#xs:string*
cts#period-range-query-operator#1#$query as cts:period-range-query#xs:string
cts#period-range-query-options#1#$query as cts:period-range-query#xs:string*
cts#period-range-query-period#1#$query as cts:period-range-query#xs:anyAtomicType*
cts#point#2#$latitude as xs:float, $longitude as xs:float#cts:point
cts#point-latitude#1#$point as cts:point#xs:numeric
cts#point-longitude#1#$point as cts:point#xs:numeric
cts#polygon#1#$vertices as cts:point*#cts:polygon
cts#polygon-contains#0##item()*
cts#polygon-intersects#0##item()*
cts#polygon-vertices#1#$polygon as cts:polygon#cts:point*
cts#properties-fragment-query#1#$query as cts:query#cts:properties-fragment-query
cts#properties-fragment-query-query#1#$query as cts:properties-fragment-query#cts:query
cts#quality#1#[$node as node()]#xs:integer
cts#quality-order#1#[$options as xs:string*]#cts:order
cts#query#1#$query as node()#cts:query
cts#range-query#5#$index as cts:reference*, $operator as xs:string, $value as xs:anyAtomicType*, [$options as xs:string*], [$weight as xs:double?]#cts:range-query
cts#range-query-index#1#$query as cts:range-query#xs:QName*
cts#range-query-operator#1#$query as cts:range-query#xs:string
cts#range-query-options#1#$query as cts:range-query#xs:string*
cts#range-query-value#1#$query as cts:range-query#xs:anyAtomicType*
cts#range-query-weight#1#$query as cts:range-query#xs:double
cts#rank#3#$arg as xs:anyAtomicType*, $value as xs:anyAtomicType, [$options as xs:string*]#xs:integer?
cts#reference-collation#1#$index as cts:reference#xs:string
cts#reference-coordinate-system#1#$index as cts:reference#xs:string
cts#reference-nullable#1#$reference as cts:reference#xs:boolean
cts#reference-parse#1#$reference as node()#cts:reference
cts#reference-scalar-type#1#$index as cts:reference#xs:string
cts#region-contains#0##item()*
cts#region-intersects#0##item()*
cts#register#1#$query as cts:query#xs:unsignedLong
cts#registered-query#3#$ids as xs:unsignedLong*, [$options as xs:string*], [$weight as xs:double?]#cts:registered-query
cts#registered-query-ids#1#$query as cts:registered-query#xs:unsignedLong*
cts#registered-query-options#1#$query as cts:registered-query#xs:string*
cts#registered-query-weight#1#$query as cts:registered-query#xs:double
cts#relevance-info#2#[$node as node()], [$output-kind as xs:string]#element()?
cts#remainder#1#[$node as node()]#xs:integer
cts#reverse-query#2#$nodes as node()*, [$weight as xs:double?]#cts:reverse-query
cts#reverse-query-nodes#1#$query as cts:reverse-query#node()*
cts#reverse-query-weight#1#$query as cts:reverse-query#xs:double
cts#score#1#[$node as node()]#xs:integer
cts#score-order#1#[$options as xs:string*]#cts:order
cts#search#5#$expression as node()*, $query as cts:query?, [$options as (cts:order|xs:string)*], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#node()*
cts#shortest-distance#0##item()*
cts#similar-query#3#$nodes as node()*, [$weight as xs:double?], [$options as element()?]#cts:similar-query
cts#similar-query-nodes#1#$query as cts:similar-query#node()*
cts#similar-query-weight#1#$query as cts:similar-query#xs:double
cts#stddev#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#stddev-p#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#stem#3#$text as xs:string, [$language as xs:string?], [$partOfSpeech as xs:string?]#xs:string*
cts#sum#2#$arg as xs:anyAtomicType*, [$zero as xs:anyAtomicType?]#xs:anyAtomicType?
cts#sum-aggregate#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType?
cts#thresholds#3#$computed-labels as element(cts:label)*, $known-labels as element(cts:label)*, [$recall-weight as xs:double?]#element(cts:thresholds)?
cts#to-wkt#0##item()*
cts#tokenize#3#$text as xs:string, [$language as xs:string?], [$field as xs:string?]#cts:token*
cts#train#3#$training-nodes as node()*, $labels as element(cts:label)*, [$options as (element()|map:map)?]#element(cts:classifier)?
cts#triple-range-query#6#$subject as xs:anyAtomicType*, $predicate as xs:anyAtomicType*, $object as xs:anyAtomicType*, [$operator as xs:string*], [$options as xs:string*], [$weight as xs:double?]#cts:triple-range-query
cts#triple-range-query-object#1#$query as cts:triple-range-query#xs:anyAtomicType*
cts#triple-range-query-operator#1#$query as cts:triple-range-query#xs:string*
cts#triple-range-query-options#1#$query as cts:triple-range-query#xs:string*
cts#triple-range-query-predicate#1#$query as cts:triple-range-query#xs:anyAtomicType*
cts#triple-range-query-subject#1#$query as cts:triple-range-query#xs:anyAtomicType*
cts#triple-range-query-weight#1#$query as cts:triple-range-query#xs:double
cts#triple-value-statistics#2#[$values as xs:anyAtomicType*], [$forest-ids as xs:unsignedLong*]#element(triple-value-statistics)*
cts#triples#7#[$subject as xs:anyAtomicType*], [$predicate as xs:anyAtomicType*], [$object as xs:anyAtomicType*], [$operator as xs:string*], [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#sem:triple*
cts#true-query#0##cts:and-query
cts#unordered#0##cts:order
cts#uri-match#5#$pattern as xs:string, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#uri-reference#0##cts:reference
cts#uris#5#[$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#valid-document-patch-path#2#$string as xs:string, [$map as map:map?]#xs:boolean
cts#valid-extract-path#2#$string as xs:string, [$map as map:map?]#xs:boolean
cts#valid-index-path#2#$string as xs:string, $ignorens as xs:boolean#xs:boolean
cts#valid-optic-path#2#$string as xs:string, [$map as map:map?]#xs:boolean
cts#valid-tde-context#2#$string as xs:string, [$map as map:map?]#xs:boolean
cts#value-co-occurrences#6#$range-index-1 as cts:reference, $range-index-2 as cts:reference, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:co-occurrence)*
cts#value-match#6#$range-indexes as cts:reference*, $pattern as xs:anyAtomicType, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#value-ranges#6#$range-indexes as cts:reference*, [$bounds as xs:anyAtomicType*], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#element(cts:range)*
cts#value-tuples#5#$range-indexes as cts:reference*, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#json:array*
cts#values#6#$range-indexes as cts:reference*, [$start as xs:anyAtomicType?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:anyAtomicType*
cts#variance#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#variance-p#4#$range-index as cts:reference, [$options as xs:string*], [$query as cts:query?], [$forest-ids as xs:unsignedLong*]#xs:double?
cts#walk#3#$node as node(), $query as cts:query, $expr as item()*#item()*
cts#word-match#5#$pattern as xs:string, [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cts#word-query#3#$text as xs:string*, [$options as xs:string*], [$weight as xs:double?]#cts:word-query
cts#word-query-options#1#$query as cts:word-query#xs:string*
cts#word-query-text#1#$query as cts:word-query#xs:string*
cts#word-query-weight#1#$query as cts:word-query#xs:double
cts#words#5#[$start as xs:string?], [$options as xs:string*], [$query as cts:query?], [$quality-weight as xs:double?], [$forest-ids as xs:unsignedLong*]#xs:string*
cvt#basename#1#$uri as xs:string#xs:string
cvt#basepath#1#$uri as xs:string#xs:string
cvt#destination-uri#2#$uri as xs:string, $extension as xs:string#xs:string
cvt#part-uri#2#$uri as xs:string, $part as xs:string#xs:string
cvt#save-converted-documents#5#$source-uri as xs:string, $destination-uri as xs:string, $manifest as element(), $docs as document-node()*, [$destination-collections as xs:string*]#empty-sequence()
dbg#attach#1#$request-id as xs:unsignedLong#empty-sequence()
dbg#attached#1#[$server as xs:unsignedLong]#xs:unsignedLong*
dbg#break#2#$request as xs:unsignedLong, [$expression as xs:unsignedLong]#empty-sequence()
dbg#breakpoints#1#$request as xs:unsignedLong#xs:unsignedLong*
dbg#clear#2#$request as xs:unsignedLong, $expression as xs:unsignedLong#empty-sequence()
dbg#connect#1#$server as xs:unsignedLong#empty-sequence()
dbg#connected#0##xs:unsignedLong*
dbg#continue#1#$request as xs:unsignedLong#empty-sequence()
dbg#detach#1#$request-id as xs:unsignedLong#empty-sequence()
dbg#disconnect#1#$server as xs:unsignedLong#empty-sequence()
dbg#eval#3#$xquery as xs:string, [$vars as item()*], [$options as (element()|map:map)?]#xs:unsignedLong
dbg#expr#2#$request as xs:unsignedLong, $expression as xs:unsignedLong#element(dbg:expression)
dbg#finish#1#$request as xs:unsignedLong#empty-sequence()
dbg#function#3#$request as xs:unsignedLong, $uri as xs:string, $function as xs:QName#xs:unsignedLong
dbg#invoke#3#$uri as xs:string, [$vars as item()*], [$options as (element()|map:map)?]#xs:unsignedLong
dbg#line#3#$request as xs:unsignedLong, $uri as xs:string, $line as xs:unsignedInt#xs:unsignedLong*
dbg#next#1#$request as xs:unsignedLong#empty-sequence()
dbg#out#1#$request as xs:unsignedLong#empty-sequence()
dbg#stack#1#$request as xs:unsignedLong#element(dbg:stack)
dbg#status#1#$request-id as xs:unsignedLong*#element(dbg:requests)?
dbg#step#1#$request as xs:unsignedLong#empty-sequence()
dbg#stop#0##empty-sequence()
dbg#stopped#1#[$server as xs:unsignedLong]#xs:unsignedLong*
dbg#value#2#$request as xs:unsignedLong, [$expr as xs:string]#item()*
dbg#wait#2#$request-id as xs:unsignedLong*, $timeout as xs:unsignedLong#xs:unsignedLong?
dbk#convert#2#$doc as node()?, $options as element()?#node()*
dls#as-of-query#1#$when as xs:dateTime#cts:properties-fragment-query
dls#author-query#1#$author as xs:unsignedLong#cts:properties-fragment-query
dls#break-checkout#2#$uri as xs:string, $deep as xs:boolean#empty-sequence()
dls#document-add-collections#2#$uri as xs:string, $collections as xs:string*#empty-sequence()
dls#document-add-permissions#2#$uri as xs:string, $permissions as item()*#empty-sequence()
dls#document-add-properties#2#$uri as xs:string, $properties as element()*#empty-sequence()
dls#document-checkin#2#$uri as xs:string, $deep as xs:boolean#empty-sequence()
dls#document-checkout#4#$uri as xs:string, $deep as xs:boolean, [$annotation as item()?], [$timeout as xs:unsignedLong?]#empty-sequence()
dls#document-checkout-status#1#$uri as xs:string#element(dls:checkout)?
dls#document-checkout-update-checkin#8#$uri as xs:string, $doc as node(), $annotation as item()*, $retain-history as xs:boolean, [$permissions as item()*], [$collections as xs:string*], [$quality as xs:integer?], [$forest-ids as xs:unsignedLong*]#xs:string*
dls#document-delete#3#$uri as xs:string, $keep-old-versions as xs:boolean, $retain-history as xs:boolean#empty-sequence()
dls#document-extract-part#8#$new-uri as xs:string, $element as element(), $annotation as item()*, $retain-history as xs:boolean, [$permissions as item()*], [$collections as xs:string*], [$quality as xs:integer?], [$forest-ids as xs:unsignedLong*]#xs:string*
dls#document-get-permissions#1#$uri as xs:string#element(sec:permission)*
dls#document-history#1#$uri as xs:string#element(dls:document-history)
dls#document-include-query#1#$uri as xs:string#cts:query
dls#document-insert-and-manage#8#$uri as xs:string, $deep as xs:boolean, $doc as node(), [$annotation as item()*], [$permissions as item()*], [$collections as xs:string*], [$quality as xs:integer?], [$forest-ids as xs:unsignedLong*]#xs:string*
dls#document-is-managed#1#$uri as xs:string#xs:boolean
dls#document-manage#3#$uri as xs:string, $deep as xs:boolean, [$annotation as item()*]#empty-sequence()
dls#document-purge#3#$uri as xs:string, $delete as xs:boolean, $retain-history as xs:boolean#xs:string*
dls#document-remove-collections#2#$uri as xs:string, $collections as xs:string*#empty-sequence()
dls#document-remove-permissions#2#$uri as xs:string, $permissions as item()*#empty-sequence()
dls#document-remove-properties#2#$uri as xs:string, $property-names as xs:QName*#empty-sequence()
dls#document-retention-rules#1#$uri as xs:string#element(dls:retention-rule)*
dls#document-set-collections#2#$uri as xs:string, $collections as xs:string*#empty-sequence()
dls#document-set-permissions#2#$uri as xs:string, $permissions as item()*#empty-sequence()
dls#document-set-properties#2#$uri as xs:string, $properties as element()*#empty-sequence()
dls#document-set-property#2#$uri as xs:string, $property as element()#empty-sequence()
dls#document-set-quality#2#$uri as xs:string, $quality as xs:int#empty-sequence()
dls#document-unmanage#3#$uri as xs:string, $deep as xs:boolean, $remove-versions as xs:boolean#empty-sequence()
dls#document-update#8#$uri as xs:string, $doc as node(), $annotation as item()*, $retain-history as xs:boolean, [$permissions as item()*], [$collections as xs:string*], [$quality as xs:integer?], [$forest-ids as xs:unsignedLong*]#xs:string*
dls#document-version#2#$uri as xs:string, $version-number as xs:unsignedInt#document-node()
dls#document-version-as-of#2#$uri as xs:string, $as-of as xs:dateTime#document-node()
dls#document-version-delete#3#$uri as xs:string, $version as xs:integer, $retain-history as xs:boolean#empty-sequence()
dls#document-version-query#1#$version as xs:unsignedLong#cts:properties-fragment-query
dls#document-version-uri#2#$document-uri as xs:string, $version as xs:integer#xs:string
dls#document-version-uris#1#$uri as xs:string#xs:string*
dls#document-versions-query#1#$uri as xs:string#cts:properties-fragment-query
dls#documents-query#0##cts:query
dls#latest-validation-results#0##element(dls:validation-results)?
dls#link-expand#3#$context as node(), $ref as element(xi:include), $restriction as cts:query?#node()*
dls#link-references#2#$node as node(), $restriction as cts:query?#xs:string*
dls#node-expand#2#$node as node(), $restriction as cts:query?#node()
dls#purge#2#$delete as xs:boolean, $retain-history as xs:boolean#xs:string*
dls#retention-rule#6#$name as xs:string, $comment as item()*, $num-versions as xs:unsignedInt?, $duration as xs:duration?, $document-query-text as xs:string?, $document-query as cts:query?#element(dls:retention-rule)
dls#retention-rule-insert#1#$rules as element(dls:retention-rule)*#empty-sequence()
dls#retention-rule-remove#1#$names as xs:string*#empty-sequence()
dls#retention-rules#1#$names as xs:string*#element(dls:retention-rule)*
dls#set-upgrade-status#1#$promote as xs:boolean#element(dls:upgrade-status)
dls#start-upgrade#0##empty-sequence()
dls#update-validation-results#1#$results as element(dls:validation-results)#empty-sequence()
dls#validate-all-documents#1#$verbose as xs:boolean#element(dls:validation-results)
dom#add-permissions#2#$domain-name as xs:string, $permissions as item()*#empty-sequence()
dom#add-pipeline#2#$domain-name as xs:string, $pipeline-id as xs:unsignedLong#empty-sequence()
dom#collection#0##xs:string
dom#configuration-create#4#$restart-user as xs:string, $evaluation-context as element(dom:evaluation-context), $default-domain as xs:unsignedLong, $permissions as element(sec:permission)*#xs:unsignedLong
dom#configuration-get#0##element(dom:configuration)
dom#configuration-set-default-domain#1#$domain-id as xs:unsignedLong#empty-sequence()
dom#configuration-set-evaluation-context#1#$context as element(dom:evaluation-context)#empty-sequence()
dom#configuration-set-permissions#1#$permissions as item()*#empty-sequence()
dom#configuration-set-restart-user#1#$restart-user as xs:string#empty-sequence()
dom#create#6#$name as xs:string, $description as xs:string, $scope as element(dom:domain-scope), $context as element(dom:evaluation-context), $pipelines as xs:unsignedLong*, $permissions as item()*#xs:unsignedLong
dom#domain-scope#3#$document-scope as xs:string, $uri as xs:string, $depth as xs:string?#element(dom:domain-scope)
dom#domains#0##element(dom:domain)*
dom#evaluation-context#2#$database as xs:unsignedLong, $root as xs:string#element(dom:evaluation-context)
dom#get#1#$domain-name as xs:string#element(dom:domain)
dom#remove#1#$domain-name as xs:string#empty-sequence()
dom#remove-permissions#2#$domain-name as xs:string, $permissions as item()*#empty-sequence()
dom#remove-pipeline#2#$domain-name as xs:string, $pipeline-id as xs:unsignedLong#empty-sequence()
dom#set-description#2#$domain-name as xs:string, $description as xs:string#empty-sequence()
dom#set-domain-scope#2#$domain-name as xs:string, $scope as element(dom:domain-scope)#empty-sequence()
dom#set-evaluation-context#2#$domain-name as xs:string, $context as element(dom:evaluation-context)#empty-sequence()
dom#set-name#2#$domain-name as xs:string, $new-name as xs:string#empty-sequence()
dom#set-permissions#2#$domain-name as xs:string, $permissions as item()*#empty-sequence()
dom#set-pipelines#2#$domain-name as xs:string, $pipelines as xs:unsignedLong*#empty-sequence()
ec2#add-snapshot-create-volume-permission-groups#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-ids as xs:string*, $user-groups as xs:string*#node()
ec2#add-snapshot-create-volume-permission-users#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-ids as xs:string*, $user-ids as xs:string*#node()
ec2#allocate-address#3#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string#node()
ec2#associate-address#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $public-ip as xs:string, $instance-id as xs:string#node()
ec2#attach-volume#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $volume-id as xs:string, $instance-id as xs:string, $device as xs:string#node()
ec2#authorize-group-ingress#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $source-group-owner-id as xs:string, $source-group-name as xs:string#node()
ec2#authorize-icmp-ingress#7#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $icmp-type as xs:integer, $icmp-code as xs:integer, $cidr-ip as xs:string#node()
ec2#authorize-tcp-ingress#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $port-range as xs:integer+, $cidr-ip as xs:string#node()
ec2#authorize-udp-ingress#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $port-range as xs:integer+, $cidr-ip as xs:string#node()
ec2#create-key-pair#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $key-name as xs:string#node()
ec2#create-security-group#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $group-description as xs:string#node()
ec2#create-snapshot#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $volume-id as xs:string, [$description as xs:string?]#node()
ec2#create-volume#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $availability-zone as xs:string, $size as xs:integer#node()
ec2#create-volume-from-snapshot#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $availability-zone as xs:string, $snapshot-id as xs:string, [$size as xs:integer?]#node()
ec2#delete-key-pair#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $key-name as xs:string#node()
ec2#delete-security-group#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string#node()
ec2#delete-snapshot#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-id as xs:string#node()
ec2#delete-volume#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $volume-id as xs:string#node()
ec2#describe-addresses#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$public-ips as xs:string*]#node()
ec2#describe-availability-zones#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$zone-name as xs:string*]#node()
ec2#describe-images#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$image-ids as xs:string*], [$executable-by as xs:string*], [$owners as xs:string*]#node()
ec2#describe-instance-block-device-mapping#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-disable-api-termination#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-initiated-shutdown-behavior#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-kernel#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-ramdisk#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-root-device-name#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-type#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instance-user-data#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string#node()
ec2#describe-instances#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$instance-ids as xs:string*]#node()
ec2#describe-key-pairs#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$key-names as xs:string*]#node()
ec2#describe-regions#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$region-names as xs:string*]#node()
ec2#describe-security-groups#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$group-names as xs:string*]#node()
ec2#describe-snapshot-create-volume-permission#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-ids as xs:string*#node()
ec2#describe-snapshots#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$snapshot-ids as xs:string*], [$owners as xs:string*], [$restorable-bys as xs:string*]#node()
ec2#describe-volumes#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, [$volume-ids as xs:string*]#node()
ec2#detach-volume#7#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $volume-id as xs:string, [$instance-id as xs:string?], [$device as xs:string?], [$force as xs:boolean?]#node()
ec2#disassociate-address#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $public-ip as xs:string#node()
ec2#get-console-output#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string#node()
ec2#modify-instance-block-device-mapping#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#modify-instance-disable-api-termination#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:boolean#node()
ec2#modify-instance-initiated-shutdown-behavior#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#modify-instance-kernel#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#modify-instance-ramdisk#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#modify-instance-root-device-name#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#modify-instance-type#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#modify-instance-user-data#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-id as xs:string, $value as xs:string#node()
ec2#monitor-instances#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string+#node()
ec2#reboot-instances#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string+#node()
ec2#release-address#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $public-ip as xs:string#node()
ec2#remove-snapshot-create-volume-permission-groups#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-ids as xs:string*, $user-groups as xs:string*#node()
ec2#remove-snapshot-create-volume-permission-users#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-ids as xs:string*, $user-ids as xs:string*#node()
ec2#reset-instance-kernel#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string*#node()
ec2#reset-instance-ramdisk#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string*#node()
ec2#reset-snapshot-create-volume-permission#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $snapshot-ids as xs:string*#node()
ec2#revoke-group-ingress#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $source-group-owner-id as xs:string, $source-group-name as xs:string#node()
ec2#revoke-icmp-ingress#7#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $icmp-type as xs:integer, $icmp-code as xs:integer, $cidr-ip as xs:string#node()
ec2#revoke-tcp-ingress#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $port-range as xs:integer+, $cidr-ip as xs:string#node()
ec2#revoke-udp-ingress#6#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $group-name as xs:string, $port-range as xs:integer+, $cidr-ip as xs:string#node()
ec2#run-instances#10#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $image-id as xs:string, $min-count as xs:integer, $max-count as xs:integer, $instance-type as xs:string?, $key-pair as xs:string?, $security-group as xs:string*, $instance-options as xs:string*#node()
ec2#start-instances#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string+#node()
ec2#stop-instances#5#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string+, $force as xs:boolean#node()
ec2#terminate-instances#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string+#node()
ec2#unmonitor-instances#4#$access-key as xs:string, $secret-key as xs:string, $ec2-region as xs:string, $instance-ids as xs:string+#node()
entity#dictionary-insert#2#$uri as xs:string, $dictionary as cts:entity-dictionary#empty-sequence()
entity#dictionary-load#3#$path as xs:string, $uri as xs:string, [$options as xs:string*]#empty-sequence()
entity#enrich#4#$node as node(), [$dictionaries as cts:entity-dictionary*], [$options as xs:string*], [$map as map:map]#node()
entity#extract#4#$node as node(), [$dictionaries as cts:entity-dictionary*], [$options as xs:string*], [$map as map:map]#element()*
entity#skos-dictionary#3#$graph as xs:string, [$lang as xs:string], [$options as xs:string*]#cts:entity-dictionary
es#add-attachments#2#$instance as map:map, $attachments as xs:string#map:map
es#copy-attachments#2#$destination as map:map, $source as xs:string#map:map
es#database-properties-generate#1#$model as map:map#object-node()
es#extract-array#2#$source-nodes as item()*, $fn as function(*)#json:array?
es#extraction-template-generate#1#$model as map:map#element(tde:template)
es#init-instance#2#$source-node as item(), $entity-type-name as xs:string#map:map
es#init-source#2#$source-nodes as item()*, $entity-type-name as xs:string#item()*
es#init-translation-source#2#$source as item()*, $entity-type-name as xs:string#item()*
es#instance-converter-generate#1#$model as map:map#document-node()
es#instance-from-document#1#$entity-document as document-node()#map:map*
es#instance-get-attachments#1#$entity-document as document-node()#element()*
es#instance-json-from-document#1#$entity-document as document-node()#object-node()
es#instance-xml-from-document#1#$entity-document as document-node()#element()*
es#model-from-xml#1#$model as node()#map:map
es#model-get-test-instances#1#$model as map:map#element()*
es#model-to-xml#1#$model as map:map#element(es:model)
es#model-validate#1#$model-descriptor as node()#map:map
es#optional#3#$instance as map:map, $key-name as xs:string, $key-value as item()?#map:map
es#pii-generate#1#$model as map:map#document-node()
es#schema-generate#1#$model as map:map#element(xsd:schema)*
es#search-options-generate#1#$model as map:map#element(search:options)
es#serialize-attachments#2#$instance as map:map, $format as xs:string#map:map
es#version-translator-generate#2#$source-model as map:map, $target-model as map:map#xs:string
es#with-namespace#3#$instance as map:map, $namespace as xs:string, $namespace-prefix as xs:string#map:map
excel#clean#2#$uri as xs:string, $doc as node()?#node()?
exsl#node-set#1#$value as item()*#node()*
exsl#object-type#1#$value as item()*#xs:string
flexrep#_binary-push-status-uri#3#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $key as xs:unsignedLong#xs:string
flexrep#ack-apply#3#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $acks as element(flexrep:ack)*#element(error:error)?
flexrep#ack-binary-chunk-apply#5#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $key as xs:unsignedLong, $offset as xs:unsignedLong, $subsize as xs:unsignedLong#element(error:error)?
flexrep#apply#2#$update as element(flexrep:update), $content as document-node()?#empty-sequence()
flexrep#apply-binary-chunk#4#$key as xs:string, $offset as xs:string, $bn as node(), $forests as xs:string*#empty-sequence()
flexrep#apply-binary-gc#1#$key as xs:string#empty-sequence()
flexrep#apply-binary-join#2#$key as xs:string, $forests as xs:string*#empty-sequence()
flexrep#apply-encoded-updates#3#$dts as element(flexrep:domain-target-status), $boundary as xs:string, $data as binary()#element()*
flexrep#binary-chunk-uris#1#$ts as xs:dateTime#xs:string*
flexrep#coalesce-domain-statuses#1#$domain-id as xs:unsignedLong#empty-sequence()
flexrep#configuration-create#2#$domain-id as xs:unsignedLong, [$alerting-uri as xs:string?]#element(flexrep:configuration)
flexrep#configuration-delete#1#$domain-id as xs:unsignedLong#empty-sequence()
flexrep#configuration-domain-ids#0##xs:unsignedLong*
flexrep#configuration-get#2#$domain-id as xs:unsignedLong, [$assert as xs:boolean]#element(flexrep:configuration)?
flexrep#configuration-get-alerting-uri#1#$cfg as element(flexrep:configuration)#xs:string?
flexrep#configuration-get-domain-name#1#$cfg as element(flexrep:configuration)#xs:string
flexrep#configuration-get-id#1#$cfg as element(flexrep:configuration)#xs:unsignedLong
flexrep#configuration-insert#1#$cfg as element(flexrep:configuration)#empty-sequence()
flexrep#configuration-set-alerting-uri#2#$cfg as element(flexrep:configuration), $uri as xs:string?#element(flexrep:configuration)
flexrep#configuration-target#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, [$assert as xs:boolean]#element(flexrep:target)?
flexrep#configuration-target-get-documents-per-batch#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:integer
flexrep#configuration-target-get-enabled#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:boolean
flexrep#configuration-target-get-external-user#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#element(extusr:external-user)?
flexrep#configuration-target-get-filter-module#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#element(flexrep:filter-module)
flexrep#configuration-target-get-filter-options#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#element(flexrep:filter-options)
flexrep#configuration-target-get-http-options#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#element(flexrep:http-options)
flexrep#configuration-target-get-id#2#$cfg as element(flexrep:configuration), $target-name as xs:string#xs:unsignedLong
flexrep#configuration-target-get-immediate-push#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:boolean
flexrep#configuration-target-get-name#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:string
flexrep#configuration-target-get-replicate-cpf#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:boolean
flexrep#configuration-target-get-retry-seconds-max#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:integer
flexrep#configuration-target-get-retry-seconds-min#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:integer
flexrep#configuration-target-get-urls#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:string*
flexrep#configuration-target-get-user-id#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#xs:unsignedLong?
flexrep#configuration-target-set-documents-per-batch#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as xs:integer#element(flexrep:configuration)
flexrep#configuration-target-set-enabled#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as xs:boolean#element(flexrep:configuration)
flexrep#configuration-target-set-filter-module#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $uri as xs:string#element(flexrep:configuration)
flexrep#configuration-target-set-filter-options#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as element(flexrep:filter-options)#element(flexrep:configuration)
flexrep#configuration-target-set-http-options#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as element(flexrep:http-options)#element(flexrep:configuration)
flexrep#configuration-target-set-immediate-push#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $immediate-push as xs:boolean#element(flexrep:configuration)
flexrep#configuration-target-set-name#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $name as xs:string#element(flexrep:configuration)
flexrep#configuration-target-set-replicate-cpf#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as xs:boolean#element(flexrep:configuration)
flexrep#configuration-target-set-retry-seconds-max#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as xs:integer#element(flexrep:configuration)
flexrep#configuration-target-set-retry-seconds-min#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $val as xs:integer#element(flexrep:configuration)
flexrep#configuration-target-set-urls#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $urls as xs:string*#element(flexrep:configuration)
flexrep#configuration-target-set-user-id#3#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong, $user-id as xs:unsignedLong?#element(flexrep:configuration)
flexrep#configuration-targets#1#$cfg as element(flexrep:configuration)#element(flexrep:target)*
flexrep#configure-database#2#$config as element(configuration), $dbid as xs:unsignedLong#element(configuration)
flexrep#create-appserver#5#$cfg as element(configuration), $group as xs:unsignedLong, $name as xs:string, $port as xs:unsignedLong, $db as xs:unsignedLong#element(configuration)
flexrep#database-needs-configuration#2#$config as element(configuration), $dbid as xs:unsignedLong#xs:boolean
flexrep#delete#1#$delete as element(flexrep:delete)#empty-sequence()
flexrep#do-pull#1#$pull as element(flexrep:pull)#element()*
flexrep#document-reset#3#$uri as xs:string, $domain-id as xs:unsignedLong, [$target-ids as xs:unsignedLong*]#empty-sequence()
flexrep#document-status#2#$domain-id as xs:unsignedLong, $uri as xs:string#element(flexrep:document-status)
flexrep#domain-alerting-uri#1#$domain-id as xs:unsignedLong#xs:string
flexrep#domain-status#3#$domain-id as xs:unsignedLong, [$with-targets as xs:boolean], [$terse as xs:boolean]#element(flexrep:domain-status)
flexrep#domain-target-reset#3#$domain-id as xs:unsignedLong, $target-ids as xs:unsignedLong*, [$errors-only as xs:boolean]#empty-sequence()
flexrep#domain-target-statuses#0##element(flexrep:domain-target-status)*
flexrep#get-domain-name#1#$domain-id as xs:unsignedLong#xs:string
flexrep#get-target-name#2#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong#xs:string?
flexrep#get-update-binarydoc-uri#3#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $key as xs:unsignedLong#xs:string?
flexrep#inbound-filter-create#2#$filter-module as xs:string, $filter-options as element(flexrep:filter-options)?#element(flexrep:inbound-filter)
flexrep#inbound-filter-delete#0##empty-sequence()
flexrep#inbound-filter-get#0##element(flexrep:inbound-filter)?
flexrep#inbound-filter-insert#1#$filter as element(flexrep:inbound-filter)#empty-sequence()
flexrep#multipart-encode#2#$boundary as xs:string, $parts as node()*#binary()
flexrep#poll#5#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $start as xs:integer?, $size as xs:integer?, $forest-ids as xs:unsignedLong*#node()*
flexrep#poll-binary-chunk#0##xs:unsignedLong)
flexrep#process#5#$domain-id as xs:unsignedLong, [$size as xs:unsignedInt?], [$targets as xs:unsignedLong*], [$forest-ids as xs:unsignedLong*], [$uris as xs:string*]#element(flexrep:results)
flexrep#pull-binaries#2#$pull as element(flexrep:pull), $max-spawn as xs:unsignedLong#element()*
flexrep#pull-binary-chunk#1#$pull as element(flexrep:pull)#xs:integer
flexrep#pull-check-duplicate#1#$pull as element(flexrep:pull)#element(flexrep:pull)?
flexrep#pull-create#5#$name as xs:string, $domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $urls as xs:string+, $http-options as element(flexrep:http-options)?#element(flexrep:pull)
flexrep#pull-delete#2#$domain-id as xs:unsignedLong, [$target-id as xs:unsignedLong]#empty-sequence()
flexrep#pull-get#2#$domain-id as xs:unsignedLong, [$assert as xs:boolean]#element(flexrep:pull)*
flexrep#pull-get-all#0##element(flexrep:pull)*
flexrep#pull-get-by-id#2#$pull-id as xs:unsignedLong, [$assert as xs:boolean]#element(flexrep:pull)?
flexrep#pull-get-domain-id#1#$pull as element(flexrep:pull)#xs:unsignedLong
flexrep#pull-get-enabled#1#$pull as element(flexrep:pull)#xs:boolean
flexrep#pull-get-http-options#1#$pull as element(flexrep:pull)#element(flexrep:http-options)
flexrep#pull-get-id#1#$pull as element(flexrep:pull)#xs:unsignedLong
flexrep#pull-get-name#1#$pull as element(flexrep:pull)#xs:string
flexrep#pull-get-target-id#1#$pull as element(flexrep:pull)#xs:unsignedLong
flexrep#pull-get-urls#1#$pull as element(flexrep:pull)#xs:string*
flexrep#pull-insert#1#$pull as element(flexrep:pull)#empty-sequence()
flexrep#pull-set-domain-id#2#$pull as element(flexrep:pull), $domain-id as xs:unsignedLong#element(flexrep:pull)
flexrep#pull-set-enabled#2#$pull as element(flexrep:pull), $flag as xs:boolean#element(flexrep:pull)
flexrep#pull-set-http-options#2#$pull as element(flexrep:pull), $http-options as element(flexrep:http-options)#element(flexrep:pull)
flexrep#pull-set-name#2#$pull as element(flexrep:pull), $name as xs:string#element(flexrep:pull)
flexrep#pull-set-target-id#2#$pull as element(flexrep:pull), $target-id as xs:unsignedLong#element(flexrep:pull)
flexrep#pull-set-urls#2#$pull as element(flexrep:pull), $urls as xs:string+#element(flexrep:pull)
flexrep#push-binaries#1#$domain-id as xs:unsignedLong#empty-sequence()
flexrep#push-binary#4#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $forest-id as xs:unsignedLong, $key as xs:unsignedLong#empty-sequence()
flexrep#push-binary-chunk#2#$status-doc as document-node(), $use-server-field as xs:boolean#xs:integer
flexrep#push-binary-docs#4#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $forest-id as xs:unsignedLong, $map as map:map#element(flexrep:results)
flexrep#push-forest-binaries#4#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $forest-id as xs:unsignedLong, $max-spawn as xs:unsignedLong#empty-sequence()
flexrep#push-local-forest#3#$domain-id as xs:unsignedLong, $forest-id as xs:unsignedLong, $max-spawn as xs:unsignedLong#empty-sequence()
flexrep#push-local-forest-target#4#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $forest-id as xs:unsignedLong, $max-spawn as xs:unsignedLong#empty-sequence()
flexrep#push-local-forests#0##empty-sequence()
flexrep#remote-target-status#1#$pull as element(flexrep:pull)#element(flexrep:target-status)?
flexrep#replicate#7#$uri as xs:string, $label as xs:string, $cfg as element(flexrep:configuration), $domain as element(dom:domain), $doc-status as element(flexrep:document-status), $is-delete as xs:boolean, $is-retry as xs:boolean#element(error:error)?
flexrep#target-binary-push-status-document#3#$domain-id as xs:unsignedLong, $target-id as xs:unsignedLong, $uri as xs:string#element(flexrep:binary-push-status)*
flexrep#target-binary-push-status-documents#2#$domain-id as xs:unsignedLong, $target-ids as xs:unsignedLong*#element(flexrep:binary-push-status)*
flexrep#target-create#13#$cfg as element(flexrep:configuration), $name as xs:string, $urls as xs:string*, $retry-seconds-min as xs:unsignedInt?, $retry-seconds-max as xs:unsignedInt?, $documents-per-batch as xs:unsignedInt?, $enabled as xs:boolean?, $http-options as element(flexrep:http-options)?, $replicate-cpf as xs:boolean?, $filter-module as xs:string?, $filter-options as element(flexrep:filter-options)?, [$user-id as xs:unsignedLong?], [$immediate-push as xs:boolean]#element(flexrep:configuration)
flexrep#target-delete#2#$cfg as element(flexrep:configuration), $target-id as xs:unsignedLong#element(flexrep:configuration)
flexrep#target-error-documents#2#$domain-id as xs:unsignedLong, $target-ids as xs:unsignedLong*#element(flexrep:document-target-status)*
flexrep#target-status#2#$domain-id as xs:unsignedLong, $target-ids as xs:unsignedLong*#element(flexrep:target-status)*
flexrep#upgrade-appserver#2#$cfg as element(configuration), $ids as xs:unsignedLong*#element(configuration)
flexrep#validate-name#1#$name as xs:string#xs:string
flexrep#validate-url#1#$url as xs:string#xs:string
fn#QName#2#$paramURI as xs:string?, $paramQName as xs:string#xs:QName
fn#abs#1#$arg as numeric?#numeric?
fn#adjust-date-to-timezone#2#$arg as xs:date?, [$timezone as xs:dayTimeDuration?]#xs:date?
fn#adjust-dateTime-to-timezone#2#$arg as xs:dateTime?, [$timezone as xs:dayTimeDuration?]#xs:dateTime?
fn#adjust-time-to-timezone#2#$arg as xs:time?, [$timezone as xs:dayTimeDuration?]#xs:time?
fn#analyze-string#3#$in as xs:string?, $regex as xs:string, [$flags as xs:string]#element(s:results)
fn#avg#1#$arg as xs:anyAtomicType*#xs:anyAtomicType?
fn#base-uri#1#[$arg as node()?]#xs:anyURI?
fn#boolean#2#$arg as item()*, [$collation as xs:string]#xs:boolean
fn#ceiling#1#$arg as numeric?#numeric?
fn#codepoint-equal#2#$comparand1 as xs:string?, $comparand2 as xs:string?#xs:boolean?
fn#codepoints-to-string#1#$arg as xs:integer*#xs:string
fn#collection#1#[$uri as xs:string*]#document-node()*
fn#compare#3#$comparand1 as xs:string?, $comparand2 as xs:string?, [$collation as xs:string]#xs:integer?
fn#concat#2#$parameter1 as xs:anyAtomicType?, [$parameterN as xs:anyAtomicType?,...]#xs:string
fn#contains#3#$parameter1 as xs:string?, $parameter2 as xs:string?, [$collation as xs:string]#xs:boolean
fn#count#2#$arg as item()*, [$maximum as xs:double?]#xs:integer
fn#current#0##item()
fn#current-date#0##xs:date
fn#current-dateTime#0##xs:dateTime
fn#current-group#0##item()*
fn#current-grouping-key#0##xs:anyAtomicType?
fn#current-time#0##xs:time
fn#data#1#$arg as item()*#xs:anyAtomicType*
fn#day-from-date#1#$arg as xs:date?#xs:integer?
fn#day-from-dateTime#1#$arg as xs:dateTime?#xs:integer?
fn#days-from-duration#1#$arg as xs:duration?#xs:integer?
fn#deep-equal#3#$parameter1 as item()*, $parameter2 as item()*, [$collation as xs:string]#xs:boolean
fn#default-collation#0##xs:string
fn#distinct-nodes#1#$nodes as node()*#node()*
fn#distinct-values#2#$arg as item()*, [$collation as xs:string]#xs:anyAtomicType*
fn#doc#1#[$uri as xs:string*]#document-node()*
fn#doc-available#1#$uri as xs:string?#xs:boolean
fn#document#2#$uris as item()*, [$base-node as node()]#document-node()*
fn#document-uri#1#$arg as node()?#xs:anyURI?
fn#element-available#1#$element-name as xs:string#xs:boolean
fn#empty#1#$arg as item()*#xs:boolean
fn#encode-for-uri#1#$uri-part as xs:string#xs:string
fn#ends-with#3#$parameter1 as xs:string?, $parameter2 as xs:string?, [$collation as xs:string]#xs:boolean
fn#error#3#[$error as xs:QName?], [$description as xs:string], [$data as item()*]#empty-sequence()
fn#escape-html-uri#1#$uri-part as xs:string#xs:string
fn#escape-uri#2#$uri-part as xs:string, $escape-reserved as xs:boolean#xs:string
fn#exactly-one#1#$arg as item()*#item()
fn#exists#1#$arg as item()*#xs:boolean
fn#expanded-QName#2#$paramURI as xs:string?, $paramLocal as xs:string#xs:QName
fn#false#0##xs:boolean
fn#filter#2#$function as function(item()) as xs:boolean, $seq as item()*#item()*
fn#floor#1#$arg as numeric?#numeric?
fn#fold-left#3#$function as function(item()*, item()) as item()*, $zero as item()*, $seq as item()*#item()*
fn#fold-right#3#$function as function(item(), item()*) as item()*, $zero as item()*, $seq as item()*#item()*
fn#format-date#5#$value as xs:date, $picture as xs:string, [$language as xs:string], [$calendar as xs:string], [$country as xs:string]#xs:string
fn#format-dateTime#5#$value as xs:dateTime, $picture as xs:string, [$language as xs:string], [$calendar as xs:string], [$country as xs:string]#xs:string
fn#format-number#3#$value as xs:double, $picture as xs:string, [$decimal-format-name as xs:string]#xs:string
fn#format-time#5#$value as xs:time, $picture as xs:string, [$language as xs:string], [$calendar as xs:string], [$country as xs:string]#xs:string
fn#function-arity#1#$function as function(*)#xs:integer
fn#function-available#2#$function-name as xs:string, [$arity as xs:integer]#xs:boolean
fn#function-lookup#2#$name as xs:QName, $arity as xs:integer#function(*)?
fn#function-name#1#$function as function(*)#xs:QName?
fn#generate-id#1#[$node as node()?]#xs:string
fn#head#1#$seq as item()*#item()?
fn#hours-from-dateTime#1#$arg as xs:dateTime?#xs:integer?
fn#hours-from-duration#1#$arg as xs:duration?#xs:integer?
fn#hours-from-time#1#$arg as xs:time?#xs:integer?
fn#id#2#$arg as xs:string*, [$node as node()]#element()*
fn#idref#2#$arg as xs:string*, [$node as node()]#node()*
fn#implicit-timezone#0##xs:dayTimeDuration
fn#in-scope-prefixes#1#$element as element()#xs:string*
fn#index-of#3#$seqParam as xs:anyAtomicType*, $srchParam as xs:anyAtomicType, [$collationLiteral as xs:string]#xs:integer*
fn#insert-before#3#$target as item()*, $position as xs:integer, $inserts as item()*#item()*
fn#iri-to-uri#1#$uri-part as xs:string#xs:string
fn#key#3#$key-name as xs:string, $key-value as xs:string, [$top as node()]#node()*
fn#lang#2#$testlang as xs:string?, [$node as node()]#xs:boolean
fn#last#0##xs:integer
fn#local-name#1#[$arg as node()?]#xs:string
fn#local-name-from-QName#1#$arg as xs:QName?#xs:NCName?
fn#lower-case#1#$string as xs:string?#xs:string
fn#map#2#$function as function(item()) as item()*, $seq as item()*#item()*
fn#map-pairs#3#$function as function(item(), item()) as item()*, $seq1 as item()*, $seq2 as item()*#item()*
fn#matches#3#$input as xs:string?, $pattern as xs:string, [$flags as xs:string]#xs:boolean?
fn#max#2#$arg as xs:anyAtomicType*, [$collation as xs:string]#xs:anyAtomicType?
fn#min#2#$arg as xs:anyAtomicType*, [$collation as xs:string]#xs:anyAtomicType?
fn#minutes-from-dateTime#1#$arg as xs:dateTime?#xs:integer?
fn#minutes-from-duration#1#$arg as xs:duration?#xs:integer?
fn#minutes-from-time#1#$arg as xs:time?#xs:integer?
fn#month-from-date#1#$arg as xs:date?#xs:integer?
fn#month-from-dateTime#1#$arg as xs:dateTime?#xs:integer?
fn#months-from-duration#1#$arg as xs:duration?#xs:integer?
fn#name#1#[$arg as node()?]#xs:string
fn#namespace-uri#1#[$arg as node()?]#xs:anyURI
fn#namespace-uri-for-prefix#2#$prefix as xs:string?, $element as element()#xs:anyURI?
fn#namespace-uri-from-QName#1#$arg as xs:QName?#xs:anyURI?
fn#nilled#1#$arg as node()?#xs:boolean?
fn#node-kind#1#$node as node()?#xs:string
fn#node-name#1#$arg as node()?#xs:QName?
fn#normalize-space#1#[$input as xs:string?]#xs:string?
fn#normalize-unicode#2#$arg as xs:string?, [$normalizationForm as xs:string]#xs:string?
fn#not#1#$arg as item()*#xs:boolean
fn#number#1#[$arg as xs:anyAtomicType?]#xs:double
fn#one-or-more#1#$arg as item()*#item()+
fn#position#0##xs:integer
fn#prefix-from-QName#1#$arg as xs:QName?#xs:NCName?
fn#regex-group#1#$group-number as xs:integer#xs:string
fn#remove#2#$target as item()*, $position as xs:integer#item()*
fn#replace#4#$input as xs:string?, $pattern as xs:string, $replacement as xs:string, [$flags as xs:string]#xs:string?
fn#resolve-QName#2#$qname as xs:string?, $element as element()#xs:QName?
fn#resolve-uri#2#$relative as xs:string?, [$base as xs:string]#xs:anyURI?
fn#reverse#1#$target as item()*#item()*
fn#root#1#[$arg as node()?]#node()?
fn#round#1#$arg as numeric?#numeric?
fn#round-half-to-even#2#$arg as numeric?, [$precision as xs:integer]#numeric?
fn#seconds-from-dateTime#1#$arg as xs:dateTime?#xs:decimal?
fn#seconds-from-duration#1#$arg as xs:duration?#xs:decimal?
fn#seconds-from-time#1#$arg as xs:time?#xs:decimal?
fn#starts-with#3#$parameter1 as xs:string?, $parameter2 as xs:string?, [$collation as xs:string]#xs:boolean
fn#static-base-uri#0##xs:anyURI?
fn#string#1#[$arg as item()?]#xs:string?
fn#string-join#2#$parameter1 as xs:string*, $parameter2 as xs:string#xs:string
fn#string-length#1#[$sourceString as xs:string?]#xs:integer?
fn#string-pad#2#$padString as xs:string?, $padCount as xs:integer#xs:string?
fn#string-to-codepoints#1#$arg as xs:string#xs:integer*
fn#subsequence#3#$sourceSeq as item()*, $startingLoc as xs:double, [$length as xs:double]#item()*
fn#substring#3#$sourceString as xs:string?, $startingLoc as xs:double, [$length as xs:double]#xs:string?
fn#substring-after#3#$input as xs:string?, $after as xs:string?, [$collation as xs:string]#xs:string?
fn#substring-before#3#$input as xs:string?, $before as xs:string?, [$collation as xs:string]#xs:string?
fn#subtract-dateTimes-yielding-dayTimeDuration#2#$srcval1 as xs:dateTime, $srcval1 as xs:dateTime#xdt:dayTimeDuration
fn#subtract-dateTimes-yielding-yearMonthDuration#2#$srcval1 as xs:dateTime, $srcval1 as xs:dateTime#xdt:yearMonthDuration
fn#sum#2#$arg as xs:anyAtomicType*, [$zero as xs:anyAtomicType?]#xs:anyAtomicType?
fn#system-property#1#$property-name as xs:string#xs:string
fn#tail#1#$seq as item()*#item()*
fn#timezone-from-date#1#$arg as xs:date?#xs:dayTimeDuration?
fn#timezone-from-dateTime#1#$arg as xs:dateTime?#xs:dayTimeDuration?
fn#timezone-from-time#1#$arg as xs:time?#xs:dayTimeDuration?
fn#tokenize#3#$input as xs:string?, $pattern as xs:string, [$flags as xs:string]#xs:string*
fn#trace#2#$value as item()*, $label as xs:string#item()*
fn#translate#3#$src as xs:string?, $mapString as xs:string?, $transString as xs:string?#xs:string?
fn#true#0##xs:boolean
fn#type-available#1#$type-name as xs:string#xs:boolean
fn#unordered#1#$sourceSeq as item()*#item()*
fn#unparsed-entity-public-id#1#$entity-name as xs:string#xs:string
fn#unparsed-entity-uri#1#$entity-name as xs:string#xs:anyURI
fn#unparsed-text#2#$href as xs:string, [$encoding as xs:string]#xs:string?
fn#unparsed-text-available#2#$href as xs:string, [$encoding as xs:string]#xs:boolean
fn#upper-case#1#$string as xs:string?#xs:string
fn#year-from-date#1#$arg as xs:date?#xs:integer?
fn#year-from-dateTime#1#$arg as xs:dateTime?#xs:integer?
fn#years-from-duration#1#$arg as xs:duration?#xs:integer?
fn#zero-or-one#1#$arg as item()*#item()?
geo#approx-center#2#$region as cts:region, [$options as xs:string*]#cts:point
geo#arc-intersection#5#$p1 as cts:point, $p2 as cts:point, $q1 as cts:point, $q2 as cts:point, [$options as xs:string*]#cts:point
geo#bearing#3#$p1 as cts:point, $p2 as cts:point, [$options as xs:string*]#xs:double
geo#bounding-boxes#2#$region as cts:region, [$options as xs:string*]#cts:box*
geo#box#1#$box as node()#cts:box
geo#box-intersects#3#$box as cts:box, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#circle#2#$radius as xs:double, $center as node()#cts:circle
geo#circle-intersects#3#$circle as cts:circle, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#circle-polygon#3#$circle as cts:circle, $arc-tolerance as xs:double, [$options as xs:string*]#cts:region
geo#complex-polygon#1#$complex-polygon as node()#cts:complex-polygon
geo#complex-polygon-contains#3#$complex-polygon as cts:complex-polygon, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#complex-polygon-intersects#3#$complex-polygon as cts:complex-polygon, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#coordinate-system-canonical#2#$name as xs:string, [$precision as xs:string]#xs:string
geo#count-distinct-vertices#2#$region as cts:region, [$options as xs:string*]#xs:integer
geo#count-vertices#1#$region as cts:region#xs:integer
geo#default-coordinate-system#0##xs:string
geo#destination#4#$p as cts:point, $bearing as xs:double, $distance as xs:double, [$options as xs:string*]#cts:point
geo#distance#3#$p1 as cts:point, $p2 as cts:point, [$options as xs:string*]#xs:double
geo#distance-convert#3#$distance as xs:double, $unit1 as xs:string, $unit2 as xs:string#xs:double
geo#ellipse-polygon#6#$center as cts:point, $semi-major-axis as xs:double, $semi-minor-axis as xs:double, $azimuth as xs:double, $arc-tolerance as xs:double, [$options as xs:string*]#cts:region
geo#geohash-decode#1#$hash as xs:string#cts:box
geo#geohash-decode-point#1#$hash as xs:string#cts:point
geo#geohash-encode#3#$region as cts:region, [$geohash-precision as xs:integer?], [$options as xs:string*]#xs:string
geo#geohash-neighbors#1#$hash as xs:string#map:map
geo#geohash-precision-dimensions#1#$precision as xs:integer#xs:double+
geo#geohash-subhashes#2#$hash as xs:string, $which as xs:string#xs:string*
geo#geospatial-query#3#$regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geo#geospatial-query-from-elements#3#$regions as element()*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geo#geospatial-query-from-nodes#3#$regions as node()*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geo#interior-point#2#$region as cts:region, [$options as xs:string*]#cts:point?
geo#interior-polygon#1#$polygon as node()#cts:polygon*
geo#linestring#1#$linestring as node()#cts:linestring
geo#linestring-concat#1#$linestrings as cts:linestring*#cts:linestring
geo#linestring-reverse#1#$linestring as cts:linestring#cts:linestring
geo#parse#1#$data as node()*#cts:region*
geo#parse-wkb#1#$wkb as binary()#cts:region*
geo#parse-wkt#1#$wkt as xs:string*#cts:region*
geo#point#1#$point as node()#cts:point
geo#polygon#1#$polygon-or-points as node()+#cts:polygon
geo#polygon-contains#3#$polygon as cts:polygon, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#polygon-intersects#3#$polygon as cts:polygon, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#polygon-to-linestring#1#$region as cts:region#cts:linestring*
geo#region-affine-transform#3#$region as cts:region, $transform as map:map*, [$options as xs:string*]#cts:region
geo#region-approximate#3#$region as cts:region, $threshold as xs:double, [$options as xs:string*]#cts:region
geo#region-clean#2#$region as cts:region, [$options as xs:string*]#cts:region
geo#region-contains#3#$target as cts:region, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#region-de9im#3#$region-1 as cts:region, $region-2 as cts:region, [$options as xs:string*]#xs:string
geo#region-intersects#3#$target as cts:region, $region as cts:region*, [$options as xs:string*]#xs:boolean
geo#region-relate#4#$region-1 as cts:region, $operation as xs:string, $region-2 as cts:region, [$options as xs:string*]#xs:boolean
geo#remove-duplicate-vertices#2#$region as cts:region, [$options as xs:string*]#cts:region
geo#shortest-distance#3#$p1 as cts:point, $region as cts:region+, [$options as xs:string*]#xs:double
geo#to-wkb#1#$wkb as cts:region*#xs:string*
geo#to-wkt#1#$wkt as cts:region*#xs:string*
geo#validate-wkb#1#$wkb as binary()#xs:boolean
geo#validate-wkt#1#$wkt as xs:string#xs:boolean
geogml#box#1#$box as element()#cts:box
geogml#circle#2#$radius as xs:double, $center as element()#cts:circle
geogml#complex-polygon#1#$complex-polygon as element()#cts:complex-polygon
geogml#geospatial-query#4#$regions as cts:region*, [$options as xs:string*], [$weight as xs:double?], [$namespace as xs:string?]#cts:query
geogml#geospatial-query-from-elements#3#$regions as element()*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geogml#interior-polygon#1#$polygon as element()#cts:polygon*
geogml#linestring#1#$linestring as element()#cts:linestring
geogml#parse-gml#1#$gml as element()*#cts:region*
geogml#point#1#$point as element()#cts:point
geogml#polygon#1#$polygon-or-points as element()+#cts:polygon
geogml#to-gml#2#$region as cts:region*, [$gml-namespace as xs:string]#element()*
geojson#box#1#$box as object-node()#cts:box
geojson#circle#2#$radius as xs:double, $center as object-node()#cts:circle
geojson#complex-polygon#1#$complex-polygon as node()#cts:complex-polygon
geojson#geospatial-query#3#$regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geojson#geospatial-query-from-nodes#3#$regions as node()*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geojson#interior-polygon#1#$polygon as object-node()#cts:polygon*
geojson#linestring#1#$linestring as object-node()#cts:linestring
geojson#multi-linestring#1#$multi-linestring as object-node()#cts:linestring*
geojson#multi-point#1#$multi-point as object-node()#cts:point*
geojson#parse-geojson#1#$geojson as object-node()*#cts:region*
geojson#point#1#$point as object-node()#cts:point
geojson#polygon#1#$polygon-or-points as object-node()+#cts:polygon
geojson#to-geojson#1#$regions as cts:region*#object-node()*
geokml#box#1#$envelope as element()#cts:box
geokml#circle#2#$radius as xs:double, $center as element()#cts:circle
geokml#complex-polygon#1#$complex-polygon as element()#cts:complex-polygon
geokml#geospatial-query#4#$regions as cts:region*, [$options as xs:string*], [$weight as xs:double?], [$namespace as xs:string?]#cts:query
geokml#geospatial-query-from-elements#3#$regions as element()*, [$options as xs:string*], [$weight as xs:double?]#cts:query
geokml#interior-polygon#1#$points as element()#cts:polygon*
geokml#linestring#1#$linestring as element()#cts:linestring
geokml#parse-kml#1#$kml as element()*#cts:region*
geokml#point#1#$point as element()#cts:point
geokml#polygon#1#$polygon-or-points as element()+#cts:polygon
geokml#to-kml#2#$region as cts:region*, [$namespace as xs:string]#element()*
georss#circle#2#$radius as xs:double, $center as element(georss:point)#cts:circle
georss#complex-polygon#1#$complex-polygon as node()#cts:complex-polygon
georss#geospatial-query#3#$regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:query
georss#linestring#1#$linestring as element(georss:line)#cts:linestring
georss#parse-georss#1#$georss as element()*#cts:region*
georss#point#1#$point as element(georss:point)#cts:point
georss#polygon#1#$polygon-or-points as element()+#cts:polygon
georss#to-georss#1#$regions as cts:region*#element()*
hadoop#get-splits#3#$nsbindings as xs:string*, $doc-selector as xs:string, $query as xs:string#item()*
info#database-create#7#$database-name as xs:string, [$forests-per-host as xs:positiveInteger?], [$group as xs:string?], [$data-directory as xs:string?], [$security-db as xs:string?], [$schemas-db as xs:string?], [$triggers-db as xs:string?]#xs:unsignedLong
info#database-delete#2#$database-name as xs:string, [$delete-data as xs:boolean?]#empty-sequence()
info#database-get-feature#3#$database as xs:string, [$preview-settings as element(info:settings)], [$delta as xs:boolean]#element(info:settings)
info#database-set-feature#2#$database as xs:string, $settings as element(info:settings)#empty-sequence()
info#error-detail#1#$error-id as xs:unsignedLong#element(info:error)
info#flow-cancel#1#$flow-id as xs:string#empty-sequence()
info#flow-id#1#$flow-name as xs:string#xs:string?
info#flow-policy#1#$flow-id as xs:string#xs:string
info#flow-start#1#$flow-id as xs:string#xs:string
info#flow-tickets#2#$flow-id as xs:string, [$include-inactive as xs:boolean?]#xs:string*
info#load#4#$dir-path as xs:string, [$policy-name as xs:string?], [$policy-deltas as element(info:options)?], [$database as xs:string]#xs:string
info#policy#1#$policy-name as xs:string#element(info:options)?
info#policy-delete#1#$policy-name as xs:string#empty-sequence()
info#policy-names#0##xs:string*
info#policy-set#2#[$policy-name as xs:string?], [$policy as element(info:options)?]#empty-sequence()
info#ticket#1#$ticket-id as xs:string+#element(info:ticket)+
info#ticket-delete#1#$ticket-id as xs:string#empty-sequence()
info#ticket-errors#5#$ticket-id as xs:string, [$start as xs:unsignedInt?], [$page-length as xs:unsignedInt?], [$sort-ascending as xs:boolean?], [$filter as schema-element(cts:query)?]#element(info:errors)
info#tickets#3#[$database as xs:string*], [$status as xs:string*], [$custom-query as schema-element(cts:query)?]#xs:string*
info#unload#3#$ticket-id as xs:string, [$database as xs:string*], [$batch-size as xs:positiveInteger?]#empty-sequence()
infodev#check-options#1#$options as element(info:options)#element(info:report)*
infodev#collector-options#2#$policy-name as xs:string?, $policy-deltas as element(info:options)*#element(dg:options)?
infodev#effective-policy#2#$policy-name as xs:string?, $policy-deltas as element(info:options)*#element(info:options)
infodev#file-filter#2#$policy-name as xs:string?, $policy-deltas as element(info:options)*#xs:string
infodev#filesystem-walk#5#$dir-path as xs:string, $ticket-id as xs:string, $function as xdmp:function, $policy-deltas as element(info:options)?, [$context as item()?]#empty-sequence()
infodev#get-external-binary-file#1#$source-location as xs:string#node()
infodev#get-file#3#$source-location as xs:string, $ticket-id as xs:string, $policy-deltas as element(info:options)?#node()
infodev#handle-error#5#$ticket-id as xs:string, $context as xs:string, $error as element(error:error), [$annotation as element(info:annotation)?], [$error-log-level as xs:string?]#empty-sequence()
infodev#ingest#5#$document as node()?, $path as xs:string, $ticket-id as xs:string, [$policy-deltas as element(info:options)?], [$properties as element()*]#xs:string
infodev#log-progress#5#$ticket-id as xs:string, $annotation as element(info:annotation), [$documents-processed as xs:nonNegativeInteger?], [$transactions-completed as xs:nonNegativeInteger?], [$error-log-level as xs:string?]#empty-sequence()
infodev#ticket-add-annotation#2#$ticket-id as xs:string, $annotation as element(info:annotation)#empty-sequence()
infodev#ticket-create#4#$annotation as element(info:annotation)?, $database as xs:string?, $policy-name as xs:string?, $policy-deltas as element(info:options)?#xs:string
infodev#ticket-get-status#1#$ticket-id as xs:string#xs:string
infodev#ticket-set-status#2#$ticket-id as xs:string, $status as xs:string#empty-sequence()
infodev#ticket-set-total-documents#2#$ticket-id as xs:string, $total-documents as xs:unsignedInt#empty-sequence()
infodev#ticket-set-total-transactions#2#$ticket-id as xs:string, $total-transactions as xs:unsignedInt#empty-sequence()
infodev#transaction#7#$document-map as map:map, $ticket-id as xs:string, $function as xdmp:function, $policy-deltas as element(info:options)?, $transaction-index as xs:integer, $context as item()?, [$error-log-level as xs:string?]#empty-sequence()
infodev#transaction-size#2#$policy-name as xs:string?, $policy-deltas as element(info:options)*#xs:positiveInteger
json#array#1#[$array as element(json:array)]#json:array
json#array-pop#1#$array as json:array#item()*
json#array-push#2#$array as json:array, $item as item()*#empty-sequence()
json#array-resize#3#$array as json:array, $newSize as xs:unsignedLong, [$zero as item()?]#empty-sequence()
json#array-set-javascript-by-ref#2#$array as json:array, $key as xs:boolean#empty-sequence()
json#array-size#1#$array as json:array?#xs:unsignedLong?
json#array-values#2#$array as json:array, [$flatten as xs:boolean?]#item()*
json#array-with#2#$array as json:array, $item as item()*#json:array
json#check-config#1#$config as map:map#element(json:report)*
json#config#1#$strategy as xs:string#map:map
json#null#0##empty-sequence()
json#object#1#[$map as element(json:object)]#map:map
json#object-define#1#[$keys as xs:string*]#json:object
json#set-item-at#3#$array as json:array, $pos as xs:double, $value as item()*#empty-sequence()
json#subarray#3#$array as json:array, $startingLoc as xs:double, [$length as xs:double]#json:array
json#to-array#3#[$items as item()*], [$limit as xs:double?], [$zero as item()?]#json:array
json#transform-from-json#2#$json as item(), [$config as map:map]#item()*
json#transform-to-json#2#$node as node(), [$config as map:map]#document-node()?
json#transform-to-json-object#2#$node as node(), $config as map:map#item()*
json#transform-to-json-xml#2#$node as node(), [$config as map:map]#element()
lnk#create#5#$from as xs:string, $to as xs:string, $role as xs:string, $rev-role as xs:string, $strength as xs:string#empty-sequence()
lnk#from#1#$from as xs:string#element(lnk:link)*
lnk#get#2#$from as xs:string, $to as xs:string#element(lnk:link)?
lnk#insert#1#$link as element(lnk:link)#empty-sequence()
lnk#remove#2#$from as xs:string, $to as xs:string#element(lnk:link)
lnk#to#1#$to as xs:string#element(lnk:link)*
map#clear#1#$map as map:map#empty-sequence()
map#contains#2#$map as map:map, $key as xs:string#xs:boolean
map#count#1#$map as map:map#xs:unsignedInt
map#delete#2#$map as map:map, $key as xs:string#empty-sequence()
map#entry#2#$key as xs:string, $value as item()*#map:map
map#get#2#$map as map:map, $key as xs:string#item()*
map#keys#1#$map as map:map#xs:string*
map#map#1#[$map as element(map:map)]#map:map
map#new#1#[$maps as map:map*]#map:map
map#put#3#$map as map:map, $key as xs:string, $value as item()*#empty-sequence()
map#set-javascript-by-ref#2#$map as map:map, $key as xs:boolean#empty-sequence()
map#with#3#$map as map:map, $key as xs:string, $value as item()*#map:map
math#acos#1#$x as xs:double#xs:double
math#asin#1#$x as xs:double#xs:double
math#atan#1#$x as xs:double#xs:double
math#atan2#2#$y as xs:double, $x as xs:double#xs:double
math#ceil#1#$x as xs:double#xs:double
math#correlation#1#$arg as json:array*#xs:double?
math#cos#1#$x as xs:double#xs:double
math#cosh#1#$x as xs:double#xs:double
math#cot#1#$x as xs:double#xs:double
math#covariance#1#$arg as json:array*#xs:double?
math#covariance-p#1#$arg as json:array*#xs:double?
math#degrees#1#$x as xs:double#xs:double
math#exp#1#$x as xs:double#xs:double
math#fabs#1#$x as xs:double#xs:double
math#floor#1#$x as xs:double#xs:double
math#fmod#2#$x as xs:double, $y as xs:double#xs:double
math#frexp#1#$x as xs:double#(xs:double,xs:integer)
math#ldexp#2#$y as xs:double, $i as xs:integer#xs:double
math#linear-model#1#$arg as json:array*#math:linear-model?
math#linear-model-coeff#1#$linear-model as math:linear-model#xs:double*
math#linear-model-intercept#1#$linear-model as math:linear-model#xs:double
math#linear-model-rsquared#1#$linear-model as math:linear-model#xs:double
math#log#1#$x as xs:double#xs:double
math#log10#1#$x as xs:double#xs:double
math#median#1#$arg as xs:double*#xs:double?
math#mode#2#$arg as xs:anyAtomicType*, [$options as xs:string*]#xs:anyAtomicType*
math#modf#1#$x as xs:double#(xs:double,xs:integer)
math#percent-rank#3#$arg as xs:anyAtomicType*, $value as xs:anyAtomicType, [$options as xs:string*]#xs:double?
math#percentile#2#$arg as xs:double*, $p as xs:double*#xs:double*
math#pi#0##xs:double
math#pow#2#$x as xs:double, $y as xs:double#xs:double
math#radians#1#$x as xs:double#xs:double
math#rank#3#$arg1 as xs:anyAtomicType*, $arg2 as xs:anyAtomicType, [$options as xs:string*]#xs:integer?
math#sin#1#$x as xs:double#xs:double
math#sinh#1#$x as xs:double#xs:double
math#sqrt#1#$x as xs:double#xs:double
math#stddev#1#$arg as xs:double*#xs:double?
math#stddev-p#1#$arg as xs:double*#xs:double?
math#tan#1#$x as xs:double#xs:double
math#tanh#1#$x as xs:double#xs:double
math#trunc#2#$arg as numeric?, [$n as xs:integer]#numeric?
math#variance#1#$arg as xs:double*#xs:double?
math#variance-p#1#$arg as xs:double*#xs:double?
mcgm#circle#2#$radius as xs:double, $center as element(Dot)#cts:circle
mcgm#geospatial-query#3#$regions as cts:region*, [$options as xs:string*], [$weight as xs:double?]#cts:query
mcgm#geospatial-query-from-elements#3#$regions as element(Dot)*, [$options as xs:string*], [$weight as xs:double?]#cts:query
mcgm#point#1#$point as element(Dot)#cts:point
mcgm#polygon#1#$vertices as element(Dot)*#cts:polygon
msword#clean#2#$uri as xs:string, $doc as node()?#node()
ooxml#package-parts#1#$package as node()#node()*
ooxml#package-parts-insert#7#$directory as xs:string?, $package-uris as xs:string*, $package-parts as node()*, [$permissions as item()*], [$collections as xs:string*], [$quality as xs:int?], [$forest-ids as xs:unsignedLong*]#empty-sequence()
ooxml#package-uris#1#$package as node()#xs:string*
ooxml#runs-merge#1#$nodes as node()*#node()*
op#add#2#$left as item(), $right as item()#map:map
op#and#2#$left as item(), $right as item()#map:map
op#array-aggregate#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#as#2#$column as item(), $expression as item()*#map:map
op#asc#1#$column as item()#map:map
op#avg#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#call#0##map:map
op#case#2#$when as map:map+, $otherwise as item()*#map:map
op#col#2#[$plan as map:map], $colName as string#map:map
op#count#3#$outCol as item(), [$inCol as item()], [$options as map:map]#map:map
op#desc#1#$column as item()#map:map
op#divide#2#$left as item(), $right as item()#map:map
op#eq#2#$left as item(), $right as item()#map:map
op#except#2#$leftPlan as map:map, $rightPlan as map:map#map:map
op#explain#2#$plan as map:map, $format as xs:string#map:map
op#export#1#$plan as map:map#map:map
op#fragment-id-col#0##map:map
op#from-lexicons#3#$columnBindings as map:map, $qualifier as xs:string?, [$systemCols as map:map?]#map:map
op#from-literals#2#$rowdefs as item()+, [$qualifier as xs:string?]#map:map
op#from-sparql#2#$select as xs:string, [$qualifier as xs:string?]#map:map
op#from-sql#2#$select as xs:string, [$qualifier as xs:string?]#map:map
op#from-triples#4#$patterns as map:map+, [$qualifier as xs:string?], [$graphIris as xs:anyAtomicType*], [$options as map:map?]#map:map
op#from-view#4#$schema as xs:string?, $view as xs:string, [$qualifier as xs:string?], [$systemCols as map:map?]#map:map
op#ge#2#$left as item(), $right as item()#map:map
op#graph-col#1#$name as string#map:map
op#group-by#3#$plan as map:map, $keys as item()*, [$aggregates as item()*]#map:map
op#group-concat#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#gt#2#$left as item(), $right as item()#map:map
op#import#1#$importablePlan as item()#map:map
op#intersect#2#$leftPlan as map:map, $rightPlan as map:map#map:map
op#is-defined#1#$operand as item()#map:map
op#join-cross-product#3#$leftPlan as map:map, $rightPlan as map:map, [$condition as map:map?]#map:map
op#join-doc#3#$plan as map:map, $docCol as item(), $sourceCol as item()#map:map
op#join-doc-uri#3#$plan as map:map, $uriCol as item(), $fragmentIdCol as item()#map:map
op#join-inner#4#$leftPlan as map:map, $rightPlan as map:map, [$keys as map:map*], [$condition as map:map?]#map:map
op#join-left-outer#4#$leftPlan as map:map, $rightPlan as map:map, [$keys as map:map*], [$condition as map:map?]#map:map
op#json-array#1#$items as item()*#map:map
op#json-boolean#1#$value as item()#map:map
op#json-document#1#$root as map:map#map:map
op#json-null#0##map:map
op#json-number#1#$value as item()#map:map
op#json-object#1#$properties as map:map*#map:map
op#json-string#1#$value as item()#map:map
op#le#2#$left as item(), $right as item()#map:map
op#limit#2#$plan as map:map, $length as item()#map:map
op#lt#2#$left as item(), $right as item()#map:map
op#map#2#$plan as map:map, $mapper as function(item()) as item()*#map:map
op#max#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#min#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#modulo#2#$left as item(), $right as item()#map:map
op#multiply#2#$left as item(), $right as item()#map:map
op#ne#2#$left as item(), $right as item()#map:map
op#not#1#$operand as item()#map:map
op#offset#2#$plan as map:map, $start as item()#map:map
op#offset-limit#3#$plan as map:map, $start as item(), $length as item()#map:map
op#on#2#$leftCol as item(), $rightCol as item()#map:map
op#or#2#$left as item(), $right as item()#map:map
op#order-by#2#$plan as map:map, $keys as item()+#map:map
op#param#1#$name as xs:string#map:map
op#pattern#4#$subjects as item()+, $predicates as item()+, $objects as item()+, [$systemCols as map:map*]#map:map
op#prefixer#1#$baseUri as xs:string#sem:iri
op#prepare#2#$plan as map:map, $optimize as xs:unsignedShort#map:map
op#prop#2#$name as item(), $value as item()#map:map
op#reduce#3#$plan as map:map, $reducer as function(item()*, item()) as item()*, [$seed as item()*]#map:map
op#result#3#$plan as map:map, [$outType as xs:string?], [$bindings as map:map]#xs:string?
op#sample#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#schema-col#3#$schemaName as string?, $viewName as string?, $colName as string#map:map
op#select#3#$plan as map:map, $columns, as xs:string, [$qualifier as xs:string?]#map:map
op#sequence-aggregate#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#sql-condition#1#$operand as item()#map:map
op#subtract#2#$left as item(), $right as item()#map:map
op#sum#3#$outCol as item(), $inCol as item(), [$options as map:map?]#map:map
op#to-source#1#$importablePlan as item()#XQuerySource
op#uda#5#$outCol as item(), $inCol as item(), $module-path as xs:string, $func-name as xs:string, [$options as map:map?]#map:map
op#union#2#$leftPlan as map:map, $rightPlan as map:map#map:map
op#view-col#2#$viewName as string?, $colName as string#map:map
op#when#2#$condition as item(), $value as item()*#map:map
op#where#2#$plan as map:map, $condition as item()#map:map
op#where-distinct#1#$plan as map:map#map:map
op#xml-attribute#2#$name as item(), $value as item()#map:map
op#xml-comment#1#$content as item()#map:map
op#xml-document#1#$root as map:map#map:map
op#xml-element#3#$name as item(), [$attributes as map:map*], [$content as item()*]#map:map
op#xml-pi#2#$name as item(), $value as item()#map:map
op#xml-text#1#$content as item()#map:map
op#xpath#2#$column as item(), $path as xs:string#map:map
p#action#3#$module as xs:string, $description as xs:string?, $options as element()?#element(p:action)
p#collection#0##xs:string
p#condition#3#$module as xs:string, $description as xs:string?, $options as element()?#element(p:condition)
p#create#6#$name as xs:string, $description as xs:string, $success-action as element(p:action)?, $failure-action as element(p:action)?, $status-transitions as element(p:status-transition)*, $state-transitions as element(p:state-transition)*#xs:unsignedLong
p#execute#3#$condition as element(p:condition)?, $action as element(p:action)?, $description as xs:string?#element(p:execute)
p#get#1#$pipeline-name as xs:string#element(p:pipeline)
p#get-by-id#1#$pipeline-id as xs:unsignedLong#element(p:pipeline)
p#insert#1#$pipeline-node as node()#xs:unsignedLong
p#pipelines#0##element(p:pipeline)*
p#remove#1#$pipeline-name as xs:string#empty-sequence()
p#state-transition#7#$state as xs:anyURI, $description as xs:string, $on-success as xs:anyURI?, $on-failure as xs:anyURI?, $priority as xs:unsignedLong?, $default-action as element(p:action)?, $rules as element(p:execute)*#element(p:state-transition)
p#status-transition#7#$status as xs:string, $description as xs:string, $on-success as xs:anyURI?, $on-failure as xs:anyURI?, $priority as xs:unsignedLong?, $default-action as element(p:action)?, $rules as element(p:execute)*#element(p:status-transition)
pdf#clean#2#$doc as node()?, $toc as element()?#node()?
pdf#get-toc#1#$uri as xs:string#element()?
pdf#insert-toc-headers#2#$doc as node()?, $toc as element()?#node()?
pdf#make-toc#1#$toc as element()?#element()?
pkg#create#2#$pkgname as xs:string, [$pkgbody as node()]#empty-sequence()
pkg#database-configuration#1#$database as xs:string#element(db:package-database)
pkg#delete#1#$pkgname as xs:string#empty-sequence()
pkg#differences#2#$pkgname as xs:string, [$only-diffs as xs:boolean]#element(pkg:package-diff)
pkg#errors#1#$pkgname as xs:string#element(err:configuration-error)*
pkg#exists#1#$pkgname as xs:string#xs:boolean
pkg#get-database#2#$pkgname as xs:string, $database as xs:string#element(db:package-database)?
pkg#get-database-list#3#$pkgname as xs:string, [$start as xs:unsignedLong], [$pageLength as xs:unsignedLong]#element(list:database-list)
pkg#get-modules#3#$pkgname as xs:string, $group as xs:string, $server as xs:string#binary()?
pkg#get-package#2#$pkgname as xs:string, [$mimetype as xs:string?]#xs:string?
pkg#get-package-list#2#[$start as xs:unsignedLong], [$pageLength as xs:unsignedLong]#element(list:package-list)
pkg#get-server#3#$pkgname as xs:string, $group as xs:string, $server as xs:string#element()?
pkg#get-server-list#3#$pkgname as xs:string, [$start as xs:unsignedLong], [$pageLength as xs:unsignedLong]#element(list:server-list)
pkg#install#1#$pkgname as xs:string#pkgins:install($pkgname)
pkg#installable#1#$pkgname as xs:string#xs:boolean
pkg#put-database#2#$pkgname as xs:string, $dbxml as element(db:package-database)#empty-sequence()
pkg#put-modules#3#$pkgname as xs:string, $group as xs:string, $server as xs:string#empty-sequence()
pkg#put-server#2#$pkgname as xs:string, $srvxml as element()#empty-sequence()
pkg#remove-database#2#$pkgname as xs:string, $database as xs:string#empty-sequence()
pkg#remove-modules#3#$pkgname as xs:string, $group as xs:string, $server as xs:string#empty-sequence()
pkg#remove-server#3#$pkgname as xs:string, $group as xs:string, $server as xs:string#empty-sequence()
pkg#revert#1#$ticket-id as xs:string#pkgins:revert($ticket)
pkg#server-configuration#3#$group as xs:string, $server as xs:string, [$include-modules as xs:boolean]#element()
pkg#valid#1#$pkgname as xs:string#xs:boolean
pki#authority-create-client-certificate#4#$credential-id as xs:unsignedLong, $subject as element(x509:subject), $notBefore as xs:dateTime, $notAfter as xs:dateTime#xs:string*
pki#authority-create-host-certificate#6#$credential-id as xs:unsignedLong, $subject as element(x509:subject), $not-before as xs:dateTime, $not-after as xs:dateTime, $dns-name as xs:string?, $ip-addr as xs:string?#xs:string*
pki#authority-sign-host-certificate-request#4#$credential-id as xs:unsignedLong, $x509-req as element(x509:req), $not-before as xs:dateTime, $not-after as xs:dateTime#xs:string
pki#create-authority#6#$name as xs:string, $description as xs:string, $subject as element(x509:subject), $notBefore as xs:dateTime, $notAfter as xs:dateTime, $permissions as element(sec:permission)*#xs:unsignedLong
pki#create-template#5#$name as xs:string, $description as xs:string, $key-type as xs:string?, $key-options as element()?, $csr as element(x509:req)#element(pki:template)
pki#delete-authority#1#$name as xs:string#xs:string)
pki#delete-certificate#1#$certificate-id as xs:unsignedLong#empty-sequence()
pki#delete-template#1#$template-id as xs:unsignedLong#empty-sequence()
pki#generate-certificate-request#4#$template-id as xs:unsignedLong, $common-name as xs:string, $dns-name as xs:string?, $ip-addr as xs:string?#xs:string
pki#generate-template-certificate-authority#2#$template-id as xs:unsignedLong, $valid-for as xs:unsignedInt#empty-sequence()
pki#generate-temporary-certificate#5#$template-id as xs:unsignedLong, $valid-for as xs:unsignedInt, $common-name as xs:string, $dns-name as xs:string?, $ip-addr as xs:string?#empty-sequence()
pki#generate-temporary-certificate-if-necessary#5#$template-id as xs:unsignedLong, $valid-for as xs:unsignedInt, $common-name as xs:string, $dns-name as xs:string?, $ip-addr as xs:string?#empty-sequence()
pki#get-certificate#4#$template-id as xs:unsignedLong, $common-name as xs:string, $dns-name as xs:string?, $ip-addr as xs:string?#element(pki:certificate)?
pki#get-certificate-pem#2#$template-id as xs:unsignedLong, $hostname as xs:string#xs:string*
pki#get-certificate-xml#2#$template-id as xs:unsignedLong, $hostname as xs:string#element(x509:cert)*
pki#get-certificates#1#$cert-id as xs:unsignedLong*#element(pki:certificate)*
pki#get-certificates-for-template#1#$template-id as xs:unsignedLong#element(pki:certificate)*
pki#get-certificates-for-template-xml#1#$template-id as xs:unsignedLong#element(x509:cert)*
pki#get-pending-certificate-request#4#$template-id as xs:unsignedLong, $common-name as xs:string, $dns-name as xs:string?, $ip-addr as xs:string?#element(pki:request)?
pki#get-pending-certificate-requests-pem#1#$template-id as xs:unsignedLong#xs:string*
pki#get-pending-certificate-requests-xml#1#$template-id as xs:unsignedLong#element(x509:req)*
pki#get-template#1#$template-id as xs:unsignedLong*#element(pki:template)*
pki#get-template-by-name#1#$template-name as xs:string#element(pki:template)*
pki#get-template-certificate-authority#1#$template-id as xs:unsignedLong#element(pki:certificate)?
pki#get-template-ids#0##xs:unsignedLong*
pki#get-trusted-certificate-ids#0##xs:unsignedLong*
pki#insert-certificate-revocation-list#2#$url as xs:string, $crl as item()#empty-sequence()
pki#insert-host-certificate#3#$template-id as xs:unsignedLong, $certs as xs:string, $pkey as xs:string#empty-sequence()
pki#insert-signed-certificates#1#$certs as xs:string#empty-sequence()
pki#insert-template#1#$template as element(pki:template)#xs:unsignedLong
pki#insert-trusted-certificates#1#$certs as xs:string#xs:unsignedLong*
pki#is-temporary#1#$cert as element(pki:certificate)#xs:boolean
pki#need-certificate#4#$template-id as xs:unsignedLong, $common-name as xs:string, $dns-name as xs:string?, $ip-addr as xs:string?#xs:boolean
pki#template-get-description#1#$template as element(pki:template)#xs:string
pki#template-get-id#1#$template as element(pki:template)#xs:unsignedLong
pki#template-get-key-options#1#$template as element(pki:template)#element(pki:key-options)
pki#template-get-key-type#1#$template as element(pki:template)#xs:string
pki#template-get-name#1#$template as element(pki:template)#xs:string
pki#template-get-request#1#$template as element(pki:template)#element(x509:req)
pki#template-get-version#1#$template as element(pki:template)#xs:unsignedLong
pki#template-in-use#1#$template-id as xs:unsignedLong#xs:boolean
pki#template-set-description#2#$template as element(pki:template), $description as xs:string#element(pki:template)
pki#template-set-key-options#2#$template as element(pki:template), $key-options as element(pki:key-options)#element(pki:template)
pki#template-set-key-type#2#$template as element(pki:template), $key-type as xs:string#element(pki:template)
pki#template-set-name#2#$template as element(pki:template), $name as xs:string#element(pki:template)
pki#template-set-request#2#$template as element(pki:template), $req as element(x509:req)#element(pki:template)
plugin#asset#3#$pid as xs:string, $scope as xs:string, $asset-path as xs:string#node()?
plugin#asset-exists#3#$pid as xs:string, $scope as xs:string, $asset-path as xs:string#xs:boolean
plugin#capability#3#$capability as xs:string, $uri as xs:string, [$scope as xs:string]#xdmp:function?
plugin#enumerate#2#$uri as xs:string, [$scope as xs:string]#map:map
plugin#flush-scope#2#$scope as xs:string, [$pid as xs:string?]#empty-sequence()
plugin#implementations#2#$capability as xs:string, [$scope as xs:string]#map:map
plugin#initialize-scope#1#$scope as xs:string#xs:integer
plugin#install-from-filesystem#1#$scope as xs:string#xs:integer
plugin#install-from-zip#2#$scope as xs:string, $zip as binary()#xs:integer
plugin#plugins#2#$capability as xs:string*, [$scope as xs:string]#xs:string*
plugin#register#2#$capabilities as map:map, $plugin-uri as xs:string#xs:string
plugin#uninstall#2#$scope as xs:string, $pid as xs:string?#empty-sequence()
ppt#clean#2#$uri as xs:string, $doc as node()?#node()
prof#allowed#1#$request-id as xs:unsignedLong#xs:boolean
prof#disable#1#$request-id as xs:unsignedLong#empty-sequence()
prof#enable#1#$request-id as xs:unsignedLong#empty-sequence()
prof#eval#3#$xquery as xs:string, [$vars as item()*], [$options as (element()|map:map)?]#item()*
prof#invoke#3#$path as xs:string, [$vars as item()*], [$options as (element()|map:map)?]#item()*
prof#report#1#$request-id as xs:unsignedLong#element(prof:report)?
prof#reset#1#$request-id as xs:unsignedLong#empty-sequence()
prof#value#3#$expr as xs:string, [$map as map:map?], [$context as item()?]#item()*
prof#xslt-eval#4#$stylesheet as node(), [$input as node()?], [$params as map:map?], [$options as (element()|map:map)?]#item()*
prof#xslt-invoke#4#$path as xs:string, [$input as node()?], [$params as map:map?], [$options as (element()|map:map)?]#item()*
rdf#langString#2#$string as xs:string, $lang as xs:string#rdf:langString
rdf#langString-language#1#$val as rdf:langString#xs:string
rdt#redact#2#$doc as node()*, $rule-collection as xs:string*#node()*
rdt#rule-validate#1#$rule-collection as xs:string*#xs:string*
rest#check-options#1#$options as element(rest:options)#element(rest:report)?
rest#check-request#1#$options as element(rest:request)#element(rest:report)?
rest#get-raw-query-params#0##map:map
rest#matching-request#2#$options as element(rest:options), $match-criteria as xs:string+#element(rest:request)?
rest#process-request#1#$request as element(rest:request)#map:map
rest#report-error#1#$error as element()#element()
rest#rewrite#2#$options as element(rest:options), $match-criteria as xs:string+#xs:string?
sc#annotations#1#[$arg as schema-component()]#element()*
sc#attribute-decl#1#[$arg as item()]#attribute-decl()?
sc#attributes#1#[$arg as schema-component()]#attribute-decl()*
sc#canonical-path#1#[$arg as schema-component()]#xs:string?
sc#complex-type#1#[$arg as item()]#complex-type()?
sc#component-property#2#$propname as xs:string, [$arg as schema-component()]#item()*
sc#element-decl#1#[$arg as item()]#element-decl()?
sc#facets#1#[$arg as schema-component()]#schema-facet()*
sc#function-parameter-type#2#[$arg as function(*)], [$param as xs:integer?]#schema-type()?
sc#function-return-type#1#[$arg as function(*)]#schema-type()
sc#name#1#[$arg as schema-component()]#xs:QName?
sc#particles#1#[$arg as schema-component()]#schema-particle()*
sc#schema#1#[$arg as item()]#schema-root()?
sc#schema-from-path#2#$namespace as xs:string, [$location as xs:string]#schema-root()?
sc#simple-type#1#[$arg as item()]#simple-type()?
sc#type#1#[$arg as item()]#schema-type()?
sc#type-apply#2#$type as schema-type(), $arg as item()#item()*
sc#type-named#1#$arg as xs:QName#schema-type()
schematron#compile#2#$schema as element(sch:schema), [$params as map:map?]#document-node()
schematron#delete#1#$schematron-uri as xs:string#empty-sequence()
schematron#get#1#$schematron-uri as xs:string#document-node()
schematron#put#2#$schematron-uri as xs:string, [$params as map:map?]#empty-sequence()
schematron#validate#2#$document as node(), $validator-xslt as document-node()#document-node()
search#check-options#2#$options as element(search:options), [$strict as xs:boolean?]#element(search:report)*
search#estimate#2#$cts-query as element(), [$options as element(search:options)?]#xs:unsignedLong
search#get-default-options#0##element(search:options)
search#parse#3#$qtext as xs:string+, [$options as element(search:options)?], [$output as xs:string?]#element()?
search#remove-constraint#3#$qtext as xs:string, $ptext as xs:string, $options as element(search:options)?#xs:string?
search#resolve#4#$query as element(), [$options as element(search:options)?], [$start as xs:unsignedLong?], [$page-length as xs:unsignedLong?]#element(search:response)
search#resolve-nodes#4#$query as element(), [$options as element(search:options)?], [$start as xs:unsignedLong?], [$page-length as xs:unsignedLong?]#node()*
search#search#4#$qtext as xs:string+, [$options as element(search:options)?], [$start as xs:unsignedLong?], [$page-length as xs:unsignedLong?]#element(search:response)
search#snippet#3#$result as node(), $cts-query as schema-element(cts:query), [$options as element(search:transform-results)?]#element(search:snippet)
search#suggest#6#$qtext as xs:string+, [$options as element(search:options)?], [$limit as xs:unsignedInt?], [$cursor-position as xs:unsignedInt?], [$focus as xs:positiveInteger?], [$query as element(search:query)*]#xs:string*
search#unparse#1#$qtree as element()#xs:string+
search#values#7#$spec-name as xs:string, $options as element(search:options), [$query as element(search:query)?], [$limit as xs:unsignedLong?], [$start as xs:anyAtomicType?], [$page-start as xs:unsignedLong?], [$page-length as xs:unsignedLong?]#element(search:values-response)
sec#add-query-rolesets#1#$qrss as element(sec:query-rolesets)*#xs:unsignedLong*
sec#amp-add-roles#5#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:unsignedLong, $role-names as xs:string*#empty-sequence()
sec#amp-doc-collections#0##xs:string*
sec#amp-doc-permissions#0##element(sec:permission)*
sec#amp-exists#4#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:unsignedLong#xs:boolean
sec#amp-get-roles#4#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:unsignedLong#xs:string*
sec#amp-remove-roles#5#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:unsignedLong, $role-names as xs:string*#empty-sequence()
sec#amp-set-roles#5#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:unsignedLong, $role-names as xs:string*#empty-sequence()
sec#amps-change-modules-database#2#$old-db as xs:unsignedLong, $new-db as xs:unsignedLong#xs:unsignedLong*
sec#amps-collection#0##xs:string
sec#check-admin#0##empty-sequence()
sec#collection-add-permissions#2#$uri as xs:string, $permissions as element(sec:permission)*#empty-sequence()
sec#collection-get-permissions#1#$uri as xs:string#element(sec:permission)*
sec#collection-remove-permissions#2#$uri as xs:string, $permissions as element(sec:permission)*#empty-sequence()
sec#collection-set-permissions#2#$uri as xs:string, $permissions as element(sec:permission)*#empty-sequence()
sec#collections-collection#0##xs:string
sec#compartment-get-roles#1#$compartment-name as xs:string#element(sec:role)*
sec#create-amp#5#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:anyAtomicType, $role-names as xs:string*#xs:unsignedLong
sec#create-credential#9#$name as xs:string, $description as xs:string, $username as xs:string?, $password as xs:string?, $certificate as xs:string?, $private-key as xs:string?, $signing as xs:boolean, $targets as element(sec:credential-target)*, $permissions as element(sec:permission)*#xs:unsignedLong
sec#create-external-security#7#$external-security-name as xs:string, $description as xs:string, $authentication as xs:string, $cache-timeout as xs:unsignedInt, $authorization as xs:string, $ldap-server as (sec:ldap-server)?, $saml-server as (sec:saml-server)?#xs:unsignedLong
sec#create-privilege#4#$privilege-name as xs:string, $action as xs:string, $kind as xs:string, $role-names as xs:string*#xs:unsignedLong
sec#create-role#7#$role-name as xs:string, $description as xs:string?, $role-names as xs:string*, $permissions as element(sec:permission)*, $collections as xs:string*, [$compartment as xs:string?], [$external-names as xs:string*]#xs:unsignedLong
sec#create-user#7#$user-name as xs:string, $description as xs:string?, $password as xs:string, $role-names as xs:string*, $permissions as element(sec:permission)*, $collections as xs:string*, [$external-names as xs:string*]#xs:unsignedLong
sec#create-user-with-role#7#$user-name as xs:string, $description as xs:string?, $password as xs:string, $role-names as xs:string*, $permissions as element(sec:permission)*, $collections as xs:string*, $external-names as xs:string*#xs:unsignedLong
sec#credential-get-certificate#1#$credential-name as xs:string#xs:string?
sec#credential-get-description#1#$credential-name as xs:string#xs:string
sec#credential-get-id#1#$credential-name as xs:string#xs:unsignedLong
sec#credential-get-password#1#$credential-name as xs:string#xs:string?
sec#credential-get-permissions#1#$credential-name as xs:string#element(sec:permission)*
sec#credential-get-private-key#1#$credential-name as xs:string#xs:string?
sec#credential-get-signing#1#$credential-name as xs:string#xs:boolean
sec#credential-get-targets#1#$credential-name as xs:string#element(sec:credential-target)*
sec#credential-get-username#1#$credential-name as xs:string#xs:string?
sec#credential-set-certificate#3#$credential-name as xs:string, $certificate as xs:string?, $private-key as xs:string?#empty-sequence()
sec#credential-set-description#2#$credential-name as xs:string, $description as xs:string#empty-sequence()
sec#credential-set-name#2#$credential-name as xs:string, $new-name as xs:string#empty-sequence()
sec#credential-set-password#2#$credential-name as xs:string, $password as xs:string?#empty-sequence()
sec#credential-set-permissions#2#$credential-name as xs:string, $permissions as element(sec:permission)*#empty-sequence()
sec#credential-set-signing#2#$credential-name as xs:string, $signing as xs:boolean#empty-sequence()
sec#credential-set-targets#2#$credential-name as xs:string, $targets as element(sec:credential-target)*#empty-sequence()
sec#credential-set-username#2#$credential-name as xs:string, $username as xs:string?#empty-sequence()
sec#credentials-get-aws#0##xs:string*
sec#credentials-get-azure#0##xs:string*
sec#credentials-set-aws#3#$access-key as xs:string, $secret-key as xs:string, [$session-token as xs:string]#empty-sequence()
sec#credentials-set-azure#2#$storage-account as xs:string, $storage-key as xs:string#empty-sequence()
sec#external-security-clear-cache#1#$external-security-name as xs:string#empty-sequence()
sec#external-security-get-authentication#1#$external-security-name as xs:string#xs:string
sec#external-security-get-authorization#1#$external-security-name as xs:string#xs:string
sec#external-security-get-cache-timeout#1#$external-security-name as xs:string#xs:unsignedInt
sec#external-security-get-description#1#$external-security-name as xs:string#xs:string
sec#external-security-get-http-options#1#$external-security-name as xs:string#element()?
sec#external-security-get-ldap-attribute#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-base#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-bind-method#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-certificate#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-default-user#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-member-attribute#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-memberof-attribute#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-nested-lookup#1#$external-security-name as xs:string#xs:boolean
sec#external-security-get-ldap-private-key#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-remove-domain#1#$external-security-name as xs:string#xs:boolean
sec#external-security-get-ldap-server-uri#1#$external-security-name as xs:string#xs:string
sec#external-security-get-ldap-start-tls#1#$external-security-name as xs:string#xs:boolean
sec#external-security-get-saml-attribute-names#1#$external-security-name as xs:string#xs:string*
sec#external-security-get-saml-destination#1#$external-security-name as xs:string#xs:string?
sec#external-security-get-saml-entity-id#1#$external-security-name as xs:string#xs:string?
sec#external-security-get-saml-idp-certificate-authority#1#$external-security-name as xs:string#xs:string?
sec#external-security-get-saml-issuer#1#$external-security-name as xs:string#xs:string?
sec#external-security-get-saml-privilege-attribute-name#1#$external-security-name as xs:string#xs:string?
sec#external-security-get-saml-sp-certificate#1#$external-security-name as xs:string#xs:string?
sec#external-security-get-ssl-client-certificate-authorities#1#$external-security-name as xs:string#xs:unsignedLong*
sec#external-security-get-ssl-require-client-certificate#1#$external-security-name as xs:string#xs:boolean
sec#external-security-set-authentication#2#$external-security-name as xs:string, $authentication as xs:string#empty-sequence()
sec#external-security-set-authorization#2#$external-security-name as xs:string, $authorization as xs:string#empty-sequence()
sec#external-security-set-cache-timeout#2#$external-security-name as xs:string, $cache-timeout as xs:unsignedInt#empty-sequence()
sec#external-security-set-description#2#$external-security-name as xs:string, $description as xs:string#empty-sequence()
sec#external-security-set-http-options#2#$external-security-name as xs:string, $http-options as element()#empty-sequence()
sec#external-security-set-ldap-attribute#2#$external-security-name as xs:string, $ldap-attribute as xs:string#empty-sequence()
sec#external-security-set-ldap-base#2#$external-security-name as xs:string, $ldap-base as xs:string#empty-sequence()
sec#external-security-set-ldap-bind-method#2#$external-security-name as xs:string, $ldap-bind-method as xs:string#empty-sequence()
sec#external-security-set-ldap-certificate#3#$external-security-name as xs:string, $ldap-certificate as xs:string, $ldap-private-key as xs:string#empty-sequence()
sec#external-security-set-ldap-default-user#2#$external-security-name as xs:string, $ldap-default-user as xs:string#empty-sequence()
sec#external-security-set-ldap-member-attribute#2#$external-security-name as xs:string, $ldap-member-attribute as xs:string#empty-sequence()
sec#external-security-set-ldap-memberof-attribute#2#$external-security-name as xs:string, $ldap-memberof-attribute as xs:string#empty-sequence()
sec#external-security-set-ldap-nested-lookup#2#$external-security-name as xs:string, $ldap-nested-lookup as xs:boolean#empty-sequence()
sec#external-security-set-ldap-password#2#$external-security-name as xs:string, $ldap-password as xs:string#empty-sequence()
sec#external-security-set-ldap-remove-domain#2#$external-security-name as xs:string, [$ldap-remove-domain as xs:boolean?]#empty-sequence()
sec#external-security-set-ldap-server-uri#2#$external-security-name as xs:string, $ldap-server-uri as xs:string#empty-sequence()
sec#external-security-set-ldap-start-tls#2#$external-security-name as xs:string, [$ldap-start-tls as xs:boolean?]#empty-sequence()
sec#external-security-set-name#2#$external-security-name as xs:string, $new-external-security-name as xs:string#empty-sequence()
sec#external-security-set-saml-attribute-names#2#$external-security-name as xs:string, $saml-attribute-names as xs:string*#empty-sequence()
sec#external-security-set-saml-destination#2#$external-security-name as xs:string, $saml-destination as xs:string?#empty-sequence()
sec#external-security-set-saml-entity-id#2#$external-security-name as xs:string, $saml-entity-id as xs:string#empty-sequence()
sec#external-security-set-saml-idp-certificate-authority#2#$external-security-name as xs:string, $saml-idp-certificate-authority as xs:string?#empty-sequence()
sec#external-security-set-saml-issuer#2#$external-security-name as xs:string, $saml-issuer as xs:string?#empty-sequence()
sec#external-security-set-saml-privilege-attribute-name#2#$external-security-name as xs:string, $saml-privilege-attribute-name as xs:string?#empty-sequence()
sec#external-security-set-saml-sp-certificate#3#$external-security-name as xs:string, $saml-sp-certificate as xs:string?, $saml-sp-private-key as xs:string?#empty-sequence()
sec#external-security-set-ssl-client-certificate-authorities#2#$external-security-name as xs:string, $authorities as xs:unsignedLong*#empty-sequence()
sec#external-security-set-ssl-require-client-certificate#2#$external-security-name as xs:string, $required as xs:boolean#empty-sequence()
sec#get-amp#4#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:unsignedLong#element(sec:amp)?
sec#get-collection#1#$uri as xs:string#element(sec:collection)
sec#get-compartments#0##xs:string*
sec#get-credential#1#$credential-name as xs:string#element(sec:credential)
sec#get-credential-by-id#1#$credential-id as xs:unsignedLong#element(sec:credential)
sec#get-credential-ids#0##xs:unsignedLong*
sec#get-credential-names#0##xs:string*
sec#get-distinct-permissions#2#$input-perms as element(sec:permission)*, $output-perms as element(sec:permission)*#element(sec:permission)*
sec#get-privilege#2#$action as xs:string, $kind as xs:string#element(sec:privilege)?
sec#get-role-ids#1#[$role-names as xs:string*]#element(sec:role-id)*
sec#get-role-names#1#$role-ids as xs:unsignedLong*#element(sec:role-name)*
sec#get-saml-entity#1#$saml-entity-id as xs:string#element(sec:saml-entity)?
sec#get-saml-entity-ids#0##xs:string*
sec#get-user-names#1#$user-ids as xs:unsignedLong*#element(sec:user-name)*
sec#ldap-server#12#$ldap-server-uri as xs:string, $ldap-base as xs:string, $ldap-attribute as xs:string, $ldap-default-user as xs:string, $ldap-password as xs:string, $ldap-bind-method as xs:string, [$ldap-memberof-attribute as xs:string], [$ldap-member-attribute as xs:string], [$ldap-start-tls as xs:boolean?], [$ldap-certificate as xs:string?], [$ldap-private-key as xs:string?], [$ldap-nested-lookup as xs:boolean?]#element(sec:ldap-server)
sec#path-add-permissions#3#$path as xs:string, $path-namespaces as element(sec:path-namespace)*, $permissions as element(sec:permission)+#empty-sequence()
sec#path-get-permissions#2#$path as xs:string, $path-namespaces as element(sec:path-namespace)*#element(sec:permission)*
sec#path-remove-permissions#3#$path as xs:string, $path-namespaces as element(sec:path-namespace)*, $permissions as element(sec:permission)+#empty-sequence()
sec#path-set-permissions#3#$path as xs:string, $path-namespaces as element(sec:path-namespace)*, $permissions as element(sec:permission)+#empty-sequence()
sec#priv-doc-collections#0##xs:string*
sec#priv-doc-permissions#0##element(sec:permission)*
sec#privilege-add-roles#3#$action as xs:string, $kind as xs:string, $role-names as xs:string*#empty-sequence()
sec#privilege-exists#2#$action as xs:string, $kind as xs:string#xs:boolean
sec#privilege-get-roles#2#$action as xs:string, $kind as xs:string#xs:string*
sec#privilege-remove-roles#3#$action as xs:string, $kind as xs:string, $role-names as xs:string*#empty-sequence()
sec#privilege-set-name#3#$action as xs:string, $kind as xs:string, $new-privilege-name as xs:string#empty-sequence()
sec#privilege-set-roles#3#$action as xs:string, $kind as xs:string, $role-names as xs:string*#empty-sequence()
sec#privileges-collection#0##xs:string
sec#protect-collection#2#$uri as xs:string, $permissions as element(sec:permission)*#xs:unsignedLong
sec#protect-path#4#$path as xs:string, $path-namespaces as element(sec:path-namespace)*, $permissions as element(sec:permission)+, $path-set as xs:string?#xs:unsignedLong
sec#protected-path-doc-collections#0##xs:string*
sec#protected-path-doc-permissions#0##element(sec:permission)*
sec#protected-paths-collection#0##xs:string
sec#query-roleset#1#$role-names as xs:string+#element(sec:query-roleset)
sec#query-roleset-to-string#1#$roleset as element(sec:query-roleset)#xs:string
sec#query-rolesets#1#$rolesets as element(sec:query-roleset)+#element(sec:query-rolesets)
sec#query-rolesets-collection#0##xs:string
sec#query-rolesets-doc-collections#0##xs:string*
sec#query-rolesets-doc-permissions#0##element(sec:permission)*
sec#query-rolesets-id#1#$rolesets as element(sec:query-rolesets)#xs:unsignedLong
sec#query-rolesets-to-string#1#$rolesets as element(sec:query-rolesets)#xs:string
sec#remove-amp#4#$namespace as xs:string, $local-name as xs:string, $document-uri as xs:string, $database as xs:anyAtomicType#empty-sequence()
sec#remove-credential#1#$credential-name as xs:string#empty-sequence()
sec#remove-credential-by-id#1#$credential-id as xs:unsignedLong#empty-sequence()
sec#remove-external-security#1#$external-security-name as xs:string#empty-sequence()
sec#remove-path#2#$path as xs:string, $path-namespaces as element(sec:path-namespace)*#empty-sequence()
sec#remove-privilege#2#$action as xs:string, $kind as xs:string#empty-sequence()
sec#remove-query-rolesets#1#$qrss as element(sec:query-rolesets)*)#item()*
sec#remove-role#1#$role-name as xs:string#empty-sequence()
sec#remove-role-from-amps#1#$role-name as xs:string#empty-sequence()
sec#remove-role-from-privileges#1#$role-name as xs:string#empty-sequence()
sec#remove-role-from-roles#1#$role-name as xs:string#empty-sequence()
sec#remove-role-from-users#1#$role-name as xs:string#empty-sequence()
sec#remove-user#1#$user-name as xs:string#empty-sequence()
sec#resecure-credentials#0##empty-sequence()
sec#role-add-roles#2#$role-name as xs:string, $new-roles as xs:string*#empty-sequence()
sec#role-doc-collections#0##xs:string*
sec#role-doc-permissions#0##element(sec:permission)*
sec#role-exists#1#$role-name as xs:string#xs:boolean
sec#role-get-compartment#1#$role-name as xs:string#xs:string?
sec#role-get-default-collections#1#$role-name as xs:string#xs:string*
sec#role-get-default-permissions#1#$role-name as xs:string#element(sec:permission)*
sec#role-get-description#1#$role-name as xs:string#xs:string
sec#role-get-external-names#1#$role-name as xs:string#xs:string*
sec#role-get-roles#1#$role-name as xs:string#xs:string*
sec#role-privileges#1#$role-name as xs:string#element(sec:privilege)*
sec#role-remove-roles#2#$role-name as xs:string, $role-names as xs:string*#empty-sequence()
sec#role-set-default-collections#2#$role-name as xs:string, $collections as xs:string*#empty-sequence()
sec#role-set-default-permissions#2#$role-name as xs:string, $permissions as element(sec:permission)*#empty-sequence()
sec#role-set-description#2#$role-name as xs:string, $description as xs:string#empty-sequence()
sec#role-set-external-names#2#$role-name as xs:string, $external-name as xs:string*#empty-sequence()
sec#role-set-name#2#$role-name as xs:string, $new-role-name as xs:string#empty-sequence()
sec#role-set-roles#2#$role-name as xs:string, $role-names as xs:string*#empty-sequence()
sec#roles-collection#0##xs:string
sec#saml-entity-delete#1#$saml-entity-id as xs:string#empty-sequence()
sec#saml-entity-insert#1#$entity as element(md:EntityDescriptor)#xs:unsignedLong
sec#saml-server#9#$saml-entity-id as xs:string, $saml-attribute-names as xs:string*, $saml-privilege-attribute-name as xs:string?, [$http-options as element()], [$saml-destination as xs:string], [$saml-issuer as xs:string], [$saml-idp-certificate-authority as xs:string], [$saml-sp-certificate as xs:string], [$saml-sp-private-key as xs:string]#element(sec:saml-server)
sec#security-collection#0##xs:string
sec#security-installed#0##xs:boolean
sec#security-namespace#0##xs:string
sec#security-path-namespace#2#$prefix as xs:string, $namespace-uri as xs:string#element(sec:path-namespace)
sec#security-version#0##xs:double
sec#set-realm#1#$realm as xs:string#empty-sequence()
sec#uid-for-name#1#$name as xs:string#xs:unsignedLong*
sec#unprotect-collection#1#$uri as xs:string#empty-sequence()
sec#unprotect-path#2#$path as xs:string, $path-namespaces as element(sec:path-namespace)*#empty-sequence()
sec#uri-credential-target#2#$uri-pattern as xs:string, $authentication as xs:string#element(sec:credential-target)
sec#user-add-roles#2#$user-name as xs:string, $role-names as xs:string*#empty-sequence()
sec#user-doc-collections#0##xs:string*
sec#user-doc-permissions#0##element(sec:permission)*
sec#user-exists#1#$user-name as xs:string#xs:boolean
sec#user-get-default-collections#1#$user-name as xs:string#xs:string*
sec#user-get-default-permissions#1#$user-name as xs:string#element(sec:permission)*
sec#user-get-description#1#$user-name as xs:string#xs:string
sec#user-get-external-names#1#$user-name as xs:string#xs:string*
sec#user-get-last-password-date#1#$user-name as xs:string#xs:dateTime?
sec#user-get-password-extra#1#$user-name as xs:string#element(sec:password-extra)?
sec#user-get-roles#1#$user-name as xs:string#xs:string*
sec#user-privileges#1#$user-name as xs:string#element(sec:privilege)*
sec#user-remove-roles#2#$user-name as xs:string, $role-names as xs:string*#empty-sequence()
sec#user-set-default-collections#2#$user-name as xs:string, $collections as xs:string*#empty-sequence()
sec#user-set-default-permissions#2#$user-name as xs:string, $permissions as element(sec:permission)*#empty-sequence()
sec#user-set-description#2#$user-name as xs:string, $description as xs:string#empty-sequence()
sec#user-set-external-names#2#$user-name as xs:string, $external-name as xs:string*#empty-sequence()
sec#user-set-name#3#$user-name as xs:string, $new-user-name as xs:string, $password as xs:string#empty-sequence()
sec#user-set-password#2#$user-name as xs:string, $password as xs:string#empty-sequence()
sec#user-set-password-extra#2#$user-name as xs:string, $extra as element(sec:password-extra)#empty-sequence()
sec#user-set-roles#2#$user-name as xs:string, $role-names as xs:string*#empty-sequence()
sec#users-collection#0##xs:string
sec#validate-permissions#1#$permissions as element(sec:permission)*#node()*
sem#binding#1#[$map as element(json:object)]#sem:binding
sem#bnode#1#[$value as xs:anyAtomicType]#sem:blank
sem#coalesce#2#$parameter1 as item()*, [$parameterN as item()*,...]#item()*
sem#curie-expand#2#$curie as xs:string, [$mapping as map:map]#sem:iri
sem#curie-shorten#2#$iri as sem:iri, [$mapping as map:map]#xs:string
sem#database-nodes#3#$triples as sem:triple*, [$options as xs:string*], [$query as cts:query?]#node()*
sem#datatype#1#$value as xs:anyAtomicType#sem:iri
sem#default-graph-iri#0##sem:iri
sem#describe#1#$iris as sem:iri*#sem:triple*
sem#graph#1#$graphname as sem:iri#sem:triple*
sem#graph-add-permissions#2#$graph as sem:iri, $permissions as element(sec:permission)*#empty-sequence()
sem#graph-delete#1#$graphname as sem:iri#empty-sequence()
sem#graph-get-permissions#2#$graph as sem:iri, [$format as xs:string]#element(sec:permission)*
sem#graph-insert#6#$graphname as sem:iri, $triples as sem:triple*, [$permissions as item()*], [$collections as xs:string*], [$quality as xs:int?], [$forest-ids as xs:unsignedLong*]#xs:string*
sem#graph-remove-permissions#2#$graph as sem:iri, $permissions as element(sec:permission)*#empty-sequence()
sem#graph-set-permissions#2#$graph as sem:iri, $permissions as element(sec:permission)*#empty-sequence()
sem#if#3#$condition as xs:boolean, $then as item()*, $else as item()*#item()*
sem#in-memory-store#1#$dataset as sem:triple*#sem:store
sem#invalid#2#$string as xs:string, $datatype as sem:iri#sem:invalid
sem#invalid-datatype#1#$val as sem:invalid#sem:iri
sem#iri#1#$string-iri as xs:string#sem:iri
sem#isBlank#1#$value as xs:anyAtomicType#xs:boolean
sem#isIRI#1#$value as xs:anyAtomicType#xs:boolean
sem#isLiteral#1#$value as xs:anyAtomicType#xs:boolean
sem#isNumeric#1#$value as xs:anyAtomicType#xs:boolean
sem#lang#1#$value as xs:anyAtomicType#xs:string
sem#langMatches#2#$lang-tag as xs:string, $lang-range as xs:string#xs:boolean
sem#prefixes#2#$prefixdef as xs:string?, [$include-common as xs:boolean?]#map:map
sem#query-results-serialize#2#$results as option, [$options as xs:string*]#query-results-serialize($results)
sem#random#0##xs:double
sem#rdf-builder#2#[$prefixes as map:map?], [$graph as sem:iri?]#function(item(),item(),item()) as sem:triple
sem#rdf-get#3#$location as xs:string, [$options as xs:string*], [$http-opts as element()?]#sem:triple*
sem#rdf-insert#6#$triples as sem:triple*, [$options as xs:string*], [$permissions as element], [$collections as xs:string*], [$quality as xs:int?], [$forest-ids as xs:unsignedLong*]#xs:string*
sem#rdf-load#7#$location as xs:string, [$options as xs:string*], [$http-opts as element()?], [$permissions as item()*], [$collections as xs:string*], [$quality as xs:int?], [$forest-ids as xs:unsignedLong*]#xs:string*
sem#rdf-parse#2#$in as item(), [$options as xs:string*]#sem:triple*
sem#rdf-serialize#2#$triples as sem:triple*, [$options as xs:string*]#item()
sem#resolve-iri#2#$relative as xs:string, [$base as xs:string]#sem:iri
sem#ruleset-store#3#$locations as xs:string*, [$store as sem:store*], [$options as xs:string*]#sem:store
sem#sameTerm#2#$a as xs:anyAtomicType, $b as xs:anyAtomicType#xs:boolean
sem#sparql#4#$sparql as xs:string, [$bindings as map:map?], [$options as xs:string*], [$store as sem:store*]#item()*
sem#sparql-plan#3#$sparql as xs:string, [$bindingNames as xs:string*], [$options as xs:string*]#element()
sem#sparql-update#5#$sparql as xs:string, [$bindings as map:map?], [$options as xs:string*], [$store as sem:store*], [$default-permissions as element(sec:permission)*]#empty-sequence()
sem#sparql-values#4#$sparql as xs:string, $values as map:map*, [$options as xs:string*], [$store as item()*]#map:map*
sem#store#2#[$options as xs:string*], [$query as cts:query?]#sem:store
sem#timezone-string#1#$value as xs:dateTime#xs:string
sem#transitive-closure#3#$seeds as sem:iri*, $predicates as sem:iri*, $limit as xs:integer#sem:iri*
sem#triple#4#$subject_or_node as item(), [$predicate as xs:anyAtomicType], [$object as xs:anyAtomicType], [$graph as sem:iri?]#sem:triple
sem#triple-graph#1#$triple as sem:triple#sem:iri?
sem#triple-object#1#$triple as sem:triple#xs:anyAtomicType
sem#triple-predicate#1#$triple as sem:triple#xs:anyAtomicType
sem#triple-subject#1#$triple as sem:triple#xs:anyAtomicType
sem#typed-literal#2#$value as xs:string, $datatype as sem:iri#xs:anyAtomicType
sem#unknown#2#$string as xs:string, $datatype as sem:iri#sem:unknown
sem#unknown-datatype#1#$val as sem:unknown#sem:iri
sem#uuid#0##sem:iri
sem#uuid-string#0##xs:string
spell#add-word#2#$uri as xs:string, $word as xs:string#empty-sequence()
spell#double-metaphone#1#$word as xs:string#xs:string*
spell#insert#2#$uri as xs:string, $dict as item()#empty-sequence()
spell#is-correct#2#$uri as xs:string*, $word as xs:string#xs:boolean
spell#levenshtein-distance#2#$str1 as xs:string, $str2 as xs:string#xs:integer
spell#load#2#$path as xs:string, $uri as xs:string#empty-sequence()
spell#make-dictionary#2#$words as xs:string*, [$output-kind as xs:string]#item()
spell#remove-word#2#$uri as xs:string, $word as xs:string#empty-sequence()
spell#romanize#1#$string as xs:string#xs:string
spell#suggest#3#$uri as xs:string*, $word as xs:string, [$options as (element()|map:map)?]#xs:string*
spell#suggest-detailed#3#$dictionary_uris as xs:string*, $word as xs:string, [$options as (element()|map:map)?]#element(spell:suggestion)*
sql#bit-length#1#$str as xs:string#xs:integer
sql#collated-string#2#$string as xs:string, $collationURI as xs:string#rdf:collatedString
sql#collatedString-collation#1#$val as sql:collatedString#xs:string
sql#columnID#3#$schema as xs:string, $view as xs:string, $column as xs:string#sql:columnID
sql#dateadd#3#$datepart as xs:string, $number as xs:integer, $date as item()#item()
sql#datediff#3#$datepart as xs:string, $startdate as item(), $enddate as item()#xs:integer?
sql#datepart#2#$datepart as xs:string?, $date as xs:genericDateTimeArg#xs:integer?
sql#day#1#$arg as xs:genericDateTimeArg?#xs:integer?
sql#dayname#1#$arg as xs:genericDateTimeArg?#xs:string?
sql#difference#1#$arg as xs:string#xs:string
sql#glob#2#$input as xs:string?, $pattern as xs:string#xs:boolean?
sql#hours#1#$arg as xs:genericDateTimeArg?#xs:integer?
sql#ifnull#2#$expr1 as item()*, $expr2 as item()*#item()*
sql#insert#4#$str as xs:string, $start as xs:double, $length as xs:double, $str2 as xs:string#xs:string
sql#instr#2#$str as xs:string, $n as xs:string#xs:unsigned
sql#left#2#$str as item(), $n as xs:double#xs:string
sql#like#3#$input as xs:string?, $pattern as xs:string, $escape as xs:string#xs:boolean?
sql#ltrim#1#$str as xs:string#xs:string
sql#minutes#1#$arg as xs:genericDateTimeArg?#xs:integer?
sql#month#1#$arg as xs:genericDateTimeArg?#xs:integer?
sql#monthname#1#$arg as xs:genericDateTimeArg?#xs:string?
sql#nullif#2#$expr1 as item()*, $expr2 as item()*#item()*
sql#octet-length#1#$x as xs:string#xs:integer
sql#quarter#1#$arg as xs:genericDateTimeArg?#xs:integer?
sql#rand#1#$n as xs:unsignedLong#xs:unsignedLong
sql#repeat#2#$str as item(), $n as xs:double#xs:string
sql#right#2#$str as item(), $n as xs:double#xs:string
sql#rtrim#1#$str as xs:string#xs:string
sql#seconds#1#$arg as xs:genericDateTimeArg?#xs:decimal?
sql#sign#1#$x as xs:double#xs:double
sql#soundex#1#$arg as xs:string#xs:string
sql#space#1#$n as xs:double#xs:string
sql#strpos#3#$target as xs:string?, $test as xs:string?, [$collation as xs:string?]#xs:integer?
sql#timestampadd#3#$dateTimeType as xs:ID, $value as xs:integer, $timestamp as xs:string#xs:integer?
sql#timestampdiff#3#$dateTimeType as xs:ID, $timestamp1 as xs:genericDateTimeArg, $timestamp2 as xs:genericDateTimeArg#xs:integer?
sql#trim#1#$str as xs:string#xs:string
sql#week#1#$arg as xs:dateTime? | xs:date? | xs:string?#xs:integer?
sql#year#1#$arg as genericDateTimeArg?#xs:integer?
sql#yearday#1#$arg as xs:genericDateTimeArg?#xs:integer?
tde#column-get-permissions#3#$schema as xs:string, $view as xs:string, $column as xs:string#item()*
tde#column-remove-permissions#3#$schema as xs:string, $view as xs:string, $column as xs:string#empty-sequence()
tde#column-set-permissions#4#$schema as xs:string, $view as xs:string, $column as xs:string, $permissions as item()#empty-sequence()
tde#get-view#2#$schema as xs:string, $view as xs:string#map:map
tde#node-data-extract#2#$documents as node()*, [$templates as element(tde:template)*]#map:map
tde#template-insert#4#$uri as xs:string, $root as node(), [$permissions as item()*], [$collections as xs:string*]#empty-sequence
tde#validate#2#$templates as element(tde:template)*, [$excludeTemplateURIs as xs:string*]#map:map
temporal#advance-lsqt#2#$temporal-collection as xs:string, [$lag as xs:unsignedInt]#xs:dateTime
temporal#axes#0##xs:string*
temporal#axis-create#3#$axis-name as xs:string, $start-range-index as cts:reference, $end-range-index as cts:reference#xs:unsignedLong
temporal#axis-get-end#1#$axis-name as xs:string#cts:reference
temporal#axis-get-start#1#$axis-name as xs:string#cts:reference
temporal#axis-remove#1#$axis-name as xs:string#empty-sequence()
temporal#collection-create#4#$collection-name as xs:string, $system-axis as xs:string, [$valid-axis as xs:string?], [$options as xs:string*]#xs:unsignedLong
temporal#collection-get-axis#2#$temporal-collection as xs:string, $axis as xs:string#xs:string*
temporal#collection-get-options#1#$temporal-collection as xs:string#xs:string*
temporal#collection-remove#1#$collection-name as xs:string#empty-sequence()
temporal#collection-set-options#2#$temporal-collection as xs:string, $options as xs:string*#empty-sequence()
temporal#collections#0##xs:string*
temporal#document-delete#3#$temporal-collection as xs:string, $uri as xs:string, [$options as (element()|map:map)?]#empty-sequence()
temporal#document-insert#4#$temporal-collection as xs:string, $uri as xs:string, $root as node(), [$options as (element()|map:map)?]#empty-sequence()
temporal#document-load#3#$temporal-collection as xs:string, $location as xs:string, [$options as (element()|map:map)?]#empty-sequence()
temporal#document-period#3#$temporal-collection as xs:string, $axis as xs:string, $root as node()#xs:dateTime*
temporal#document-protect#3#$temporal-collection as xs:string, $uri as xs:string, [$options as (element()|map:map)?]#empty-sequence()
temporal#document-wipe#2#$temporal-collection as xs:string, $uri as xs:string#empty-sequence()
temporal#get-lsqt#1#$temporal-collection as xs:string#xs:dateTime
temporal#get-lsqt-automation#1#$temporal-collection as xs:string#xs:boolean
temporal#get-lsqt-automation-lag#1#$temporal-collection as xs:string#xs:long
temporal#get-lsqt-automation-period#1#$temporal-collection as xs:string#xs:long
temporal#get-use-lsqt#1#$temporal-collection as xs:string#xs:boolean
temporal#node-delete#3#$temporal-collection as xs:string, $old as node(), [$temporal-doc-uri as xs:string]#empty-sequence()
temporal#node-insert-after#4#$temporal-collection as xs:string, $sibling as node(), $new as node(), [$temporal-doc-uri as xs:string]#empty-sequence()
temporal#node-insert-before#4#$temporal-collection as xs:string, $sibling as node(), $new as node(), [$temporal-doc-uri as xs:string]#empty-sequence()
temporal#node-insert-child#4#$temporal-collection as xs:string, $parent as node(), $new as node(), [$temporal-doc-uri as xs:string]#empty-sequence()
temporal#node-replace#4#$temporal-collection as xs:string, $old as node(), $new as node(), [$temporal-doc-uri as xs:string]#empty-sequence()
temporal#set-lsqt-automation#4#$temporal-collection as xs:string, $on as xs:boolean, [$period as xs:unsignedInt], [$lag as xs:unsignedInt]#empty-sequence()
temporal#set-use-lsqt#2#$temporal-collection as xs:string, $on as xs:boolean#empty-sequence()
temporal#statement-get-system-time#0##empty-sequence()
temporal#statement-set-document-version-uri#2#$document-uri as xs:string, $version-uri as xs:string#empty-sequence()
temporal#statement-set-system-time#1#$system-time as xs:dateTime#empty-sequence()
thsr#add-synonym#2#$entry as element(thsr:entry), $synonym as item()#empty-sequence()
thsr#expand#5#$query as cts:query, $entries as item()*, $new-weight as xs:double?, $min-weight as xs:double?, $filter as node()*#cts:query
thsr#insert#2#$uri as xs:string, $thsr as element(thsr:thesaurus)#empty-sequence()
thsr#load#2#$path as xs:string, $uri as xs:string#empty-sequence()
thsr#lookup#3#$uri as xs:string*, $term as xs:string, [$output-kind as xs:string]#item()*
thsr#query-lookup#3#$uri as xs:string*, $query as cts:query, [$output-kind as xs:string]#item()*
thsr#remove-entry#2#$uri as xs:string*, $entry as item()#empty-sequence()
thsr#remove-synonym#2#$entry as element(thsr:entry), $synonym as item()#empty-sequence()
thsr#remove-term#2#$uri as xs:string*, $term as xs:string#empty-sequence()
thsr#set-entry#2#$uri as xs:string, $entry as item()#empty-sequence()
tieredstorage#database-create-sub-database#3#$dbid as xs:unsignedLong, $database-name as xs:string, [$kind as xs:string]#empty-sequence()
tieredstorage#database-create-super-database#2#$database-id as xs:unsignedLong, $database-name as xs:string#empty-sequence()
tieredstorage#database-delete-sub-database#2#$database-id as xs:unsignedLong, $delete-dbid as xs:unsignedLong#empty-sequence()
tieredstorage#database-delete-super-database#2#$database-id as xs:unsignedLong, $delete-dbid as xs:unsignedLong#empty-sequence()
tieredstorage#database-partition-numbers#1#$database-id as xs:unsignedLong#xs:unsignedLong*
tieredstorage#database-partitions#1#$database-id as xs:unsignedLong#xs:string*
tieredstorage#forest-combine#7#$forest-ids as xs:unsignedLong*, $forest-name as xs:string, $host-id as xs:unsignedLong, [$data-directory as xs:string?], [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?], [$options as xs:string*]#empty-sequence()
tieredstorage#forest-migrate#6#$forest-ids as xs:unsignedLong*, [$new-host-id as xs:unsignedLong?], [$new-data-directory as xs:string?], [$new-large-data-directory as xs:string?], [$new-fast-data-directory as xs:string?], [$options as xs:string*]#empty-sequence()
tieredstorage#partition-delete#4#$database-id as xs:unsignedLong, $partition-name as xs:string, $delete-data as xs:boolean, [$options as xs:string*]#empty-sequence()
tieredstorage#partition-delete-query#2#$schema-database-id as xs:unsignedLong, $partition-number as xs:unsignedInt#empty-sequence()
tieredstorage#partition-forests#3#$database-id as xs:unsignedLong, $partition-name as xs:string, [$include-replicas as xs:boolean]#xs:unsignedLong*
tieredstorage#partition-get-exclusion-enabled#2#$schema-database-id as xs:unsignedLong, $partition-number as xs:unsignedInt#xs:boolean
tieredstorage#partition-get-query#2#$schema-database-id as xs:unsignedLong, $partition-number as xs:unsignedInt#cts:query?
tieredstorage#partition-migrate#7#$database-id as xs:unsignedLong, $partition-name as xs:string, $host-ids as xs:unsignedLong*, [$data-directory as xs:string?], [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?], [$options as xs:string*]#empty-sequence()
tieredstorage#partition-number-forests#2#$database-id as xs:unsignedLong, $partition-number as xs:unsignedLong#xs:unsignedLong*
tieredstorage#partition-queries#1#$schema-database-id as xs:unsignedLong#map:map
tieredstorage#partition-resize#8#$database-id as xs:unsignedLong, $partition-name as xs:string, $forests-per-host as xs:unsignedInt, $host-ids as xs:unsignedLong*, [$data-directory as xs:string?], [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?], [$options as xs:string*]#empty-sequence()
tieredstorage#partition-set-availability#3#$database-id as xs:unsignedLong, $partition-name as xs:string, $value as xs:string#empty-sequence()
tieredstorage#partition-set-exclusion-enabled#3#$schema-database-id as xs:unsignedLong, $partition-number as xs:unsignedInt, $safe-to-exclude as xs:boolean#empty-sequence()
tieredstorage#partition-set-query#3#$schema-database-id as xs:unsignedLong, $partition-number as xs:unsignedInt, $query as cts:query#empty-sequence()
tieredstorage#partition-set-updates-allowed#3#$database-id as xs:unsignedLong, $partition-name as xs:string, $value as xs:string#empty-sequence()
tieredstorage#partition-transfer#4#$partition-db-id as xs:unsignedLong, $partition-name as xs:string, $dst-db-id as xs:unsignedLong, [$options as xs:string*]#empty-sequence()
tieredstorage#query-partition-create#9#$database-id as xs:unsignedLong, $partition-name as xs:string, $partition-number as xs:unsignedInt?, $forests-per-host as xs:unsignedInt, $host-ids as xs:unsignedLong*, [$data-directory as xs:string?], [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?], [$options as xs:string*]#empty-sequence()
tieredstorage#range-partition-create#10#$database-id as xs:unsignedLong, $partition-name as xs:string, $lower as xs:anyAtomicType?, $upper as xs:anyAtomicType?, $forests-per-host as xs:unsignedInt, $host-ids as xs:unsignedLong*, [$data-directory as xs:string?], [$large-data-directory as xs:string?], [$fast-data-directory as xs:string?], [$options as xs:string*]#empty-sequence()
trgr#any-custom-property-content#0##element(trgr:any-custom-property-content)
trgr#any-property-content#0##element(trgr:any-property-content)
trgr#collection-scope#1#$uri as xs:string#element(trgr:collection-scope)
trgr#create-trigger#8#$trigger-name as xs:string, $description as xs:string?, $event as element(), $module as element(trgr:module), $enabled as xs:boolean, $permissions as item()*, [$recursive as xs:boolean?], [$task-priority as xs:string]#xs:unsignedLong
trgr#directory-scope#2#$uri as xs:string, $depth as xs:string#element(trgr:directory-scope)
trgr#document-content#1#$update-kind as xs:string#element(trgr:document-content)
trgr#document-scope#1#$uri as xs:string#element(trgr:document-scope)
trgr#get-trigger#1#$trigger-name as xs:string#element(trgr:trigger)
trgr#get-trigger-by-id#1#$trigger-id as xs:unsignedLong#element(trgr:trigger)
trgr#get-unique-trigger-id#0##xs:unsignedLong
trgr#post-commit#0##element(trgr:when)
trgr#pre-commit#0##element(trgr:when)
trgr#property-content#1#$property-name as xs:QName#element(trgr:property-content)
trgr#remove-trigger#1#$trigger-name as xs:string#empty-sequence()
trgr#trigger-add-permissions#2#$trigger-name as xs:string, $permissions as item()*#empty-sequence()
trgr#trigger-data-event#3#$scope as element(), $content as element(), $when as element(trgr:when)#element(trgr:data-event)
trgr#trigger-database-online-event#1#$user-name as xs:string#element(trgr:database-online-event)
trgr#trigger-disable#1#$trigger-name as xs:string#empty-sequence()
trgr#trigger-enable#1#$trigger-name as xs:string#empty-sequence()
trgr#trigger-get-permissions#1#$trigger-name as xs:string#element(sec:permission)*
trgr#trigger-module#3#$database as xs:anyAtomicType, $root as xs:string, $path as xs:string#element(trgr:module)
trgr#trigger-remove-permissions#2#$trigger-name as xs:string, $permissions as item()*#empty-sequence()
trgr#trigger-set-description#2#$trigger-name as xs:string, $description as xs:string#empty-sequence()
trgr#trigger-set-event#2#$trigger-name as xs:string, $event as element()#empty-sequence()
trgr#trigger-set-module#2#$trigger-name as xs:string, $module as element(trgr:module)#empty-sequence()
trgr#trigger-set-name#2#$trigger-name as xs:string, $new-trigger-name as xs:string#empty-sequence()
trgr#trigger-set-permissions#2#$trigger-name as xs:string, $permissions as item()*#empty-sequence()
trgr#trigger-set-recursive#2#$trigger-name as xs:string, $recursive as xs:boolean#empty-sequence()
trgr#trigger-set-task-priority#2#$trigger-name as xs:string, $task-priority as xs:string#empty-sequence()
trgr#triggers-change-modules-database#2#$old-db as xs:unsignedLong, $new-db as xs:unsignedLong#empty-sequence()
trgr#triggers-collection#0##xs:string
trgr#triggers-namespace#0##xs:string
trgr#triggers-uri#0##xs:string
trgr#validate-content#0##element())
trgr#validate-data-event#1#$event as element(trgr:data-event)#empty()
trgr#validate-database-online-event#1#$database-online-event as element(trgr:database-online-event)#empty()
trgr#validate-module#1#$module as element(trgr:module)#empty()
trgr#validate-scope#0##element())
trgr#validate-trigger-name#1#$trigger-name as xs:string#empty()
trgr#validate-when#0##element())
view#add-column#3#$schema-name as xs:string, $view-name as xs:string, $column as element(view:column)#empty-sequence()
view#add-field#3#$schema-name as xs:string, $view-name as xs:string, $field as element(view:field)#empty-sequence()
view#add-permissions#3#$schema-name as xs:string, $view-name as xs:string, $permissions as item()*#empty-sequence()
view#collection#0##xs:string
view#collection-view-scope#1#$collection as xs:string#element(*, view:view-scope)
view#column#2#$name as xs:string, $range-index as cts:reference#element(view:column)
view#columns#2#$schema-name as xs:string, $view-name as xs:string#element(view:column)*
view#create#6#$schema-name as xs:string, $name as xs:string, $scope as element(*,view:view-scope), $columns as element(view:column)*, $fields as element(view:field)*, $permissions as item()*#xs:unsignedLong
view#element-view-scope#1#$localname as xs:QName#element(*, view:view-scope)
view#field#1#$name as xs:string#element(view:field)
view#fields#2#$schema-name as xs:string, $view-name as xs:string#element(view:field)*
view#get#2#$schema-name as xs:string, $view-name as xs:string#element(view:view)
view#get-bindings#2#$schema-name as xs:string, $view-name as xs:string#map:map
view#get-by-id#1#$view-id as xs:unsignedLong#element(view:view)
view#get-column#3#$schema-name as xs:string, $view-name as xs:string, $column-name as xs:string#element(view:column)
view#get-field#3#$schema-name as xs:string, $view-name as xs:string, $field-name as xs:string#element(view:field)
view#get-ordered#2#$schema-name as xs:string, $view-name as xs:string#xs:boolean
view#get-permissions#2#$schema-name as xs:string, $view-name as xs:string#element(sec:permission)*
view#get-view-scope#2#$schema-name as xs:string, $view-name as xs:string#element(*, view:view-scope)
view#remove#2#$schema-name as xs:string, $view-name as xs:string#empty-sequence()
view#remove-by-id#1#$view-id as xs:unsignedLong#empty-sequence()
view#remove-column#3#$schema-name as xs:string, $view-name as xs:string, $column-name as xs:string#empty-sequence()
view#remove-field#3#$schema-name as xs:string, $view-name as xs:string, $field-name as xs:string#empty-sequence()
view#remove-permissions#3#$schema-name as xs:string, $view-name as xs:string, $permissions as item()*#empty-sequence()
view#schema-add-permissions#2#$schema-name as xs:string, $permissions as item()*#empty-sequence()
view#schema-create#2#$schema-name as xs:string, $permissions as item()*#xs:unsignedLong
view#schema-get#1#$schema-name as xs:string#element(view:schema)
view#schema-get-permissions#1#$schema-name as xs:string#element(sec:permission)*
view#schema-remove#1#$schema-name as xs:string#empty-sequence()
view#schema-remove-permissions#2#$schema-name as xs:string, $permissions as item()*#empty-sequence()
view#schema-set-permissions#2#$schema-name as xs:string, $permissions as item()*#empty-sequence()
view#schemas#0##element(view:schema)*
view#set-columns#3#$schema-name as xs:string, $view-name as xs:string, $columns as element(view:column)*#empty-sequence()
view#set-fields#3#$schema-name as xs:string, $view-name as xs:string, $fields as element(view:field)*#empty-sequence()
view#set-name#3#$schema-name as xs:string, $view-name as xs:string, $new-name as xs:string#empty-sequence()
view#set-ordered#3#$schema-name as xs:string, $view-name as xs:string, $ordered as xs:boolean#empty-sequence()
view#set-permissions#3#$schema-name as xs:string, $view-name as xs:string, $permissions as item()*#empty-sequence()
view#set-view-scope#3#$schema-name as xs:string, $view-name as xs:string, $scope as element(*,view:view-scope)#empty-sequence()
view#views#1#$schema-name as xs:string#element(view:view)*
xdmp#QName-from-key#1#$key as xs:string#xs:QName
xdmp#access#2#$uri as xs:string, $action as xs:string#xs:boolean
xdmp#add-response-header#2#$name as xs:string, $value as xs:string#empty-sequence()
xdmp#add64#2#$x as xs:unsignedLong, $y as xs:unsignedLong#xs:unsignedLong
xdmp#amp#4#$namespace as xs:string, $localname as xs:string, $module-uri as xs:string, $database as xs:unsignedLong#xs:unsignedLong
xdmp#amp-roles#4#$namespace-uri as xs:string, $localname as xs:string, $document-uri as xs:string, $database-id as xs:unsignedLong#xs:unsignedLong*
xdmp#and64#2#$x as xs:unsignedLong, $y as xs:unsignedLong#xs:unsignedLong
xdmp#annotation#2#$function as function(*), $name as xs:QName#item()*
xdmp#apply#2#$function as xdmp:function, [$params-1-to-N as item()*]#item()*
xdmp#architecture#0##xs:string
xdmp#atomizable#1#[$item as item()]#xs:boolean
xdmp#aws-region#0##string?
xdmp#aws-services-domain#0##string?
xdmp#aws-services-partition#0##string?
xdmp#azure-environment#0##string?
xdmp#azure-region#0##string?
xdmp#base64-decode#1#$encoded as xs:string#xs:string
xdmp#base64-encode#1#$plaintext as xs:string#xs:string
xdmp#binary-decode#2#$encoded as node(), $encoding-name as xs:string#xs:string
xdmp#binary-is-external#1#$source as binary()#xs:boolean
xdmp#binary-is-large#1#$source as binary()#xs:boolean
xdmp#binary-is-small#1#$source as binary()#xs:boolean
xdmp#binary-size#1#[$source as binary()?]#xs:unsignedLong?
xdmp#binary-to-integer#1#$binary as xs:string#xs:integer
xdmp#bootstrap-hosts#0##xs:unsignedLong*
xdmp#cache-status#1#[$host-id as xs:unsignedLong*]#element(cache-status)*
xdmp#caller-dialect#0##xs:string?
xdmp#can-grant-roles#1#$roles as xs:string*#empty-sequence()
xdmp#castable-as#3#$namespace-uri as xs:string, $local-name as xs:string, $item as item()?#xs:boolean
xdmp#cluster#1#[$name as xs:string]#xs:unsignedLong
xdmp#cluster-effective-version#0##xs:unsingedLong
xdmp#cluster-name#1#[$id as xs:unsignedLong]#xs:string
xdmp#cluster-version-at-least#1#$version as xs:unsignedInt#xs:boolean
xdmp#collation-canonical-uri#1#$collation-uri as xs:string#xs:string
xdmp#collation-locales#0##xs:string*
xdmp#collection-delete#1#$uri as xs:string#empty-sequence()
xdmp#collection-id#1#$uri as xs:string#xs:unsignedLong
xdmp#collection-locks#1#[$uri as xs:string*]#document-node()*
xdmp#collection-properties#1#[$uri as xs:string*]#document-node()*
xdmp#collections#0##xs:unsignedLong*
xdmp#commit#0##empty-sequence()
xdmp#configuration-timestamp#1#[$name as xs:string]#xs:unsignedLong?
xdmp#credential#1#$id as xs:unsignedLong#element(sec:credential)
xdmp#credential-id#1#$credential-name as xs:string#xs:unsignedLong
xdmp#credentials#1#$uri as [xs:string?]#element(sec:credential)*
xdmp#crypt#2#$password as xs:string, $salt as xs:string#xs:string
xdmp#crypt2#1#$password as xs:string#xs:string
xdmp#current-last#0##xs:integer
xdmp#current-position#0##xs:integer
xdmp#database#1#[$name as xs:string]#xs:unsignedLong
xdmp#database-assignment-policy#1#$database-id as xs:unsignedLong#element(db:assignment-policy)
xdmp#database-backup#7#$forestIDs as xs:unsignedLong*, $pathname as xs:string, [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?], [$backup-kek-id as xs:string?], [$backup-passphrase as xs:string?]#xs:unsignedLong
xdmp#database-backup-cancel#1#$jobid as xs:unsignedLong#xs:boolean
xdmp#database-backup-purge#3#$dir as xs:string, $keep-num-backups as xs:unsignedInt, [$incremental-dir as xs:string]#empty-sequence()
xdmp#database-backup-status#2#$jobid as xs:unsignedLong*, [$hostid as xs:unsignedLong*]#element()*
xdmp#database-backup-validate#6#$forestIDs as xs:unsignedLong*, $pathname as xs:string, [$include-replicas as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element()
xdmp#database-directory-creation#1#$database-id as xs:unsignedLong#xs:string
xdmp#database-encryption-at-rest#1#$database-id as xs:unsignedLong#xs:string
xdmp#database-encryption-key-id#1#$database-id as xs:unsignedLong#xs:string
xdmp#database-forests#2#$database-id as xs:unsignedLong, [$include-replicas as xs:boolean]#xs:unsignedLong*
xdmp#database-global-nonblocking-timestamp#1#$database-id as xs:unsignedLong#xs:unsignedLong
xdmp#database-incremental-backup#8#$forestIDs as xs:unsignedLong*, $pathname as xs:string, [$incremental-dir as xs:string?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?], [$backup-kek-id as xs:string?], [$backup-passphrase as xs:string?]#xs:unsignedLong
xdmp#database-incremental-backup-validate#7#$forestIDs as xs:unsignedLong*, $pathname as xs:string, [$include-replicas as xs:boolean?], [$incremental-dir as xs:string?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$lag-limit as xs:unsignedLong?]#element()
xdmp#database-is-forest-retired#2#$database-id as xs:unsignedLong, $forest-id as xs:unsignedLong#xs:boolean
xdmp#database-is-rebalancer-enable#1#$database-id as xs:unsignedLong#xs:boolean
xdmp#database-is-replica#1#$database-id as xs:unsignedLong#xs:boolean
xdmp#database-journal-archive-purge#3#$dir as xs:string, [$incremental-dir as xs:string], [$journal-archive-path as xs:string]#empty-sequence()
xdmp#database-name#1#$database-id as xs:unsignedLong#xs:string
xdmp#database-node-query-rolesets#2#$nodes as node()*, [$options as xs:string*]#element(sec:query-rolesets)*
xdmp#database-nonblocking-timestamp#1#$database-id as xs:unsignedLong#xs:unsignedLong
xdmp#database-path-namespaces#1#[$dbid as xs:unsignedLong]#Element()
xdmp#database-restore#9#$forestIDs as xs:unsignedLong*, $pathname as xs:string, [$restoreToTime as xs:dateTime?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$incremental-backup as xs:boolean?], [$incremental-backup-path as xs:string?], [$backup-passphrase as xs:string?], [$forest-map as map:map?]#xs:unsignedLong
xdmp#database-restore-cancel#1#$jobid as xs:unsignedLong#xs:boolean
xdmp#database-restore-status#1#$jobid as xs:unsignedLong#element()
xdmp#database-restore-validate#10#$forestIDs as xs:unsignedLong*, $pathname as xs:string, [$restoreToTime as xs:dateTime?], [$include-replicas as xs:boolean?], [$journal-archiving as xs:boolean?], [$journal-archive-path as xs:string?], [$incremental-backup as xs:boolean?], [$incremental-backup-path as xs:string?], [$backup-passphrase as xs:string?], [$forest-map as map:map?]#element()
xdmp#databases#0##xs:unsignedLong*
xdmp#dayname-from-date#1#$arg as xs:date?#xs:string?
xdmp#decode-from-NCName#1#$name as xs:string#xs:string
xdmp#default-collections#1#[$uri as xs:string]#xs:string*
xdmp#default-permissions#2#[$uri as xs:string], [$output-kind as xs:string]#element()*
xdmp#describe#3#$item as item()*, [$max-sequence-length as xs:unsignedInt?], [$max-item-length as xs:unsignedInt?]#xs:string
xdmp#diacritic-less#1#$string as xs:string#xs:string
xdmp#directory#2#$uri as xs:string*, [$depth as xs:string?]#document-node()*
xdmp#directory-create#6#$uri as xs:string, [$permissions as element(sec:permission)*], [$collections as xs:string*], [$quality as xs:int?], [$forest-ids as xs:unsignedLong*], [$options as (element()|map:map)?]#empty-sequence()
xdmp#directory-delete#1#$uri as xs:string#empty-sequence()
xdmp#directory-locks#2#$uri as xs:string*, [$depth as xs:string?]#document-node()*
xdmp#directory-properties#2#$uri as xs:string*, [$depth as xs:string?]#document-node()*
xdmp#document-add-collections#2#$uri as xs:string, $collections as xs:string*#empty-sequence()
xdmp#document-add-permissions#2#$uri as xs:string, $permissions as element(sec:permission)*#empty-sequence()
xdmp#document-add-properties#2#$uri as xs:string, $props as element()*#empty-sequence()
xdmp#document-assign#3#$uri as xs:string, $forest-count as xs:positiveInteger, [$assignment-policy as xs:string]#xs:positiveInteger
xdmp#document-delete#2#$uri as xs:string, [$options as (element()|map:map)?]#empty-sequence()
xdmp#document-filter#2#$doc as node(), [$options as (element()|map:map)?]#node()
xdmp#document-forest#2#$uri as xs:string, [$forest-ids as xs:unsignedLong*]#xs:unsignedLong?
xdmp#document-get#2#$location as xs:string, [$options as (element()|map:map)?]#node()*
xdmp#document-get-collections#1#$uri as xs:string#xs:string*
xdmp#document-get-metadata#1#$uri as xs:string#map:map?
xdmp#document-get-metadata-value#2#$uri as xs:string, $keyName as xs:string#xs:string?
xdmp#document-get-permissions#2#$uri as xs:string, [$output-kind as xs:string]#item()*
xdmp#document-get-properties#2#$uri as xs:string, $property as xs:QName#element()*
xdmp#document-get-quality#1#$uri as xs:string#xs:integer?
xdmp#document-insert#3#$uri as xs:string, $root as node(), [$options as (element()|map:map)?]#empty-sequence()
xdmp#document-load#2#$location as xs:string, [$options as (element()|map:map)?]#empty-sequence()
xdmp#document-locks#1#[$uri as xs:string*]#document-node()*
xdmp#document-partition-assign#2#$root as node(), [$partition-queries as map:map]#xs:unsignedInt?
xdmp#document-properties#1#[$uri as xs:string*]#document-node()*
xdmp#document-put-metadata#2#$uri as xs:string, $metadata as map:map#empty-sequence()
xdmp#document-remove-collections#2#$uri as xs:string, $collections as xs:string*#empty-sequence()
xdmp#document-remove-metadata#2#$uri as xs:string, $metadata as xs:string*#empty-sequence()
xdmp#document-remove-permissions#2#$uri as xs:string, $permissions as element(sec:permission)*#empty-sequence()
xdmp#document-remove-properties#2#$uri as xs:string, $property-names as xs:QName*#empty-sequence()
xdmp#document-set-collections#2#$uri as xs:string, $collections as xs:string*#empty-sequence()
xdmp#document-set-metadata#2#$uri as xs:string, $metadata as map:map#empty-sequence()
xdmp#document-set-permissions#2#$uri as xs:string, $permissions as element(sec:permission)*#empty-sequence()
xdmp#document-set-properties#2#$uri as xs:string, $props as element()*#empty-sequence()
xdmp#document-set-property#2#$uri as xs:string, $prop as element()#empty-sequence()
xdmp#document-set-quality#2#$uri as xs:string, $quality as xs:integer#empty-sequence()
xdmp#document-timestamp#1#$uri as xs:string#xs:integer?
xdmp#eager#1#$arg as item()*#item()*
xdmp#effective-version#0##xs:unsignedLong
xdmp#elapsed-time#0##xs:dayTimeDuration
xdmp#element-content-type#1#$element as element()#xs:string
xdmp#email#2#$message as element(), [$options as (element()|map:map)?]#empty-sequence()
xdmp#encode-for-NCName#1#$name as xs:string#xs:string
xdmp#encoding-language-detect#1#$document as node()#element()*
xdmp#estimate#2#$expression as item()*, [$maximum as xs:double?]#xs:integer
xdmp#eval#3#$xquery as xs:string, [$vars as item()* | map:map], [$options as (element()|map:map)?]#item()*
xdmp#eval-in#5#$xquery as xs:string, $ID as xs:unsignedLong*, [$vars as item()*], [$modules as xs:unsignedLong?], [$root as xs:string?]#item()*
xdmp#excel-convert#3#$doc as node(), $filename as xs:string, [$options as (element()|map:map)?]#node()*
xdmp#exists#1#$expression as item()*#xs:boolean
xdmp#external-binary#3#$path as xs:string, [$starting-location as xs:double], [$length as xs:double]#binary()
xdmp#external-binary-path#1#$source as binary()#xs:string?
xdmp#external-security#1#$external-security as xs:string#xs:unsignedLong
xdmp#filesystem-directory#1#$pathname as xs:string#element(dir:directory)
xdmp#filesystem-directory-create#2#$pathname as xs:string, [$options as element()?|map:map?]#empty-sequence()
xdmp#filesystem-directory-delete#1#$pathname as xs:string#empty-sequence()
xdmp#filesystem-file#1#$pathname as xs:string#xs:string
xdmp#filesystem-file-encryption-status#1#$pathname as xs:string#element(file-encryption-status)?
xdmp#filesystem-file-exists#2#$pathname as xs:string, [$host as xs:unsignedLong?]#xs:boolean
xdmp#filesystem-file-get-time#1#$pathname as xs:string#xs:dateTime*
xdmp#filesystem-file-length#1#$pathname as xs:string#xs:unsignedLong?
xdmp#filesystem-file-set-time#3#$pathname as xs:string, $actime as xs:string, $modtime as xs:string#empty-sequence()
xdmp#filesystem-filepath#1#$pathname as xs:string#xs:string
xdmp#foreign-cluster-status#2#$host-id as xs:unsignedLong, $foreign-cluster-id as xs:unsignedLong#element(foreign-cluster-status)
xdmp#foreign-clusters#0##xs:unsignedLong*
xdmp#forest#1#$name as xs:string#xs:unsignedLong
xdmp#forest-backup#2#$forestID as xs:unsignedLong, $pathname as xs:string#empty-sequence()
xdmp#forest-backup-status#1#$forestid as xs:unsignedLong*#element()*
xdmp#forest-clear#1#$forestIDs as xs:unsignedLong*#empty-sequence()
xdmp#forest-counts#3#$forest-id as xs:unsignedLong*, [$show-elements as xs:string*], [$options as xs:string*]#element(forest-counts)*
xdmp#forest-database-replication-resume#2#$forest-ID as xs:unsignedLong*, $forceBulkReplication as xs:boolean#empty-sequence()
xdmp#forest-database-replication-suspend#1#$forest-ID as xs:unsignedLong*#empty-sequence()
xdmp#forest-databases#1#$forest as xs:unsignedLong#xs:unsignedLong?
xdmp#forest-failover-info#1#$id as xs:unsignedLong#xs:unsignedLong
xdmp#forest-host#1#$id as xs:unsignedLong#xs:unsignedLong
xdmp#forest-name#1#$forest-id as xs:unsignedLong#xs:string
xdmp#forest-online#4#$forestID as xs:unsignedLong, [$timestamp as xs:unsignedLong], [$isReplica as xs:boolean], [$syncingOk as xs:boolean]#xs:boolean
xdmp#forest-open-replica#1#$forestIDs as xs:unsignedLong*#xs:unsignedLong*
xdmp#forest-restart#1#$forestIDs as xs:unsignedLong*#empty-sequence()
xdmp#forest-restore#2#$forestID as xs:unsignedLong, $pathname as xs:string#empty-sequence()
xdmp#forest-rollback#2#$forestIDs as xs:unsignedLong*, $timestamp as xs:unsignedLong#empty-sequence()
xdmp#forest-state#1#$forestID as xs:unsignedLong#xs:string*
xdmp#forest-status#1#$forest-id as xs:unsignedLong*#element(forest-status)*
xdmp#forest-updates-allowed#1#$forest-id as xs:unsignedLong#xs:string
xdmp#forest-validate-replica-index#2#$forest-IDs as xs:unsignedLong*, $options as xs:string*#empty-sequence()
xdmp#forests#0##xs:unsignedLong*
xdmp#format-number#8#$value as xs:numeric*, [$picture as xs:string?], [$language as xs:string?], [$letter-value as xs:string?], [$ordchar as xs:string?], [$zero-padding as xs:string?], [$grouping-separator as xs:string?], [$grouping-size as xs:integer?]#xs:string
xdmp#from-json#1#$arg as node()#item()*
xdmp#from-json-string#1#$arg as xs:string#item()*
xdmp#function#2#$function as xs:QName?, [$module-path as xs:string?]#xdmp:function
xdmp#function-module#1#$function as xdmp:function#xs:string
xdmp#function-name#1#$function as xdmp:function#xs:QName?
xdmp#function-parameter-name#2#$function as function(*), $position as xs:integer#xs:QName
xdmp#function-parameter-type#2#$function as function(*), $position as xs:integer#xs:string
xdmp#function-return-type#1#$function as function(*)#xs:string
xdmp#function-signature#1#$function as function(*)#xs:string?
xdmp#functions#0##function(*)*
xdmp#get#3#$path as xs:string, [$default-namespace as xs:string?], [$options as xs:string*]#node()?
xdmp#get-current-roles#0##xs:unsignedLong*
xdmp#get-current-user#0##xs:string?
xdmp#get-current-userid#0##xs:unsignedLong
xdmp#get-invoked-path#0##xs:string
xdmp#get-original-url#0##xs:string
xdmp#get-orphaned-binaries#1#$id as xs:unsignedLong#xs:unsignedLong*
xdmp#get-request-body#1#[$format as xs:string?]#item()*
xdmp#get-request-client-address#0##xs:string?
xdmp#get-request-client-certificate#0##xs:string?
xdmp#get-request-error-format#0##xs:string
xdmp#get-request-field#2#$name as xs:string, [$default as xs:string?]#item()*
xdmp#get-request-field-content-type#1#$field-name as xs:string#xs:string*
xdmp#get-request-field-filename#1#$field-name as xs:string#xs:string*
xdmp#get-request-field-names#0##xs:string*
xdmp#get-request-header#2#$name as xs:string, [$default as xs:string?]#xs:string*
xdmp#get-request-header-names#0##xs:string*
xdmp#get-request-method#0##xs:string
xdmp#get-request-path#0##xs:string
xdmp#get-request-port#0##xs:integer?
xdmp#get-request-protocol#0##xs:string?
xdmp#get-request-url#0##xs:string
xdmp#get-request-user#0##xs:unsignedLong
xdmp#get-request-username#0##xs:string
xdmp#get-response-code#0##item()*
xdmp#get-response-encoding#0##xs:string
xdmp#get-server-field#2#$name as xs:string, [$default as item()*]#item()*
xdmp#get-server-field-names#0##xs:string*
xdmp#get-session-field#2#$name as xs:string, [$default as item()*]#item()*
xdmp#get-session-field-names#0##xs:string*
xdmp#get-transaction-mode#0##xs:string
xdmp#get-url-rewriter-path#0##xs:string
xdmp#group#1#[$name as xs:string]#xs:unsignedLong
xdmp#group-get-audit-event-type-enabled#2#$group-id as xs:unsignedLong, $event-type as xs:string#xs:boolean
xdmp#group-hosts#1#[$groupID as xs:unsignedLong]#xs:unsignedLong*
xdmp#group-name#1#[$groupID as xs:unsignedLong]#xs:string
xdmp#group-port-servers#1#[$groupID as xs:unsignedLong]#xs:unsignedLong*
xdmp#group-servers#1#[$groupID as xs:unsignedLong]#xs:unsignedLong*
xdmp#group-task-server#1#[$groupID as xs:unsignedLong]#xs:unsignedLong*
xdmp#groups#0##xs:unsignedLong*
xdmp#gss-server-negotiate#1#$inputToken as xs:string#element()
xdmp#gunzip#2#$gzipnode as binary(), $options as (element()|map:map)?#node()+
xdmp#gzip#1#$node as node()#binary()
xdmp#has-privilege#2#$privileges as xs:string*, $kind as xs:string#xs:boolean
xdmp#hash32#1#$string as xs:string#xs:unsignedInt
xdmp#hash64#1#$string as xs:string#xs:unsignedLong
xdmp#hex-to-integer#1#$hex as xs:string#xs:integer
xdmp#hmac-md5#3#$secretkey as item(), $message as item(), [$encoding as xs:string]#xs:string
xdmp#hmac-sha1#3#$secretkey as item(), $message as item(), [$encoding as xs:string]#xs:string
xdmp#hmac-sha256#3#$secretkey as item(), $message as item(), [$encoding as xs:string]#xs:string
xdmp#hmac-sha512#3#$secretkey as item(), $message as item(), [$encoding as xs:string]#xs:string
xdmp#host#1#[$name as xs:string]#xs:unsignedLong
xdmp#host-forests#1#$ID as xs:unsignedLong#xs:unsignedLong*
xdmp#host-get-ssl-fips-enabled#1#$host-id as xs:unsignedLong*#xs:boolean*
xdmp#host-group#1#[$ID as xs:unsignedLong]#xs:unsignedLong
xdmp#host-mode#0##xs:boolean
xdmp#host-mode-description#1#[$ID as xs:unsignedLong]#xs:boolean
xdmp#host-name#1#[$ID as xs:unsignedLong]#xs:string
xdmp#host-status#1#$host-id as xs:unsignedLong*#element(host-status)*
xdmp#hosts#0##xs:unsignedLong*
xdmp#http-delete#2#$uri as xs:string, [$options as (element()|map:map)?]#item()+
xdmp#http-get#2#$uri as xs:string, [$options as (element()|map:map)?]#item()+
xdmp#http-head#2#$uri as xs:string, [$options as (element()|map:map)?]#item()+
xdmp#http-options#2#$uri as xs:string, [$options as (element()|map:map)?]#item()+
xdmp#http-post#3#$uri as xs:string, [$options as (element()|map:map)?], [$data as node()?]#item()+
xdmp#http-put#3#$uri as xs:string, [$options as (element()|map:map)?], [$data as node()?]#item()+
xdmp#initcap#1#$string as xs:string?#xs:string?
xdmp#integer-to-binary#1#$val as xs:integer#xs:string
xdmp#integer-to-hex#1#$val as xs:integer#xs:string
xdmp#integer-to-octal#1#$val as xs:integer#xs:string
xdmp#invoke#3#$path as xs:string, [$vars as item()* | map:map], [$options as (element()|map:map)?]#item()*
xdmp#invoke-function#2#$func as function(), [$options as (element()|map:map)?]#item()*
xdmp#invoke-in#5#$uri as xs:string, $ID as xs:unsignedLong*, [$vars as item()*], [$modules as xs:unsignedLong?], [$root as xs:string?]#item()*
xdmp#is-whitespace-node#1#[$text as node()]#xs:boolean
xdmp#javascript-eval#3#$javascript as xs:string, [$vars as item()* | map:map], [$options as (node()? | map:map)?]#item()*
xdmp#json-pointer#2#$node as node(), $path as xs:string#node()?
xdmp#json-validate#3#$node as node(), $schema as xs:string, $options as xs:string*#node()
xdmp#json-validate-node#3#$node as node(), $schema as node(), $options as xs:string*#node()
xdmp#key-from-QName#1#$name as xs:QName#xs:string
xdmp#keystore-export#2#$passphrase as xs:string, $filepath as xs:string#xs:boolean
xdmp#keystore-import#2#$passphrase as xs:string, $filepath as xs:string#xs:boolean
xdmp#keystore-set-current-host#1#[$hostname as xs:string]#xs:boolean
xdmp#keystore-synchronize#1#[$hostid as xs:unsignedLong*]#empty-sequence()
xdmp#keystore-validate-exported#2#$passphrase as xs:string, $filepath as xs:string#element(keystore-export)
xdmp#lazy#1#$arg as item()*#item()*
xdmp#ldap-lookup#2#$DN as xs:string, [$options as (element()|map:map)?]#element()*
xdmp#ldap-search#2#$query as xs:string, [$options as (element()|map:map)?]#element()*
xdmp#load#8#$path as xs:string, [$uri as xs:string?], [$permissions as element(sec:permission)*], [$collections as xs:string*], [$quality as xs:int?], [$default-namespace as xs:string?], [$options as xs:string*], [$forest-ids as xs:unsignedLong*]#empty-sequence()
xdmp#lock-acquire#5#$uri as xs:string, [$scope as xs:string?], [$depth as xs:string?], [$owner as item()*], [$timeout as xs:unsignedLong?]#empty-sequence()
xdmp#lock-for-update#1#$uri as xs:string#empty-sequence()
xdmp#lock-release#1#$uri as xs:string#empty-sequence()
xdmp#log#2#$msg as item()*, [$level as xs:string?]#empty-sequence()
xdmp#log-level#0##xs:string
xdmp#login#4#$name as xs:string, [$password as xs:string?], [$set-session as xs:boolean?], [$role-names as xs:string*]#xs:boolean
xdmp#logout#0##empty-sequence()
xdmp#lshift64#2#$x as xs:unsignedLong, $y as xs:integer#xs:unsignedLong
xdmp#md5#2#$data as item(), [$encoding as xs:string]#xs:string
xdmp#merge#1#[$options as (element()|map:map)?]#empty-sequence()
xdmp#merge-cancel#2#$forest-ID as xs:unsignedLong, $merge-ID as xs:unsignedLong#empty-sequence()
xdmp#merging#0##xs:unsignedLong*
xdmp#mimetypes#0##element(mt:mimetype)*
xdmp#modules-database#0##xs:unsignedLong
xdmp#modules-root#0##xs:string
xdmp#month-name-from-date#1#$arg as xs:date?#xs:string?
xdmp#mul64#2#$x as xs:unsignedLong, $y as xs:unsignedLong#xs:unsignedLong
xdmp#multipart-decode#3#$separator as xs:string, $data as binary(), [$options as element()]#node()*
xdmp#multipart-encode#3#$separator as xs:string, $manifest as element(), $content as node()*#binary()
xdmp#node-collections#1#$node as node()#xs:string*
xdmp#node-database#1#$node as node()#xs:unsignedLong?
xdmp#node-delete#1#$old as node()#empty-sequence()
xdmp#node-insert-after#2#$sibling as node(), $new as node()#empty-sequence()
xdmp#node-insert-before#2#$sibling as node(), $new as node()#empty-sequence()
xdmp#node-insert-child#2#$parent as node(), $new as node()#empty-sequence()
xdmp#node-kind#1#$node as node()#xs:string
xdmp#node-metadata#1#$node as node()#map:map?
xdmp#node-metadata-value#2#$node as node(), $keyName as xs:string#xs:string?
xdmp#node-permissions#2#$node as node(), [$output-kind as xs:string]#item()*
xdmp#node-query-rolesets#4#$uri as xs:string, $root as node(), [$insert-options as (element()|map:map)?], [$options as xs:string*]#element(sec:query-rolesets)*
xdmp#node-replace#2#$old as node(), $new as node()#empty-sequence()
xdmp#node-uri#1#$node as node()#xs:string?
xdmp#not64#1#$x as xs:unsignedLong#xs:unsignedLong
xdmp#octal-to-integer#1#$octal as xs:string#xs:integer
xdmp#or64#2#$x as xs:unsignedLong, $y as xs:unsignedLong#xs:unsignedLong
xdmp#parse-dateTime#5#$picture as xs:string, $value as xs:string, [$language as xs:string?], [$calendar as xs:string?], [$country as xs:string?]#xs:dateTime
xdmp#parse-yymmdd#5#$picture as xs:string, $value as xs:string, [$language as xs:string?], [$calendar as xs:string?], [$country as xs:string?]#xs:dateTime
xdmp#partition-forests#1#$partition-number as xs:unsignedInt#xs:unsignedLong*
xdmp#passive-has-privilege#2#$privileges as xs:string*, $kind as xs:string#xs:boolean
xdmp#passive-security-assert#2#$privileges as xs:string*, $kind as xs:string#empty-sequence()
xdmp#path#2#$node as node(), [$include-document as xs:boolean?]#xs:string
xdmp#pdf-convert#3#$doc as node(), $filename as xs:string, [$options as (element()|map:map)?]#node()*
xdmp#permission#3#$role as xs:string, $capability as xs:string, [$output-kind as xs:string]#element()|map:map
xdmp#plan#2#$expression as item()*, [$maximum as xs:double?]#element()
xdmp#plannable#1#$expression as item()*#xs:boolean
xdmp#platform#0##xs:string
xdmp#position#3#$test as xs:string?, $target as xs:string?, [$collation as xs:string?]#xs:integer?
xdmp#powerpoint-convert#3#$doc as node(), $filename as xs:string, [$options as (element()|map:map)?]#node()*
xdmp#pretty-print#1#$xquery as xs:string#xs:string
xdmp#privilege#2#$action as xs:string, $kind as xs:string#xs:unsignedLong
xdmp#privilege-kind#1#$id as xs:unsignedLong#xs:string
xdmp#privilege-name#1#$id as xs:unsignedLong#xs:string
xdmp#privilege-roles#2#$action as xs:string, $kind as xs:string#xs:unsignedLong*
xdmp#privileges#0##xs:unsignedLong*
xdmp#product-edition#0##xs:string
xdmp#product-environment#0##xs:string
xdmp#quarter-from-date#1#$arg as xs:date?#xs:integer?
xdmp#query-meters#0##element()
xdmp#query-partitions#1#$query as cts:query#xs:unsigned*
xdmp#query-trace#1#$enabled as xs:boolean#empty-sequence()
xdmp#quote#2#$arg as item()*, [$options as (element()|map:map)?]#xs:string
xdmp#random#1#[$max as xs:unsignedLong]#xs:unsignedLong
xdmp#range-partition-forests#1#$value as xs:anyAtomicType#xs:unsignedLong*
xdmp#redirect-response#1#$name as xs:string#empty-sequence()
xdmp#remove-orphaned-binary#2#$forestID as xs:unsignedLong, $binaryID as xs:unsignedLong#empty-sequence()
xdmp#request#0##xs:unsignedLong
xdmp#request-cancel#3#$hostID as xs:unsignedLong, $serverID as xs:unsignedLong, $requestID as xs:unsignedLong#empty-sequence()
xdmp#request-log-delete#1#$key as xs:string#empty-sequence()
xdmp#request-log-get#1#$key as xs:string#item()
xdmp#request-log-put#2#$key as xs:string, $value as item()#empty-sequence()
xdmp#request-status#3#$host-id as xs:unsignedLong, $server-id as xs:unsignedLong, $request-id as xs:unsignedLong*#element(request-status)*
xdmp#request-timestamp#0##xs:unsignedLong?
xdmp#resolve-uri#2#$relative as xs:string?, [$base as xs:string]#xs:anyURI?
xdmp#restart#2#$hostIDs as xs:unsignedLong*, $reason as xs:string#empty-sequence()
xdmp#rethrow#0##empty-sequence()
xdmp#role#1#$role as xs:string#xs:unsignedLong
xdmp#role-compartment#1#$id as xs:unsignedLong#xs:string
xdmp#role-description#1#$id as xs:unsignedLong#xs:string
xdmp#role-get-default-collections#1#$rolename as xs:string#xs:string*
xdmp#role-get-default-permissions#2#$rolename as xs:string, [$output-kind as xs:string]#item()*
xdmp#role-name#1#$role-id as xs:unsignedLong#xs:string
xdmp#role-privileges#1#$roleId as xs:unsignedLong#xs:unsignedLong*
xdmp#role-roles#2#$name as xs:string, [$inherit as xs:boolean]#xs:unsignedLong*
xdmp#roles#0##xs:unsignedLong*
xdmp#rollback#0##empty-sequence()
xdmp#rsa-generate#1#$options as (element()|map:map)?#xs:string+
xdmp#rshift64#2#$x as xs:unsignedLong, $y as xs:integer#xs:unsignedLong
xdmp#save#3#$path as xs:string, $node as node(), [$options as (element()|map:map)?]#empty-sequence()
xdmp#schema-database#1#[$database-id as xs:unsignedLong]#xs:unsignedLong
xdmp#security-assert#2#$privileges as xs:string*, $kind as xs:string#empty-sequence()
xdmp#security-database#1#[$database-id as xs:unsignedLong]#xs:unsignedLong
xdmp#server#2#[$name as xs:string], [$group as xs:unsignedLong]#xs:unsignedLong+
xdmp#server-collation#1#$id as xs:unsignedLong#xs:string?
xdmp#server-coordinate-system#1#$id as xs:unsignedLong#xs:string?
xdmp#server-database#1#$id as xs:unsignedLong#xs:unsignedLong?
xdmp#server-default-xquery-version#1#$id as xs:unsignedLong#xs:string?
xdmp#server-group#1#$id as xs:unsignedLong#xs:unsignedLong
xdmp#server-kind#1#$id as xs:unsignedLong#xs:string
xdmp#server-modules-database#1#$id as xs:unsignedLong#xs:unsignedLong?
xdmp#server-name#1#$id as xs:unsignedLong#xs:string
xdmp#server-port#1#$id as xs:unsignedLong#xs:unsignedInt?
xdmp#server-root#1#$id as xs:unsignedLong#xs:string?
xdmp#server-ssl-certificate-template#1#$id as xs:unsignedLong#xs:unsignedLong?
xdmp#server-status#2#$host-id as xs:unsignedLong, $server-id as xs:unsignedLong*#element(server-status)*
xdmp#servers#0##xs:unsignedLong*
xdmp#set#2#$variable as item()*, $expr as item()*#empty-sequence()
xdmp#set-request-limit#5#$meter-name as xs:string, $limit as xs:unsignedLong, [$hostID as xs:unsignedLong?], [$serverID as xs:unsignedLong?], [$requestID as xs:unsignedLong?]#empty-sequence()
xdmp#set-request-time-limit#4#$time-limit as xs:unsignedInt, [$hostID as xs:unsignedLong?], [$serverID as xs:unsignedLong?], [$requestID as xs:unsignedLong?]#empty-sequence()
xdmp#set-response-code#2#$code as xs:integer, $message as xs:string#empty-sequence()
xdmp#set-response-content-type#1#$name as xs:string#empty-sequence()
xdmp#set-response-encoding#1#$encoding as xs:string#empty-sequence()
xdmp#set-response-output-method#1#$method as xs:string#empty-sequence()
xdmp#set-server-field#2#$name as xs:string, $value as item()*#item()*
xdmp#set-server-field-privilege#2#$name as xs:string, $privilege as xs:string?#empty-sequence()
xdmp#set-session-field#2#$name as xs:string, $value as item()*#item()*
xdmp#set-transaction-mode#1#$value as xs:string#empty-sequence()
xdmp#set-transaction-name#3#$name as xs:string, [$host-id as xs:unsignedLong], [$txn-id as xs:unsignedLong]#empty-sequence()
xdmp#set-transaction-time-limit#3#$time-limit as xs:unsignedInt, [$host-id as xs:unsignedLong], [$txn-id as xs:unsignedLong]#empty-sequence()
xdmp#sha1#2#$data as item(), [$encoding as xs:string]#xs:string
xdmp#sha256#2#$data as item(), [$encoding as xs:string]#xs:string
xdmp#sha384#2#$data as item(), [$encoding as xs:string]#xs:string
xdmp#sha512#2#$data as item(), [$encoding as xs:string]#xs:string
xdmp#shutdown#3#$hostIDs as xs:unsignedLong*, $reason as xs:string, [$failover as xs:boolean]#empty-sequence()
xdmp#sleep#1#$msec as xs:unsignedInt#empty-sequence()
xdmp#software-version#0##xs:unsignedLong
xdmp#spawn#3#$path as xs:string, [$vars as item()* | map:map], [$options as (element()|map:map)?]#item()*
xdmp#spawn-function#2#$function as function() as item()*, [$options as (element()|map:map)?]#item()*
xdmp#spawn-in#5#$path as xs:string, $ID as xs:unsignedLong, [$vars as item()*], [$modules as xs:unsignedLong?], [$root as xs:string?]#empty-sequence()
xdmp#sql#4#$sql as xs:string, [$options as xs:string*], [$bindings as map:map?], [$query as cts:query?]#item()*
xdmp#sql-plan#2#$sql as xs:string, [$options as xs:string*]#element()
xdmp#start-journal-archiving#3#$forestIDs as xs:unsignedLong*, $journal-archive-path as xs:string, [$lag-limit as xs:unsignedLong?]#empty-sequence()
xdmp#step64#2#$initial as xs:unsignedLong, $step as xs:unsignedLong#xs:unsignedLong
xdmp#stop-journal-archiving#1#$forestIDs as xs:unsignedLong*#empty-sequence()
xdmp#strftime#2#$format as xs:string, $value as xs:dateTime#xs:string
xdmp#subbinary#3#$source as binary(), $starting-location as xs:double, [$length as xs:double]#binary()
xdmp#tidy#2#$doc as xs:string, [$options as (element()|map:map)?]#node()+
xdmp#timestamp-to-wallclock#1#$timestamp as xs:unsignedLong#xs:dateTime
xdmp#to-json#1#$item as item()*#document-node()
xdmp#to-json-string#1#$item as item()*#xs:string
xdmp#trace#2#$name as xs:string, $value as item()*#empty-sequence()
xdmp#trace-enabled#1#$name as xs:string#xs:boolean
xdmp#transaction#2#[$txn-name as xs:string], [$host-id as xs:unsignedLong]#xs:unsignedLong*
xdmp#transaction-commit#2#$host-id as xs:unsignedLong, $txn-id as xs:unsignedLong#empty-sequence()
xdmp#transaction-locks#2#[$host-id as xs:unsignedLong], [$txn-id as xs:unsignedLong]#element(transaction-locks)
xdmp#transaction-rollback#2#$host-id as xs:unsignedLong, $txn-id as xs:unsignedLong#empty-sequence()
xdmp#triggers-database#1#[$database-id as xs:unsignedLong]#xs:unsignedLong
xdmp#type#1#$value as xs:anyAtomicType#xs:QName
xdmp#unpath#3#$expr as xs:string, [$map as map:map?], [$context as node()?]#item()*
xdmp#unquote#3#$arg as xs:string, [$default-namespace as xs:string?], [$options as xs:string*]#document-node()+
xdmp#uri-content-type#1#$uri as xs:string#xs:string
xdmp#uri-format#1#$uri as xs:string#xs:string
xdmp#uri-is-file#1#$uri as xs:string?#xs:boolean?
xdmp#url-decode#1#$encoded as xs:string#xs:string
xdmp#url-encode#2#$plaintext as xs:string, [$noSpacePlus as xs:boolean?]#xs:string
xdmp#user#3#$user as xs:string, [$extSecId as xs:unsignedLong], [$secDbFirst as xs:boolean]#xs:unsignedLong
xdmp#user-external-security#1#$user-id as xs:unsignedLong#element(external-user)?
xdmp#user-get-default-collections#1#$username as xs:string#xs:string*
xdmp#user-get-default-permissions#2#$username as xs:string, [$output-kind as xs:string]#item()*
xdmp#user-last-login#0##element(last-login)?
xdmp#user-privileges#3#$user as xs:string, [$extSecId as xs:unsignedLong], [$secDbFirst as xs:boolean]#xs:unsignedLong*
xdmp#user-roles#3#$name as xs:string, [$extSecId as xs:unsignedLong], [$secDbFirst as xs:boolean]#xs:unsignedLong*
xdmp#userid-roles#3#$userId as xs:unsignedLong, [$extSecId as xs:unsignedLong], [$secDbFirst as xs:boolean]#xs:unsignedLong*
xdmp#validate#3#$node as node(), [$mode as xs:string], [$typeName as xs:QName]#element(xdmp:validation-errors)
xdmp#value#3#$expr as xs:string, [$map as map:map?], [$context as item()?]#item()*
xdmp#version#0##xs:string
xdmp#wallclock-to-timestamp#1#$timestamp as xs:dateTime#xs:unsignedLong
xdmp#week-from-date#1#$arg as xs:date?#xs:integer?
xdmp#weekday-from-date#1#$arg as xs:date?#xs:integer?
xdmp#with-namespaces#2#$nsbindings as (xs:string*|map:map), $expr as item()*#item()*
xdmp#word-convert#3#$doc as node(), $filename as xs:string, [$options as (element()|map:map)?]#node()*
xdmp#x509-certificate-extract#1#$cert as xs:string#element()?
xdmp#x509-certificate-generate#3#$cert as element(x509:cert), [$private-key as xs:string?], [$options as (element()|map:map)?]#xs:string
xdmp#x509-certificate-issuer-name#1#$cert as xs:string#element()?
xdmp#x509-certificate-subject-name#1#$cert as xs:string#element()?
xdmp#xa-complete#4#$forestID as xs:unsignedLong, $txn-id as xs:unsignedLong, $commit as xs:boolean, $remember as xs:boolean#empty-sequence()
xdmp#xa-forget#2#$forestID as xs:unsignedLong, $txn-id as xs:unsignedLong#empty-sequence()
xdmp#xor64#2#$x as xs:unsignedLong, $y as xs:unsignedLong#xs:unsignedLong
xdmp#xquery-version#0##xs:string
xdmp#xslt-eval#4#$stylesheet as node(), [$input as node()?], [$params as map:map?], [$options as (element()|map:map)?]#document-node()*
xdmp#xslt-invoke#4#$path as xs:string, [$input as node()?], [$params as map:map?], [$options as (element()|map:map)?]#document-node()*
xdmp#yearday-from-date#1#$arg as xs:date?#xs:integer?
xdmp#zip-create#2#$manifest as node(), $nodes as node()+#binary()
xdmp#zip-get#3#$zipfile as binary(), $name as xs:string, [$options as (element()|map:map)?]#node()+
xdmp#zip-manifest#1#$zipfile as binary()#element()
xhtml#add-lists#1#$doc as node()?#node()?
xhtml#clean#1#$doc as node()?#node()?
xhtml#restructure#1#$doc as node()?#node()?
xinc#link-expand#2#$context as node(), $ref as element(xi:include)#node()*
xinc#link-references#1#$node as node()#xs:string*
xinc#node-expand#1#$node as node()#node()
xp#alt-path-from-element-scheme#1#$part as xs:string#xs:string?
xp#dereference#2#$context as node(), $xpointer as xs:string#node()*
xp#do-dereference#3#$context as node(), $path as xs:string, $ns-bindings as xs:string*#node()*
xp#parse-xpointer#1#$xpointer as xs:string#element(xp:part)*
xp#path-from-element-scheme#1#$part as xs:string#xs:string
